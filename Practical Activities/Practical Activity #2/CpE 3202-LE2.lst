

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 24 17:30:13 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0006                     _PORTB	set	6
    74  0008                     _PORTD	set	8
    75  0038                     _RC0	set	56
    76  0039                     _RC1	set	57
    77  003A                     _RC2	set	58
    78  0044                     _RD4	set	68
    79  0086                     _TRISB	set	134
    80  0087                     _TRISC	set	135
    81  0088                     _TRISD	set	136
    82                           
    83                           	psect	text0
    84  0000                     __ptext0:	
    85                           ; #config settings
    86                           
    87                           
    88                           ;psect for function _delay
    89  0000                     
    90                           	psect	cinit
    91  07FC                     start_initialization:	
    92  07FC                     __initialization:	
    93  07FC                     end_of_initialization:	
    94                           ;End of C runtime variable initialization code
    95                           
    96  07FC                     __end_of__initialization:	
    97  07FC  0183               	clrf	3
    98  07FD  120A  118A  2F68   	ljmp	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMMON
   101  0070                     __pcstackCOMMON:	
   102  0070                     ?_delay:	
   103  0070                     ?_dataCtrl:	
   104                           ; 0 bytes @ 0x0
   105                           
   106  0070                     ?_instCtrl:	
   107                           ; 0 bytes @ 0x0
   108                           
   109  0070                     ?_initLCD:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_main:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     delay@cnt:	
   116                           ; 0 bytes @ 0x0
   117                           
   118                           
   119                           ; 2 bytes @ 0x0
   120  0070                     	ds	2
   121  0072                     ??_delay:	
   122  0072                     delay@i:	
   123                           ; 0 bytes @ 0x2
   124                           
   125                           
   126                           ; 2 bytes @ 0x2
   127  0072                     	ds	2
   128  0074                     delay@j:	
   129                           
   130                           ; 2 bytes @ 0x4
   131  0074                     	ds	2
   132  0076                     ??_dataCtrl:	
   133  0076                     ??_instCtrl:	
   134                           ; 0 bytes @ 0x6
   135                           
   136  0076                     dataCtrl@DATA:	
   137                           ; 0 bytes @ 0x6
   138                           
   139  0076                     instCtrl@INST:	
   140                           ; 1 bytes @ 0x6
   141                           
   142                           
   143                           ; 1 bytes @ 0x6
   144  0076                     	ds	1
   145  0077                     ??_initLCD:	
   146  0077                     ??_main:	
   147                           ; 0 bytes @ 0x7
   148                           
   149                           
   150                           ; 0 bytes @ 0x7
   151  0077                     	ds	1
   152  0078                     main@i:	
   153                           
   154                           ; 2 bytes @ 0x8
   155  0078                     	ds	2
   156  007A                     main@key:	
   157                           
   158                           ; 1 bytes @ 0xA
   159  007A                     	ds	1
   160                           
   161                           	psect	maintext
   162  0768                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 45 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #2\LE2-3.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;  i               2    8[COMMON] int 
   173 ;;  key             1   10[COMMON] unsigned char 
   174 ;; Return value:  Size  Location     Type
   175 ;;		None               void
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 17F/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   183 ;;      Params:         0       0       0       0       0
   184 ;;      Locals:         3       0       0       0       0
   185 ;;      Temps:          1       0       0       0       0
   186 ;;      Totals:         4       0       0       0       0
   187 ;;Total ram usage:        4 bytes
   188 ;; Hardware stack levels required when called:    3
   189 ;; This function calls:
   190 ;;		_dataCtrl
   191 ;;		_initLCD
   192 ;;		_instCtrl
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           
   199                           ;psect for function _main
   200  0768                     _main:	
   201                           
   202                           ;LE2-3.c: 46: TRISB = 0x00;
   203                           
   204                           ;incstack = 0
   205                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   206  0768  1683               	bsf	3,5	;RP0=1, select bank1
   207  0769  1303               	bcf	3,6	;RP1=0, select bank1
   208  076A  0186               	clrf	6	;volatile
   209                           
   210                           ;LE2-3.c: 47: TRISC = 0x00;
   211  076B  0187               	clrf	7	;volatile
   212                           
   213                           ;LE2-3.c: 48: TRISD = 0xFF;
   214  076C  30FF               	movlw	255
   215  076D  0088               	movwf	8	;volatile
   216                           
   217                           ;LE2-3.c: 49: initLCD();
   218  076E  120A  118A  2720  120A  118A  	fcall	_initLCD
   219                           
   220                           ;LE2-3.c: 50: unsigned char key;
   221                           ;LE2-3.c: 51: int i = 0;
   222  0773  01F8               	clrf	main@i
   223  0774  01F9               	clrf	main@i+1
   224  0775                     l582:	
   225                           ;LE2-3.c: 52: while(1) {
   226                           
   227                           
   228                           ;LE2-3.c: 53: if (RD4 == 1) {
   229  0775  1283               	bcf	3,5	;RP0=0, select bank0
   230  0776  1303               	bcf	3,6	;RP1=0, select bank0
   231  0777  1E08               	btfss	8,4	;volatile
   232  0778  2F75               	goto	l582
   233                           
   234                           ;LE2-3.c: 54: key = PORTD & 0x0F;
   235  0779  0808               	movf	8,w	;volatile
   236  077A  390F               	andlw	15
   237  077B  00F7               	movwf	??_main
   238  077C  0877               	movf	??_main,w
   239  077D  00FA               	movwf	main@key
   240                           
   241                           ;LE2-3.c: 56: if(i >= 80) {
   242  077E  0879               	movf	main@i+1,w
   243  077F  3A80               	xorlw	128
   244  0780  00FF               	movwf	127
   245  0781  3080               	movlw	128
   246  0782  027F               	subwf	127,w
   247  0783  1D03               	skipz
   248  0784  2F87               	goto	u65
   249  0785  3050               	movlw	80
   250  0786  0278               	subwf	main@i,w
   251  0787                     u65:	
   252  0787  1C03               	skipc
   253  0788  2F91               	goto	l592
   254                           
   255                           ;LE2-3.c: 57: initLCD();
   256  0789  120A  118A  2720  120A  118A  	fcall	_initLCD
   257                           
   258                           ;LE2-3.c: 58: i=0;
   259  078E  01F8               	clrf	main@i
   260  078F  01F9               	clrf	main@i+1
   261                           
   262                           ;LE2-3.c: 59: }
   263  0790  2FAA               	goto	l604
   264  0791                     l592:	
   265                           
   266                           ;LE2-3.c: 60: else if(i == 20) {
   267  0791  3014               	movlw	20
   268  0792  0678               	xorwf	main@i,w
   269  0793  0479               	iorwf	main@i+1,w
   270  0794  1D03               	skipz
   271  0795  2F98               	goto	l596
   272                           
   273                           ;LE2-3.c: 61: instCtrl(0xC0);
   274  0796  30C0               	movlw	192
   275  0797  2FA5               	goto	L1
   276  0798                     l596:	
   277                           ;LE2-3.c: 62: }
   278                           
   279                           
   280                           ;LE2-3.c: 63: else if(i == 40) {
   281  0798  3028               	movlw	40
   282  0799  0678               	xorwf	main@i,w
   283  079A  0479               	iorwf	main@i+1,w
   284  079B  1D03               	skipz
   285  079C  2F9F               	goto	l600
   286                           
   287                           ;LE2-3.c: 64: instCtrl(0x94);
   288  079D  3094               	movlw	148
   289  079E  2FA5               	goto	L1
   290  079F                     l600:	
   291                           ;LE2-3.c: 65: }
   292                           
   293                           
   294                           ;LE2-3.c: 66: else if(i == 60) {
   295  079F  303C               	movlw	60
   296  07A0  0678               	xorwf	main@i,w
   297  07A1  0479               	iorwf	main@i+1,w
   298  07A2  1D03               	skipz
   299  07A3  2FAA               	goto	l604
   300                           
   301                           ;LE2-3.c: 67: instCtrl(0xD4);
   302  07A4  30D4               	movlw	212
   303  07A5                     L1:	
   304  07A5  120A  118A  270D  120A  118A  	fcall	_instCtrl
   305  07AA                     l604:	
   306                           
   307                           ;LE2-3.c: 68: }
   308                           ;LE2-3.c: 70: if (key == 0x00) dataCtrl('1');
   309  07AA  08FA               	movf	main@key,f
   310  07AB  1D03               	skipz
   311  07AC  2FAF               	goto	l608
   312  07AD  3031               	movlw	49
   313  07AE  2FF0               	goto	L2
   314  07AF                     l608:	
   315                           
   316                           ;LE2-3.c: 71: else if (key == 0x01) dataCtrl('2');
   317  07AF  087A               	movf	main@key,w
   318  07B0  3A01               	xorlw	1
   319  07B1  1D03               	skipz
   320  07B2  2FB5               	goto	l612
   321  07B3  3032               	movlw	50
   322  07B4  2FF0               	goto	L2
   323  07B5                     l612:	
   324                           
   325                           ;LE2-3.c: 72: else if (key == 0x02) dataCtrl('3');
   326  07B5  087A               	movf	main@key,w
   327  07B6  3A02               	xorlw	2
   328  07B7  1D03               	skipz
   329  07B8  2FBB               	goto	l616
   330  07B9  3033               	movlw	51
   331  07BA  2FF0               	goto	L2
   332  07BB                     l616:	
   333                           
   334                           ;LE2-3.c: 73: else if (key == 0x04) dataCtrl('4');
   335  07BB  087A               	movf	main@key,w
   336  07BC  3A04               	xorlw	4
   337  07BD  1D03               	skipz
   338  07BE  2FC1               	goto	l620
   339  07BF  3034               	movlw	52
   340  07C0  2FF0               	goto	L2
   341  07C1                     l620:	
   342                           
   343                           ;LE2-3.c: 74: else if (key == 0x05) dataCtrl('5');
   344  07C1  087A               	movf	main@key,w
   345  07C2  3A05               	xorlw	5
   346  07C3  1D03               	skipz
   347  07C4  2FC7               	goto	l624
   348  07C5  3035               	movlw	53
   349  07C6  2FF0               	goto	L2
   350  07C7                     l624:	
   351                           
   352                           ;LE2-3.c: 75: else if (key == 0x06) dataCtrl('6');
   353  07C7  087A               	movf	main@key,w
   354  07C8  3A06               	xorlw	6
   355  07C9  1D03               	skipz
   356  07CA  2FCD               	goto	l628
   357  07CB  3036               	movlw	54
   358  07CC  2FF0               	goto	L2
   359  07CD                     l628:	
   360                           
   361                           ;LE2-3.c: 76: else if (key == 0x08) dataCtrl('7');
   362  07CD  087A               	movf	main@key,w
   363  07CE  3A08               	xorlw	8
   364  07CF  1D03               	skipz
   365  07D0  2FD3               	goto	l632
   366  07D1  3037               	movlw	55
   367  07D2  2FF0               	goto	L2
   368  07D3                     l632:	
   369                           
   370                           ;LE2-3.c: 77: else if (key == 0x09) dataCtrl('8');
   371  07D3  087A               	movf	main@key,w
   372  07D4  3A09               	xorlw	9
   373  07D5  1D03               	skipz
   374  07D6  2FD9               	goto	l636
   375  07D7  3038               	movlw	56
   376  07D8  2FF0               	goto	L2
   377  07D9                     l636:	
   378                           
   379                           ;LE2-3.c: 78: else if (key == 0x0A) dataCtrl('9');
   380  07D9  087A               	movf	main@key,w
   381  07DA  3A0A               	xorlw	10
   382  07DB  1D03               	skipz
   383  07DC  2FDF               	goto	l640
   384  07DD  3039               	movlw	57
   385  07DE  2FF0               	goto	L2
   386  07DF                     l640:	
   387                           
   388                           ;LE2-3.c: 79: else if (key == 0x0C) dataCtrl('*');
   389  07DF  087A               	movf	main@key,w
   390  07E0  3A0C               	xorlw	12
   391  07E1  1D03               	skipz
   392  07E2  2FE5               	goto	l644
   393  07E3  302A               	movlw	42
   394  07E4  2FF0               	goto	L2
   395  07E5                     l644:	
   396                           
   397                           ;LE2-3.c: 80: else if (key == 0x0D) dataCtrl('0');
   398  07E5  087A               	movf	main@key,w
   399  07E6  3A0D               	xorlw	13
   400  07E7  1D03               	skipz
   401  07E8  2FEB               	goto	l648
   402  07E9  3030               	movlw	48
   403  07EA  2FF0               	goto	L2
   404  07EB                     l648:	
   405                           
   406                           ;LE2-3.c: 81: else if (key == 0x0E) dataCtrl('#');
   407  07EB  087A               	movf	main@key,w
   408  07EC  3A0E               	xorlw	14
   409  07ED  1D03               	skipz
   410  07EE  2FF5               	goto	l652
   411  07EF  3023               	movlw	35
   412  07F0                     L2:	
   413  07F0  120A  118A  26FA  120A  118A  	fcall	_dataCtrl
   414  07F5                     l652:	
   415                           
   416                           ;LE2-3.c: 82: i++;
   417  07F5  3001               	movlw	1
   418  07F6  07F8               	addwf	main@i,f
   419  07F7  1803               	skipnc
   420  07F8  0AF9               	incf	main@i+1,f
   421  07F9  3000               	movlw	0
   422  07FA  07F9               	addwf	main@i+1,f
   423  07FB  2F75               	goto	l582
   424  07FC                     __end_of_main:	
   425                           
   426                           	psect	text1
   427  0720                     __ptext1:	
   428 ;; *************** function _initLCD *****************
   429 ;; Defined at:
   430 ;;		line 37 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #2\LE2-3.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;		None               void
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    2
   451 ;; This function calls:
   452 ;;		_delay
   453 ;;		_instCtrl
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _initLCD
   461  0720                     _initLCD:	
   462                           
   463                           ;LE2-3.c: 38: delay(1);
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   467  0720  3001               	movlw	1
   468  0721  00F0               	movwf	delay@cnt
   469  0722  3000               	movlw	0
   470  0723  00F1               	movwf	delay@cnt+1
   471  0724  120A  118A  2740  120A  118A  	fcall	_delay
   472                           
   473                           ;LE2-3.c: 39: instCtrl(0x38);
   474  0729  3038               	movlw	56
   475  072A  120A  118A  270D  120A  118A  	fcall	_instCtrl
   476                           
   477                           ;LE2-3.c: 40: instCtrl(0x01);
   478  072F  3001               	movlw	1
   479  0730  120A  118A  270D  120A  118A  	fcall	_instCtrl
   480                           
   481                           ;LE2-3.c: 41: instCtrl(0x06);
   482  0735  3006               	movlw	6
   483  0736  120A  118A  270D  120A  118A  	fcall	_instCtrl
   484                           
   485                           ;LE2-3.c: 42: instCtrl(0x0E);
   486  073B  300E               	movlw	14
   487  073C  120A  118A  270D   	fcall	_instCtrl
   488  073F  0008               	return
   489  0740                     __end_of_initLCD:	
   490                           
   491                           	psect	text2
   492  070D                     __ptext2:	
   493 ;; *************** function _instCtrl *****************
   494 ;; Defined at:
   495 ;;		line 27 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #2\LE2-3.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  INST            1    wreg     unsigned char 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  INST            1    6[COMMON] unsigned char 
   500 ;; Return value:  Size  Location     Type
   501 ;;		None               void
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         1       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         1       0       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels used:    1
   515 ;; Hardware stack levels required when called:    1
   516 ;; This function calls:
   517 ;;		_delay
   518 ;; This function is called by:
   519 ;;		_initLCD
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _instCtrl
   526  070D                     _instCtrl:	
   527                           
   528                           ;incstack = 0
   529                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   530                           ;instCtrl@INST stored from wreg
   531  070D  00F6               	movwf	instCtrl@INST
   532                           
   533                           ;LE2-3.c: 28: PORTB = INST;
   534  070E  0876               	movf	instCtrl@INST,w
   535  070F  1283               	bcf	3,5	;RP0=0, select bank0
   536  0710  1303               	bcf	3,6	;RP1=0, select bank0
   537  0711  0086               	movwf	6	;volatile
   538                           
   539                           ;LE2-3.c: 29: RC0 = 0;
   540  0712  1007               	bcf	7,0	;volatile
   541                           
   542                           ;LE2-3.c: 30: RC2 = 0;
   543  0713  1107               	bcf	7,2	;volatile
   544                           
   545                           ;LE2-3.c: 31: RC1 = 1;
   546  0714  1487               	bsf	7,1	;volatile
   547                           
   548                           ;LE2-3.c: 32: delay(1);
   549  0715  3001               	movlw	1
   550  0716  00F0               	movwf	delay@cnt
   551  0717  3000               	movlw	0
   552  0718  00F1               	movwf	delay@cnt+1
   553  0719  120A  118A  2740   	fcall	_delay
   554                           
   555                           ;LE2-3.c: 33: RC1 = 0;
   556  071C  1283               	bcf	3,5	;RP0=0, select bank0
   557  071D  1303               	bcf	3,6	;RP1=0, select bank0
   558  071E  1087               	bcf	7,1	;volatile
   559  071F  0008               	return
   560  0720                     __end_of_instCtrl:	
   561                           
   562                           	psect	text3
   563  06FA                     __ptext3:	
   564 ;; *************** function _dataCtrl *****************
   565 ;; Defined at:
   566 ;;		line 18 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #2\LE2-3.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  DATA            1    wreg     unsigned char 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  DATA            1    6[COMMON] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;		None               void
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         1       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         1       0       0       0       0
   584 ;;Total ram usage:        1 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		_delay
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _dataCtrl
   596  06FA                     _dataCtrl:	
   597                           
   598                           ;incstack = 0
   599                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   600                           ;dataCtrl@DATA stored from wreg
   601  06FA  00F6               	movwf	dataCtrl@DATA
   602                           
   603                           ;LE2-3.c: 19: PORTB = DATA;
   604  06FB  0876               	movf	dataCtrl@DATA,w
   605  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   606  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   607  06FE  0086               	movwf	6	;volatile
   608                           
   609                           ;LE2-3.c: 20: RC0 = 1;
   610  06FF  1407               	bsf	7,0	;volatile
   611                           
   612                           ;LE2-3.c: 21: RC2 = 0;
   613  0700  1107               	bcf	7,2	;volatile
   614                           
   615                           ;LE2-3.c: 22: RC1 = 1;
   616  0701  1487               	bsf	7,1	;volatile
   617                           
   618                           ;LE2-3.c: 23: delay(1);
   619  0702  3001               	movlw	1
   620  0703  00F0               	movwf	delay@cnt
   621  0704  3000               	movlw	0
   622  0705  00F1               	movwf	delay@cnt+1
   623  0706  120A  118A  2740   	fcall	_delay
   624                           
   625                           ;LE2-3.c: 24: RC1 = 0;
   626  0709  1283               	bcf	3,5	;RP0=0, select bank0
   627  070A  1303               	bcf	3,6	;RP1=0, select bank0
   628  070B  1087               	bcf	7,1	;volatile
   629  070C  0008               	return
   630  070D                     __end_of_dataCtrl:	
   631                           
   632                           	psect	text4
   633  0740                     __ptext4:	
   634 ;; *************** function _delay *****************
   635 ;; Defined at:
   636 ;;		line 12 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #2\LE2-3.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  cnt             2    0[COMMON] int 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  j               2    4[COMMON] int 
   641 ;;  i               2    2[COMMON] int 
   642 ;; Return value:  Size  Location     Type
   643 ;;		None               void
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, btemp+1
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         2       0       0       0       0
   652 ;;      Locals:         4       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         6       0       0       0       0
   655 ;;Total ram usage:        6 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_dataCtrl
   661 ;;		_instCtrl
   662 ;;		_initLCD
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _delay
   668  0740                     _delay:	
   669                           
   670                           ;LE2-3.c: 13: int i, j;
   671                           ;LE2-3.c: 14: for (i = cnt; i != 0; i--);
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _delay: [wreg+status,2+status,0+btemp+1]
   675  0740  0871               	movf	delay@cnt+1,w
   676  0741  01F3               	clrf	delay@i+1
   677  0742  07F3               	addwf	delay@i+1,f
   678  0743  0870               	movf	delay@cnt,w
   679  0744  01F2               	clrf	delay@i
   680  0745  07F2               	addwf	delay@i,f
   681  0746  0873               	movf	delay@i+1,w
   682  0747  0472               	iorwf	delay@i,w
   683  0748  1903               	btfsc	3,2
   684  0749  2F54               	goto	l538
   685  074A                     l534:	
   686  074A  30FF               	movlw	255
   687  074B  07F2               	addwf	delay@i,f
   688  074C  1803               	skipnc
   689  074D  0AF3               	incf	delay@i+1,f
   690  074E  30FF               	movlw	255
   691  074F  07F3               	addwf	delay@i+1,f
   692  0750  0873               	movf	delay@i+1,w
   693  0751  0472               	iorwf	delay@i,w
   694  0752  1D03               	skipz
   695  0753  2F4A               	goto	l534
   696  0754                     l538:	
   697                           
   698                           ;LE2-3.c: 15: for (j = 0; j < 5000; j++);
   699  0754  01F4               	clrf	delay@j
   700  0755  01F5               	clrf	delay@j+1
   701  0756                     L3:	
   702  0756  0875               	movf	delay@j+1,w
   703  0757  3A80               	xorlw	128
   704  0758  00FF               	movwf	127
   705  0759  3093               	movlw	147
   706  075A  027F               	subwf	127,w
   707  075B  1D03               	skipz
   708  075C  2F5F               	goto	u35
   709  075D  3088               	movlw	136
   710  075E  0274               	subwf	delay@j,w
   711  075F                     u35:	
   712  075F  1803               	btfsc	3,0
   713  0760  0008               	return
   714  0761  3001               	movlw	1
   715  0762  07F4               	addwf	delay@j,f
   716  0763  1803               	skipnc
   717  0764  0AF5               	incf	delay@j+1,f
   718  0765  3000               	movlw	0
   719  0766  07F5               	addwf	delay@j+1,f
   720  0767  2F56               	goto	L3
   721  0768                     __end_of_delay:	
   722  007E                     btemp	set	126	;btemp
   723  007E                     wtemp	set	126
   724  007E                     wtemp0	set	126
   725  0080                     wtemp1	set	128
   726  0082                     wtemp2	set	130
   727  0084                     wtemp3	set	132
   728  0086                     wtemp4	set	134
   729  0088                     wtemp5	set	136
   730  007F                     wtemp6	set	127
   731  007E                     ttemp	set	126
   732  007E                     ttemp0	set	126
   733  0081                     ttemp1	set	129
   734  0084                     ttemp2	set	132
   735  0087                     ttemp3	set	135
   736  007F                     ttemp4	set	127
   737  007E                     ltemp	set	126
   738  007E                     ltemp0	set	126
   739  0082                     ltemp1	set	130
   740  0086                     ltemp2	set	134
   741  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dataCtrl
    _main->_instCtrl
    _initLCD->_instCtrl
    _instCtrl->_delay
    _dataCtrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1101
                                              7 COMMON     4     4      0
                           _dataCtrl
                            _initLCD
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     423
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     219
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     219
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     204
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dataCtrl
     _delay
   _initLCD
     _delay
     _instCtrl
       _delay
   _instCtrl
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 24 17:30:13 2025

            __CFG_CP$OFF 0000                       u35 075F                       u65 0787  
                    l600 079F                      l620 07C1                      l612 07B5  
                    l604 07AA                      l534 074A                      l640 07DF  
                    l632 07D3                      l624 07C7                      l616 07BB  
                    l608 07AF                      l538 0754                      l644 07E5  
                    l636 07D9                      l628 07CD                      l652 07F5  
                    l582 0775                      l648 07EB                      l592 0791  
                    l596 0798                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RD4 0044             __CFG_CPD$OFF 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 0768                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
        __end_of_initLCD 0740                    _delay 0740                    main@i 0078  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0077                   ?_delay 0070  
       __end_of_dataCtrl 070D                   delay@i 0072                   delay@j 0074  
       __end_of_instCtrl 0720                ??_initLCD 0077  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 0768                  ??_delay 0072  
             __pmaintext 0768                ?_dataCtrl 0070                ?_instCtrl 0070  
                __ptext0 0000                  __ptext1 0720                  __ptext2 070D  
                __ptext3 06FA                  __ptext4 0740                  _initLCD 0720  
             ??_dataCtrl 0076                  main@key 007A     end_of_initialization 07FC  
             ??_instCtrl 0076             instCtrl@INST 0076      start_initialization 07FC  
           dataCtrl@DATA 0076                ___latbits 0002        __size_of_dataCtrl 0013  
      __size_of_instCtrl 0013                 ?_initLCD 0070           __size_of_delay 0028  
               _dataCtrl 06FA         __size_of_initLCD 0020            __size_of_main 0094  
               _instCtrl 070D                 delay@cnt 0070  
