

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 24 17:39:16 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  0007                     _PORTC	set	7
    76  0008                     _PORTD	set	8
    77  005F                     _GIE	set	95
    78  005C                     _INTE	set	92
    79  0059                     _INTF	set	89
    80  005D                     _TMR0IE	set	93
    81  005A                     _TMR0IF	set	90
    82  0081                     _OPTION_REG	set	129
    83  0086                     _TRISB	set	134
    84  0087                     _TRISC	set	135
    85  0088                     _TRISD	set	136
    86                           
    87                           	psect	text0
    88  0000                     __ptext0:	
    89                           ; #config settings
    90                           
    91                           
    92                           ;psect for function _ISR
    93  0000                     
    94                           	psect	cinit
    95  0015                     start_initialization:	
    96  0015                     __initialization:	
    97                           
    98                           ; Clear objects allocated to BITCOMMON
    99  0015  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   100                           
   101                           ; Clear objects allocated to COMMON
   102  0016  01F8               	clrf	__pbssCOMMON& (0+127)
   103  0017                     end_of_initialization:	
   104                           ;End of C runtime variable initialization code
   105                           
   106  0017                     __end_of__initialization:	
   107  0017  0183               	clrf	3
   108  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   109                           
   110                           	psect	bitbssCOMMON
   111  03B8                     __pbitbssCOMMON:	
   112  03B8                     _count_flag:	
   113  03B8                     	ds	1
   114  03B9                     _int_flag:	
   115  03B9                     	ds	1
   116                           
   117                           	psect	bssCOMMON
   118  0078                     __pbssCOMMON:	
   119  0078                     _key:	
   120  0078                     	ds	1
   121                           
   122                           	psect	cstackCOMMON
   123  0070                     __pcstackCOMMON:	
   124  0070                     ?_ISR:	
   125  0070                     ??_ISR:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 0 bytes @ 0x0
   130                           
   131                           
   132                           ; 0 bytes @ 0x0
   133  0070                     	ds	5
   134  0075                     ?_delay:	
   135  0075                     delay@num:	
   136                           ; 0 bytes @ 0x5
   137                           
   138                           
   139                           ; 2 bytes @ 0x5
   140  0075                     	ds	2
   141                           
   142                           	psect	cstackBANK0
   143  0020                     __pcstackBANK0:	
   144  0020                     ??_delay:	
   145                           
   146                           ; 0 bytes @ 0x0
   147  0020                     	ds	1
   148  0021                     delay@flags:	
   149                           
   150                           ; 2 bytes @ 0x1
   151  0021                     	ds	2
   152  0023                     ??_main:	
   153                           
   154                           ; 0 bytes @ 0x3
   155  0023                     	ds	1
   156                           
   157                           	psect	maintext
   158  001B                     __pmaintext:	
   159 ;;
   160 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   161 ;;
   162 ;; *************** function _main *****************
   163 ;; Defined at:
   164 ;;		line 48 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #3\LE3-3.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;		None               void
   171 ;; Registers used:
   172 ;;		wreg, status,2, status,0, pclath, cstack
   173 ;; Tracked objects:
   174 ;;		On entry : 17F/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   178 ;;      Params:         0       0       0       0       0
   179 ;;      Locals:         0       0       0       0       0
   180 ;;      Temps:          0       1       0       0       0
   181 ;;      Totals:         0       1       0       0       0
   182 ;;Total ram usage:        1 bytes
   183 ;; Hardware stack levels required when called:    2
   184 ;; This function calls:
   185 ;;		_delay
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           
   192                           ;psect for function _main
   193  001B                     _main:	
   194                           
   195                           ;LE3-3.c: 49: TRISB = 0xFF;
   196                           
   197                           ;incstack = 0
   198                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   199  001B  30FF               	movlw	255
   200  001C  1683               	bsf	3,5	;RP0=1, select bank1
   201  001D  1303               	bcf	3,6	;RP1=0, select bank1
   202  001E  0086               	movwf	6	;volatile
   203                           
   204                           ;LE3-3.c: 50: TRISC = 0x00;
   205  001F  0187               	clrf	7	;volatile
   206                           
   207                           ;LE3-3.c: 51: TRISD = 0xFF;
   208  0020  30FF               	movlw	255
   209  0021  0088               	movwf	8	;volatile
   210                           
   211                           ;LE3-3.c: 53: OPTION_REG = 0xC4;
   212  0022  30C4               	movlw	196
   213  0023  0081               	movwf	1	;volatile
   214                           
   215                           ;LE3-3.c: 54: INTE = 1;
   216  0024  160B               	bsf	11,4	;volatile
   217                           
   218                           ;LE3-3.c: 55: INTF = 0;
   219  0025  108B               	bcf	11,1	;volatile
   220                           
   221                           ;LE3-3.c: 57: TMR0IE = 1;
   222  0026  168B               	bsf	11,5	;volatile
   223                           
   224                           ;LE3-3.c: 58: TMR0IF = 0;
   225  0027  110B               	bcf	11,2	;volatile
   226                           
   227                           ;LE3-3.c: 61: GIE = 1;
   228  0028  178B               	bsf	11,7	;volatile
   229                           
   230                           ;LE3-3.c: 64: PORTC = 0x00;
   231  0029  1283               	bcf	3,5	;RP0=0, select bank0
   232  002A  1303               	bcf	3,6	;RP1=0, select bank0
   233  002B                     L9:	
   234  002B  0187               	clrf	7	;volatile
   235  002C                     l708:	
   236                           ;LE3-3.c: 66: while(1) {
   237                           
   238                           
   239                           ;LE3-3.c: 68: if(int_flag == 1) {
   240  002C  1CF7               	btfss	_int_flag/(0+8),_int_flag& (0+7)
   241  002D  2864               	goto	l748
   242                           
   243                           ;LE3-3.c: 69: if (key == 0x00) {PORTC = 0x01;}
   244  002E  08F8               	movf	_key,f
   245  002F  1D03               	skipz
   246  0030  2833               	goto	l714
   247  0031  3001               	movlw	1
   248  0032  2862               	goto	L8
   249  0033                     l714:	
   250                           
   251                           ;LE3-3.c: 70: else if (key == 0x01) {PORTC = 0x02;}
   252  0033  0878               	movf	_key,w
   253  0034  3A01               	xorlw	1
   254  0035  1D03               	skipz
   255  0036  2839               	goto	l718
   256  0037  3002               	movlw	2
   257  0038  2862               	goto	L8
   258  0039                     l718:	
   259                           
   260                           ;LE3-3.c: 71: else if (key == 0x02) {PORTC = 0x03;}
   261  0039  0878               	movf	_key,w
   262  003A  3A02               	xorlw	2
   263  003B  1D03               	skipz
   264  003C  283F               	goto	l722
   265  003D  3003               	movlw	3
   266  003E  2862               	goto	L8
   267  003F                     l722:	
   268                           
   269                           ;LE3-3.c: 72: else if (key == 0x04) {PORTC = 0x04;}
   270  003F  0878               	movf	_key,w
   271  0040  3A04               	xorlw	4
   272  0041  1D03               	skipz
   273  0042  2845               	goto	l726
   274  0043  3004               	movlw	4
   275  0044  2862               	goto	L8
   276  0045                     l726:	
   277                           
   278                           ;LE3-3.c: 73: else if (key == 0x05) {PORTC = 0x05;}
   279  0045  0878               	movf	_key,w
   280  0046  3A05               	xorlw	5
   281  0047  1D03               	skipz
   282  0048  284B               	goto	l730
   283  0049  3005               	movlw	5
   284  004A  2862               	goto	L8
   285  004B                     l730:	
   286                           
   287                           ;LE3-3.c: 74: else if (key == 0x06) {PORTC = 0x06;}
   288  004B  0878               	movf	_key,w
   289  004C  3A06               	xorlw	6
   290  004D  1D03               	skipz
   291  004E  2851               	goto	l734
   292  004F  3006               	movlw	6
   293  0050  2862               	goto	L8
   294  0051                     l734:	
   295                           
   296                           ;LE3-3.c: 75: else if (key == 0x08) {PORTC = 0x07;}
   297  0051  0878               	movf	_key,w
   298  0052  3A08               	xorlw	8
   299  0053  1D03               	skipz
   300  0054  2857               	goto	l738
   301  0055  3007               	movlw	7
   302  0056  2862               	goto	L8
   303  0057                     l738:	
   304                           
   305                           ;LE3-3.c: 76: else if (key == 0x09) {PORTC = 0x08;}
   306  0057  0878               	movf	_key,w
   307  0058  3A09               	xorlw	9
   308  0059  1D03               	skipz
   309  005A  285D               	goto	l742
   310  005B  3008               	movlw	8
   311  005C  2862               	goto	L8
   312  005D                     l742:	
   313                           
   314                           ;LE3-3.c: 77: else if (key == 0x0A) {PORTC = 0x09;}
   315  005D  0878               	movf	_key,w
   316  005E  3A0A               	xorlw	10
   317  005F  1D03               	skipz
   318  0060  2863               	goto	l746
   319  0061  3009               	movlw	9
   320  0062                     L8:	
   321  0062  0087               	movwf	7	;volatile
   322  0063                     l746:	
   323                           
   324                           ;LE3-3.c: 78: int_flag = 0;
   325  0063  10F7               	bcf	_int_flag/(0+8),_int_flag& (0+7)
   326  0064                     l748:	
   327                           
   328                           ;LE3-3.c: 79: }
   329                           ;LE3-3.c: 80: delay(98);
   330  0064  3062               	movlw	98
   331  0065  00F5               	movwf	delay@num
   332  0066  3000               	movlw	0
   333  0067  00F6               	movwf	delay@num+1
   334  0068  120A  118A  2078  120A  118A  	fcall	_delay
   335                           
   336                           ;LE3-3.c: 82: if(PORTC == 0x09) {
   337  006D  1283               	bcf	3,5	;RP0=0, select bank0
   338  006E  1303               	bcf	3,6	;RP1=0, select bank0
   339  006F  0807               	movf	7,w	;volatile
   340  0070  3A09               	xorlw	9
   341  0071  1903               	btfsc	3,2
   342  0072  282B               	goto	L9
   343                           
   344                           ;LE3-3.c: 85: else {
   345                           ;LE3-3.c: 86: PORTC++;
   346                           
   347                           ;LE3-3.c: 84: }
   348                           
   349                           ;LE3-3.c: 83: PORTC = 0x00;
   350  0073  3001               	movlw	1
   351  0074  00A3               	movwf	??_main
   352  0075  0823               	movf	??_main,w
   353  0076  0787               	addwf	7,f	;volatile
   354  0077  282C               	goto	l708
   355  0078                     __end_of_main:	
   356                           
   357                           	psect	text1
   358  0078                     __ptext1:	
   359 ;; *************** function _delay *****************
   360 ;; Defined at:
   361 ;;		line 16 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #3\LE3-3.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  num             2    5[COMMON] int 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  flags           2    1[BANK0 ] int 
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg, status,2
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         2       0       0       0       0
   376 ;;      Locals:         0       2       0       0       0
   377 ;;      Temps:          0       1       0       0       0
   378 ;;      Totals:         2       3       0       0       0
   379 ;;Total ram usage:        5 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _delay
   391  0078                     _delay:	
   392                           
   393                           ;LE3-3.c: 18: int flags = 0;
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _delay: [wreg+status,2]
   397  0078  1283               	bcf	3,5	;RP0=0, select bank0
   398  0079  1303               	bcf	3,6	;RP1=0, select bank0
   399  007A  01A1               	clrf	delay@flags
   400  007B  01A2               	clrf	delay@flags+1
   401  007C                     l31:	
   402                           ;LE3-3.c: 20: while (flags < num) {
   403                           
   404  007C  1283               	bcf	3,5	;RP0=0, select bank0
   405  007D  1303               	bcf	3,6	;RP1=0, select bank0
   406  007E  0822               	movf	delay@flags+1,w
   407  007F  3A80               	xorlw	128
   408  0080  00A0               	movwf	??_delay
   409  0081  0876               	movf	delay@num+1,w
   410  0082  3A80               	xorlw	128
   411  0083  0220               	subwf	??_delay,w
   412  0084  1D03               	skipz
   413  0085  2888               	goto	u305
   414  0086  0875               	movf	delay@num,w
   415  0087  0221               	subwf	delay@flags,w
   416  0088                     u305:	
   417  0088  1803               	btfsc	3,0
   418  0089  0008               	return
   419                           
   420                           ;LE3-3.c: 21: if(count_flag) {
   421  008A  1C77               	btfss	_count_flag/(0+8),_count_flag& (0+7)
   422  008B  287C               	goto	l31
   423                           
   424                           ;LE3-3.c: 22: count_flag = 0;
   425  008C  1077               	bcf	_count_flag/(0+8),_count_flag& (0+7)
   426                           
   427                           ;LE3-3.c: 23: flags++;
   428  008D  3001               	movlw	1
   429  008E  1283               	bcf	3,5	;RP0=0, select bank0
   430  008F  1303               	bcf	3,6	;RP1=0, select bank0
   431  0090  07A1               	addwf	delay@flags,f
   432  0091  1803               	skipnc
   433  0092  0AA2               	incf	delay@flags+1,f
   434  0093  3000               	movlw	0
   435  0094  07A2               	addwf	delay@flags+1,f
   436  0095  287C               	goto	l31
   437  0096                     __end_of_delay:	
   438                           
   439                           	psect	text2
   440  0096                     __ptext2:	
   441 ;; *************** function _ISR *****************
   442 ;; Defined at:
   443 ;;		line 28 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #3\LE3-3.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		wreg, status,2
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          5       0       0       0       0
   460 ;;      Totals:         5       0       0       0       0
   461 ;;Total ram usage:        5 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		Interrupt level 1
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _ISR
   472  0096                     _ISR:	
   473                           
   474                           ;LE3-3.c: 30: GIE = 0;
   475  0096  138B               	bcf	11,7	;volatile
   476                           
   477                           ;LE3-3.c: 32: if(INTF) {
   478  0097  1C8B               	btfss	11,1	;volatile
   479  0098  28A2               	goto	i1l38
   480                           
   481                           ;LE3-3.c: 34: INTF = 0;
   482  0099  108B               	bcf	11,1	;volatile
   483                           
   484                           ;LE3-3.c: 35: int_flag ^= 1;
   485  009A  3002               	movlw	(0+1) shl (_int_flag& (0+7))
   486  009B  06F7               	xorwf	_int_flag/(0+8),f
   487                           
   488                           ;LE3-3.c: 36: key = PORTD & 0x0F;
   489  009C  0808               	movf	8,w	;volatile
   490  009D  390F               	andlw	15
   491  009E  00F0               	movwf	??_ISR
   492  009F  0870               	movf	??_ISR,w
   493  00A0  00F8               	movwf	_key
   494                           
   495                           ;LE3-3.c: 37: }
   496  00A1  28A6               	goto	i1l39
   497  00A2                     i1l38:	
   498                           
   499                           ;LE3-3.c: 38: else if(TMR0IF) {
   500  00A2  1D0B               	btfss	11,2	;volatile
   501  00A3  28A6               	goto	i1l39
   502                           
   503                           ;LE3-3.c: 39: TMR0IF = 0;
   504  00A4  110B               	bcf	11,2	;volatile
   505                           
   506                           ;LE3-3.c: 40: count_flag = 1;
   507  00A5  1477               	bsf	_count_flag/(0+8),_count_flag& (0+7)
   508  00A6                     i1l39:	
   509                           
   510                           ;LE3-3.c: 41: }
   511                           ;LE3-3.c: 42: GIE = 1;
   512  00A6  178B               	bsf	11,7	;volatile
   513  00A7  0874               	movf	??_ISR+4,w
   514  00A8  00FF               	movwf	127
   515  00A9  0873               	movf	??_ISR+3,w
   516  00AA  008A               	movwf	10
   517  00AB  0872               	movf	??_ISR+2,w
   518  00AC  0084               	movwf	4
   519  00AD  0E71               	swapf	(??_ISR+1)^(0+-128),w
   520  00AE  0083               	movwf	3
   521  00AF  0EFE               	swapf	126,f
   522  00B0  0E7E               	swapf	126,w
   523  00B1  0009               	retfie
   524  00B2                     __end_of_ISR:	
   525  007E                     btemp	set	126	;btemp
   526  007E                     wtemp	set	126
   527  007E                     wtemp0	set	126
   528  0080                     wtemp1	set	128
   529  0082                     wtemp2	set	130
   530  0084                     wtemp3	set	132
   531  0086                     wtemp4	set	134
   532  0088                     wtemp5	set	136
   533  007F                     wtemp6	set	127
   534  007E                     ttemp	set	126
   535  007E                     ttemp0	set	126
   536  0081                     ttemp1	set	129
   537  0084                     ttemp2	set	132
   538  0087                     ttemp3	set	135
   539  007F                     ttemp4	set	127
   540  007E                     ltemp	set	126
   541  007E                     ltemp0	set	126
   542  0082                     ltemp1	set	130
   543  0086                     ltemp2	set	134
   544  0080                     ltemp3	set	128
   545                           
   546                           	psect	intentry
   547  0004                     __pintentry:	
   548                           ;incstack = 0
   549                           ; Regs used in _ISR: [wreg+status,2]
   550                           
   551  0004                     interrupt_function:	
   552  007E                     saved_w	set	btemp
   553  0004  00FE               	movwf	btemp
   554  0005  0E03               	swapf	3,w
   555  0006  00F1               	movwf	??_ISR+1
   556  0007  0804               	movf	4,w
   557  0008  00F2               	movwf	??_ISR+2
   558  0009  080A               	movf	10,w
   559  000A  00F3               	movwf	??_ISR+3
   560  000B  1283               	bcf	3,5	;RP0=0, select bank0
   561  000C  1303               	bcf	3,6	;RP1=0, select bank0
   562  000D  087F               	movf	btemp+1,w
   563  000E  00F4               	movwf	??_ISR+4
   564  000F  120A  118A  2896   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     133
                                              3 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     133
                                              5 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 24 17:39:16 2025

            __CFG_CP$OFF 0000                       l31 007C                      l730 004B  
                    l722 003F                      l714 0033                      l708 002C  
                    l742 005D                      l734 0051                      l726 0045  
                    l718 0039                      l738 0057                      l746 0063  
                    l748 0064                      _GIE 005F                      u305 0088  
           __CFG_CPD$OFF 0000                      _ISR 0096                      _key 0078  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _INTE 005C                     _INTF 0059  
                   i1l38 00A2                     i1l39 00A6             __CFG_WRT$OFF 0000  
                   _main 001B                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _delay 0078           __pbitbssCOMMON 03B8  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0078                   ??_main 0023  
                 ?_delay 0075                   _TMR0IE 005D                   _TMR0IF 005A  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0070  
          __end_of_delay 0096                  ??_delay 0020               __pmaintext 001B  
             __pintentry 0004               _count_flag 03B8                  __ptext0 0000  
                __ptext1 0078                  __ptext2 0096             __size_of_ISR 001C  
             delay@flags 0021     end_of_initialization 0017      start_initialization 0015  
            __end_of_ISR 00B2              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020           __size_of_delay 001E        interrupt_function 0004  
          __size_of_main 005D                 _int_flag 03B9                 delay@num 0075  
               intlevel1 0000               _OPTION_REG 0081  
