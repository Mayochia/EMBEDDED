

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 19 00:30:35 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  000E                     	;# 
    36  000F                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0014                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  0081                     	;# 
    56  0085                     	;# 
    57  0086                     	;# 
    58  0087                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61  008C                     	;# 
    62  008D                     	;# 
    63  008E                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0098                     	;# 
    69  0099                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  010F                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80                           
    81                           	psect	idataBANK0
    82  04BA                     __pidataBANK0:	
    83                           
    84                           ;initializer for _period_freq
    85  04BA  3412               	retlw	18
    86  04BB  3403               	retlw	3
    87  04BC  343B               	retlw	59
    88  04BD  3412               	retlw	18
    89  04BE  3483               	retlw	131
    90  04BF  343A               	retlw	58
    91  04C0  3412               	retlw	18
    92  04C1  3403               	retlw	3
    93  04C2  343A               	retlw	58
    94                           
    95                           ;initializer for _freq_PR2
    96  04C3  347C               	retlw	124
    97  04C4  343E               	retlw	62
    98  04C5  341E               	retlw	30
    99                           
   100                           ;initializer for _percent
   101  04C6  34CD               	retlw	205
   102  04C7  34CC               	retlw	204
   103  04C8  343D               	retlw	61
   104                           
   105                           	psect	nvBANK0
   106  0059                     __pnvBANK0:	
   107  0059                     _period:	
   108  0059                     	ds	3
   109  0017                     _CCP1CON	set	23
   110  0015                     _CCPR1L	set	21
   111  0012                     _T2CON	set	18
   112  0030                     _RB0	set	48
   113  0031                     _RB1	set	49
   114  003A                     _RC2	set	58
   115  0092                     _PR2	set	146
   116  0086                     _TRISB	set	134
   117  0087                     _TRISC	set	135
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  07EC                     start_initialization:	
   123  07EC                     __initialization:	
   124                           
   125                           ; Clear objects allocated to BANK0
   126  07EC  01D5               	clrf	__pbssBANK0& (0+127)
   127  07ED  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   128  07EE  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   129  07EF  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   130                           
   131                           ; Initialize objects allocated to BANK0
   132  07F0  1383               	bcf	3,7	;select IRP bank0
   133  07F1  3055               	movlw	low (__pdataBANK0+15)
   134  07F2  00FD               	movwf	btemp+-1
   135  07F3  3004               	movlw	high __pidataBANK0
   136  07F4  00FE               	movwf	btemp
   137  07F5  30BA               	movlw	low __pidataBANK0
   138  07F6  00FF               	movwf	btemp+1
   139  07F7  3046               	movlw	low __pdataBANK0
   140  07F8  0084               	movwf	4
   141  07F9  120A  118A  24DE   	fcall	init_ram0
   142  07FC                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  07FC                     __end_of__initialization:	
   146  07FC  0183               	clrf	3
   147  07FD  120A  118A  2E75   	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	bssBANK0
   150  0055                     __pbssBANK0:	
   151  0055                     _cnt_cycle:	
   152  0055                     	ds	2
   153  0057                     _cnt_freq:	
   154  0057                     	ds	2
   155                           
   156                           	psect	dataBANK0
   157  0046                     __pdataBANK0:	
   158  0046                     _period_freq:	
   159  0046                     	ds	9
   160  004F                     _freq_PR2:	
   161  004F                     	ds	3
   162  0052                     _percent:	
   163  0052                     	ds	3
   164                           
   165                           	psect	inittext
   166  04DA                     init_fetch0:	
   167                           ;	Called with low address in FSR and high address in W
   168                           
   169  04DA  087E               	movf	126,w
   170  04DB  008A               	movwf	10
   171  04DC  087F               	movf	127,w
   172  04DD  0082               	movwf	2
   173  04DE                     init_ram0:	
   174                           ;Called with:
   175                           ;	high address of idata address in btemp 
   176                           ;	low address of idata address in btemp+1 
   177                           ;	low address of data in FSR
   178                           ;	high address + 1 of data in btemp-1
   179                           
   180  04DE  24DA  120A  118A   	fcall	init_fetch0
   181  04E1  0080               	movwf	0
   182  04E2  0A84               	incf	4,f
   183  04E3  0804               	movf	4,w
   184  04E4  067D               	xorwf	125,w
   185  04E5  1903               	btfsc	3,2
   186  04E6  3400               	retlw	0
   187  04E7  0AFF               	incf	127,f
   188  04E8  1903               	btfsc	3,2
   189  04E9  0AFE               	incf	126,f
   190  04EA  2CDE               	goto	init_ram0
   191                           
   192                           	psect	cstackCOMMON
   193  0070                     __pcstackCOMMON:	
   194  0070                     ?_dutyCycle:	
   195  0070                     ?_main:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?___bmul:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?___ftpack:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ___bmul@multiplicand:	
   205                           ; 3 bytes @ 0x0
   206                           
   207  0070                     ___ftpack@arg:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 3 bytes @ 0x0
   212  0070                     	ds	1
   213  0071                     ??___bmul:	
   214                           
   215                           ; 0 bytes @ 0x1
   216  0071                     	ds	1
   217  0072                     ___bmul@product:	
   218                           
   219                           ; 1 bytes @ 0x2
   220  0072                     	ds	1
   221  0073                     ___bmul@multiplier:	
   222  0073                     ___ftpack@exp:	
   223                           ; 1 bytes @ 0x3
   224                           
   225                           
   226                           ; 1 bytes @ 0x3
   227  0073                     	ds	1
   228  0074                     ___ftpack@sign:	
   229                           
   230                           ; 1 bytes @ 0x4
   231  0074                     	ds	1
   232  0075                     ??___ftpack:	
   233                           
   234                           ; 0 bytes @ 0x5
   235  0075                     	ds	3
   236  0078                     ?___awtoft:	
   237  0078                     ___awtoft@c:	
   238                           ; 3 bytes @ 0x8
   239                           
   240                           
   241                           ; 2 bytes @ 0x8
   242  0078                     	ds	3
   243  007B                     ??___awtoft:	
   244                           
   245                           ; 0 bytes @ 0xB
   246  007B                     	ds	2
   247  007D                     ___awtoft@sign:	
   248                           
   249                           ; 1 bytes @ 0xD
   250  007D                     	ds	1
   251                           
   252                           	psect	cstackBANK0
   253  0020                     __pcstackBANK0:	
   254  0020                     ?___ftmul:	
   255  0020                     ___ftmul@f1:	
   256                           ; 3 bytes @ 0x0
   257                           
   258                           
   259                           ; 3 bytes @ 0x0
   260  0020                     	ds	3
   261  0023                     ___ftmul@f2:	
   262                           
   263                           ; 3 bytes @ 0x3
   264  0023                     	ds	3
   265  0026                     ??___ftmul:	
   266                           
   267                           ; 0 bytes @ 0x6
   268  0026                     	ds	4
   269  002A                     ___ftmul@exp:	
   270                           
   271                           ; 1 bytes @ 0xA
   272  002A                     	ds	1
   273  002B                     ___ftmul@f3_as_product:	
   274                           
   275                           ; 3 bytes @ 0xB
   276  002B                     	ds	3
   277  002E                     ___ftmul@cntr:	
   278                           
   279                           ; 1 bytes @ 0xE
   280  002E                     	ds	1
   281  002F                     ___ftmul@sign:	
   282                           
   283                           ; 1 bytes @ 0xF
   284  002F                     	ds	1
   285  0030                     ?___fttol:	
   286  0030                     ___fttol@f1:	
   287                           ; 4 bytes @ 0x10
   288                           
   289                           
   290                           ; 3 bytes @ 0x10
   291  0030                     	ds	4
   292  0034                     ??___fttol:	
   293                           
   294                           ; 0 bytes @ 0x14
   295  0034                     	ds	4
   296  0038                     ___fttol@sign1:	
   297                           
   298                           ; 1 bytes @ 0x18
   299  0038                     	ds	1
   300  0039                     ___fttol@lval:	
   301                           
   302                           ; 4 bytes @ 0x19
   303  0039                     	ds	4
   304  003D                     ___fttol@exp1:	
   305                           
   306                           ; 1 bytes @ 0x1D
   307  003D                     	ds	1
   308  003E                     ??_dutyCycle:	
   309                           
   310                           ; 0 bytes @ 0x1E
   311  003E                     	ds	2
   312  0040                     dutyCycle@PWM_time:	
   313                           
   314                           ; 3 bytes @ 0x20
   315  0040                     	ds	3
   316  0043                     dutyCycle@result:	
   317                           
   318                           ; 2 bytes @ 0x23
   319  0043                     	ds	2
   320  0045                     ??_main:	
   321                           
   322                           ; 0 bytes @ 0x25
   323  0045                     	ds	1
   324                           
   325                           	psect	maintext
   326  0675                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 30 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #4\LE4-7\LE4-7.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;		None               void
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 17F/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          0       1       0       0       0
   349 ;;      Totals:         0       1       0       0       0
   350 ;;Total ram usage:        1 bytes
   351 ;; Hardware stack levels required when called:    3
   352 ;; This function calls:
   353 ;;		___bmul
   354 ;;		_dutyCycle
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           
   361                           ;psect for function _main
   362  0675                     _main:	
   363                           
   364                           ;LE4-7.c: 32: TRISB = 0x03;
   365                           
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   368  0675  3003               	movlw	3
   369  0676  1683               	bsf	3,5	;RP0=1, select bank1
   370  0677  1303               	bcf	3,6	;RP1=0, select bank1
   371  0678  0086               	movwf	6	;volatile
   372                           
   373                           ;LE4-7.c: 33: TRISC = 0x00;
   374  0679  0187               	clrf	7	;volatile
   375                           
   376                           ;LE4-7.c: 35: PR2 = freq_PR2[0];
   377  067A  1283               	bcf	3,5	;RP0=0, select bank0
   378  067B  1303               	bcf	3,6	;RP1=0, select bank0
   379  067C  084F               	movf	_freq_PR2,w
   380  067D  1683               	bsf	3,5	;RP0=1, select bank1
   381  067E  1303               	bcf	3,6	;RP1=0, select bank1
   382  067F  0092               	movwf	18	;volatile
   383                           
   384                           ;LE4-7.c: 36: period = period_freq[0];
   385  0680  1283               	bcf	3,5	;RP0=0, select bank0
   386  0681  1303               	bcf	3,6	;RP1=0, select bank0
   387  0682  0846               	movf	_period_freq,w
   388  0683  00D9               	movwf	_period
   389  0684  0847               	movf	_period_freq+1,w
   390  0685  00DA               	movwf	_period+1
   391  0686  0848               	movf	_period_freq+2,w
   392  0687  00DB               	movwf	_period+2
   393                           
   394                           ;LE4-7.c: 38: CCPR1L = 0x0C;
   395  0688  300C               	movlw	12
   396  0689  0095               	movwf	21	;volatile
   397                           
   398                           ;LE4-7.c: 39: CCP1CON = 0x2C;
   399  068A  302C               	movlw	44
   400  068B  0097               	movwf	23	;volatile
   401                           
   402                           ;LE4-7.c: 41: RC2 = 0;
   403  068C  1107               	bcf	7,2	;volatile
   404                           
   405                           ;LE4-7.c: 42: T2CON = 0x06;
   406  068D  3006               	movlw	6
   407  068E  0092               	movwf	18	;volatile
   408  068F                     l945:	
   409                           ;LE4-7.c: 44: while(1)
   410                           
   411                           
   412                           ;LE4-7.c: 45: {
   413                           ;LE4-7.c: 46: if(RB0){
   414  068F  1C06               	btfss	6,0	;volatile
   415  0690  2ED2               	goto	l37
   416                           
   417                           ;LE4-7.c: 47: cnt_freq++;
   418  0691  3001               	movlw	1
   419  0692  07D7               	addwf	_cnt_freq,f
   420  0693  1803               	skipnc
   421  0694  0AD8               	incf	_cnt_freq+1,f
   422  0695  3000               	movlw	0
   423  0696  07D8               	addwf	_cnt_freq+1,f
   424                           
   425                           ;LE4-7.c: 48: if(cnt_freq > 2)
   426  0697  0858               	movf	_cnt_freq+1,w
   427  0698  3A80               	xorlw	128
   428  0699  00FF               	movwf	127
   429  069A  3080               	movlw	128
   430  069B  027F               	subwf	127,w
   431  069C  1D03               	skipz
   432  069D  2EA0               	goto	u855
   433  069E  3003               	movlw	3
   434  069F  0257               	subwf	_cnt_freq,w
   435  06A0                     u855:	
   436  06A0  1C03               	skipc
   437  06A1  2EA6               	goto	l953
   438                           
   439                           ;LE4-7.c: 49: cnt_freq = 0;
   440  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   441  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   442  06A4  01D7               	clrf	_cnt_freq
   443  06A5  01D8               	clrf	_cnt_freq+1
   444  06A6                     l953:	
   445                           
   446                           ;LE4-7.c: 51: PR2 = freq_PR2[cnt_freq];
   447  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   448  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   449  06A8  0857               	movf	_cnt_freq,w
   450  06A9  3E4F               	addlw	_freq_PR2& (0+255)
   451  06AA  0084               	movwf	4
   452  06AB  1383               	bcf	3,7	;select IRP bank0
   453  06AC  0800               	movf	0,w
   454  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   455  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   456  06AF  0092               	movwf	18	;volatile
   457                           
   458                           ;LE4-7.c: 52: period = period_freq[cnt_freq];
   459  06B0  3003               	movlw	3
   460  06B1  1283               	bcf	3,5	;RP0=0, select bank0
   461  06B2  1303               	bcf	3,6	;RP1=0, select bank0
   462  06B3  00C5               	movwf	??_main
   463  06B4  0845               	movf	??_main,w
   464  06B5  00F0               	movwf	___bmul@multiplicand
   465  06B6  0857               	movf	_cnt_freq,w
   466  06B7  120A  118A  24C9  120A  118A  	fcall	___bmul
   467  06BC  3E46               	addlw	_period_freq& (0+255)
   468  06BD  0084               	movwf	4
   469  06BE  1383               	bcf	3,7	;select IRP bank0
   470  06BF  0800               	movf	0,w
   471  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   472  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   473  06C2  00D9               	movwf	_period
   474  06C3  0A84               	incf	4,f
   475  06C4  0800               	movf	0,w
   476  06C5  00DA               	movwf	_period+1
   477  06C6  0A84               	incf	4,f
   478  06C7  0800               	movf	0,w
   479  06C8  00DB               	movwf	_period+2
   480                           
   481                           ;LE4-7.c: 54: dutyCycle();
   482  06C9  120A  118A  2574  120A  118A  	fcall	_dutyCycle
   483  06CE                     l39:	
   484                           ;LE4-7.c: 55: while(RB0);
   485                           
   486  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   487  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   488  06D0  1806               	btfsc	6,0	;volatile
   489  06D1  2ECE               	goto	l39
   490  06D2                     l37:	
   491                           
   492                           ;LE4-7.c: 56: }
   493                           ;LE4-7.c: 58: if(RB1){
   494  06D2  1C86               	btfss	6,1	;volatile
   495  06D3  2E8F               	goto	l945
   496                           
   497                           ;LE4-7.c: 59: cnt_cycle++;
   498  06D4  3001               	movlw	1
   499  06D5  07D5               	addwf	_cnt_cycle,f
   500  06D6  1803               	skipnc
   501  06D7  0AD6               	incf	_cnt_cycle+1,f
   502  06D8  3000               	movlw	0
   503  06D9  07D6               	addwf	_cnt_cycle+1,f
   504                           
   505                           ;LE4-7.c: 60: switch(cnt_cycle){
   506  06DA  2EF9               	goto	l977
   507  06DB                     l961:	
   508                           ;LE4-7.c: 61: case 0: percent = 0.1; break;
   509                           
   510  06DB  2EF2               	goto	L8
   511  06DC                     l963:	
   512                           ;LE4-7.c: 62: case 1: percent = 0.25; break;
   513                           
   514  06DC  3000               	movlw	0
   515  06DD  00D2               	movwf	_percent
   516  06DE  3080               	movlw	128
   517  06DF  00D3               	movwf	_percent+1
   518  06E0  303E               	movlw	62
   519  06E1  2EF7               	goto	L5
   520  06E2                     l965:	
   521                           ;LE4-7.c: 63: case 2: percent = 0.5; break;
   522                           
   523  06E2  3000               	movlw	0
   524  06E3  00D2               	movwf	_percent
   525  06E4  3000               	movlw	0
   526  06E5  2EED               	goto	L7
   527  06E6                     l967:	
   528                           ;LE4-7.c: 64: case 3: percent = 0.75; break;
   529                           
   530  06E6  3000               	movlw	0
   531  06E7  00D2               	movwf	_percent
   532  06E8  3040               	movlw	64
   533  06E9  2EED               	goto	L7
   534  06EA                     l969:	
   535                           ;LE4-7.c: 65: case 4: percent = 0.95; break;
   536                           
   537  06EA  3033               	movlw	51
   538  06EB  00D2               	movwf	_percent
   539  06EC  3073               	movlw	115
   540  06ED                     L7:	
   541  06ED  00D3               	movwf	_percent+1
   542  06EE  303F               	movlw	63
   543  06EF  2EF7               	goto	L5
   544  06F0                     l971:	
   545                           ;LE4-7.c: 66: default: cnt_cycle = 0; percent = 0.1; break;
   546                           
   547  06F0  01D5               	clrf	_cnt_cycle
   548  06F1  01D6               	clrf	_cnt_cycle+1
   549  06F2                     L8:	
   550  06F2  30CD               	movlw	205
   551  06F3  00D2               	movwf	_percent
   552  06F4  30CC               	movlw	204
   553  06F5  00D3               	movwf	_percent+1
   554  06F6  303D               	movlw	61
   555  06F7                     L5:	
   556  06F7  00D4               	movwf	_percent+2
   557                           
   558                           ;LE4-7.c: 67: }
   559  06F8  2F0F               	goto	l979
   560  06F9                     l977:	
   561                           
   562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   563                           ; Switch size 1, requested type "space"
   564                           ; Number of cases is 1, Range of values is 0 to 0
   565                           ; switch strategies available:
   566                           ; Name         Instructions Cycles
   567                           ; simple_byte            4     3 (average)
   568                           ; direct_byte           11     8 (fixed)
   569                           ; jumptable            260     6 (fixed)
   570                           ;	Chosen strategy is simple_byte
   571  06F9  0856               	movf	_cnt_cycle+1,w
   572  06FA  3A00               	xorlw	0	; case 0
   573  06FB  1903               	skipnz
   574  06FC  2EFE               	goto	l1017
   575  06FD  2EF0               	goto	l971
   576  06FE                     l1017:	
   577                           
   578                           ; Switch size 1, requested type "space"
   579                           ; Number of cases is 5, Range of values is 0 to 4
   580                           ; switch strategies available:
   581                           ; Name         Instructions Cycles
   582                           ; simple_byte           16     9 (average)
   583                           ; direct_byte           23     8 (fixed)
   584                           ; jumptable            260     6 (fixed)
   585                           ;	Chosen strategy is simple_byte
   586  06FE  0855               	movf	_cnt_cycle,w
   587  06FF  3A00               	xorlw	0	; case 0
   588  0700  1903               	skipnz
   589  0701  2EDB               	goto	l961
   590  0702  3A01               	xorlw	1	; case 1
   591  0703  1903               	skipnz
   592  0704  2EDC               	goto	l963
   593  0705  3A03               	xorlw	3	; case 2
   594  0706  1903               	skipnz
   595  0707  2EE2               	goto	l965
   596  0708  3A01               	xorlw	1	; case 3
   597  0709  1903               	skipnz
   598  070A  2EE6               	goto	l967
   599  070B  3A07               	xorlw	7	; case 4
   600  070C  1903               	skipnz
   601  070D  2EEA               	goto	l969
   602  070E  2EF0               	goto	l971
   603  070F                     l979:	
   604                           
   605                           ;LE4-7.c: 69: dutyCycle();
   606  070F  120A  118A  2574  120A  118A  	fcall	_dutyCycle
   607  0714                     l51:	
   608                           ;LE4-7.c: 70: while(RB1);
   609                           
   610  0714  1283               	bcf	3,5	;RP0=0, select bank0
   611  0715  1303               	bcf	3,6	;RP1=0, select bank0
   612  0716  1C86               	btfss	6,1	;volatile
   613  0717  2E8F               	goto	l945
   614  0718  2F14               	goto	l51
   615  0719                     __end_of_main:	
   616                           
   617                           	psect	text1
   618  0574                     __ptext1:	
   619 ;; *************** function _dutyCycle *****************
   620 ;; Defined at:
   621 ;;		line 19 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #4\LE4-7\LE4-7.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  PWM_time        3   32[BANK0 ] float 
   626 ;;  result          2   35[BANK0 ] unsigned int 
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       5       0       0       0
   638 ;;      Temps:          0       2       0       0       0
   639 ;;      Totals:         0       7       0       0       0
   640 ;;Total ram usage:        7 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		___awtoft
   645 ;;		___ftmul
   646 ;;		___fttol
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _dutyCycle
   654  0574                     _dutyCycle:	
   655                           
   656                           ;LE4-7.c: 20: unsigned int result = 0;
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _dutyCycle: [wreg+status,2+status,0+pclath+cstack]
   660  0574  1283               	bcf	3,5	;RP0=0, select bank0
   661  0575  1303               	bcf	3,6	;RP1=0, select bank0
   662  0576  01C3               	clrf	dutyCycle@result
   663  0577  01C4               	clrf	dutyCycle@result+1
   664                           
   665                           ;LE4-7.c: 21: float PWM_time = 0;
   666  0578  3000               	movlw	0
   667  0579  00C0               	movwf	dutyCycle@PWM_time
   668  057A  3000               	movlw	0
   669  057B  00C1               	movwf	dutyCycle@PWM_time+1
   670  057C  3000               	movlw	0
   671  057D  00C2               	movwf	dutyCycle@PWM_time+2
   672                           
   673                           ;LE4-7.c: 23: PWM_time = percent * (PR2 + 1);
   674  057E  0852               	movf	_percent,w
   675  057F  00A0               	movwf	___ftmul@f1
   676  0580  0853               	movf	_percent+1,w
   677  0581  00A1               	movwf	___ftmul@f1+1
   678  0582  0854               	movf	_percent+2,w
   679  0583  00A2               	movwf	___ftmul@f1+2
   680  0584  1683               	bsf	3,5	;RP0=1, select bank1
   681  0585  1303               	bcf	3,6	;RP1=0, select bank1
   682  0586  0812               	movf	18,w	;volatile
   683  0587  3E01               	addlw	1
   684  0588  00F8               	movwf	___awtoft@c
   685  0589  3000               	movlw	0
   686  058A  1803               	skipnc
   687  058B  3001               	movlw	1
   688  058C  00F9               	movwf	___awtoft@c+1
   689  058D  120A  118A  24EB  120A  118A  	fcall	___awtoft
   690  0592  0878               	movf	?___awtoft,w
   691  0593  1283               	bcf	3,5	;RP0=0, select bank0
   692  0594  1303               	bcf	3,6	;RP1=0, select bank0
   693  0595  00A3               	movwf	___ftmul@f2
   694  0596  0879               	movf	?___awtoft+1,w
   695  0597  00A4               	movwf	___ftmul@f2+1
   696  0598  087A               	movf	?___awtoft+2,w
   697  0599  00A5               	movwf	___ftmul@f2+2
   698  059A  120A  118A  2719  120A  118A  	fcall	___ftmul
   699  059F  1283               	bcf	3,5	;RP0=0, select bank0
   700  05A0  1303               	bcf	3,6	;RP1=0, select bank0
   701  05A1  0820               	movf	?___ftmul,w
   702  05A2  00C0               	movwf	dutyCycle@PWM_time
   703  05A3  0821               	movf	?___ftmul+1,w
   704  05A4  00C1               	movwf	dutyCycle@PWM_time+1
   705  05A5  0822               	movf	?___ftmul+2,w
   706  05A6  00C2               	movwf	dutyCycle@PWM_time+2
   707                           
   708                           ;LE4-7.c: 24: result = (unsigned int)(PWM_time * 4);
   709  05A7  0840               	movf	dutyCycle@PWM_time,w
   710  05A8  00A3               	movwf	___ftmul@f2
   711  05A9  0841               	movf	dutyCycle@PWM_time+1,w
   712  05AA  00A4               	movwf	___ftmul@f2+1
   713  05AB  0842               	movf	dutyCycle@PWM_time+2,w
   714  05AC  00A5               	movwf	___ftmul@f2+2
   715  05AD  3000               	movlw	0
   716  05AE  00A0               	movwf	___ftmul@f1
   717  05AF  3080               	movlw	128
   718  05B0  00A1               	movwf	___ftmul@f1+1
   719  05B1  3040               	movlw	64
   720  05B2  00A2               	movwf	___ftmul@f1+2
   721  05B3  120A  118A  2719  120A  118A  	fcall	___ftmul
   722  05B8  1283               	bcf	3,5	;RP0=0, select bank0
   723  05B9  1303               	bcf	3,6	;RP1=0, select bank0
   724  05BA  0820               	movf	?___ftmul,w
   725  05BB  00B0               	movwf	___fttol@f1
   726  05BC  0821               	movf	?___ftmul+1,w
   727  05BD  00B1               	movwf	___fttol@f1+1
   728  05BE  0822               	movf	?___ftmul+2,w
   729  05BF  00B2               	movwf	___fttol@f1+2
   730  05C0  120A  118A  25E7  120A  118A  	fcall	___fttol
   731  05C5  1283               	bcf	3,5	;RP0=0, select bank0
   732  05C6  1303               	bcf	3,6	;RP1=0, select bank0
   733  05C7  0831               	movf	?___fttol+1,w
   734  05C8  01C4               	clrf	dutyCycle@result+1
   735  05C9  07C4               	addwf	dutyCycle@result+1,f
   736  05CA  0830               	movf	?___fttol,w
   737  05CB  01C3               	clrf	dutyCycle@result
   738  05CC  07C3               	addwf	dutyCycle@result,f
   739                           
   740                           ;LE4-7.c: 26: CCPR1L = result >> 2;
   741  05CD  0844               	movf	dutyCycle@result+1,w
   742  05CE  00BF               	movwf	??_dutyCycle+1
   743  05CF  0843               	movf	dutyCycle@result,w
   744  05D0  00BE               	movwf	??_dutyCycle
   745  05D1  1003               	clrc
   746  05D2  0CBF               	rrf	??_dutyCycle+1,f
   747  05D3  0CBE               	rrf	??_dutyCycle,f
   748  05D4  1003               	clrc
   749  05D5  0CBF               	rrf	??_dutyCycle+1,f
   750  05D6  0CBE               	rrf	??_dutyCycle,f
   751  05D7  083E               	movf	??_dutyCycle,w
   752  05D8  0095               	movwf	21	;volatile
   753                           
   754                           ;LE4-7.c: 27: CCP1CON = ((result & 0x03) << 4) | 0x0C;
   755  05D9  0843               	movf	dutyCycle@result,w
   756  05DA  3903               	andlw	3
   757  05DB  00BE               	movwf	??_dutyCycle
   758  05DC  3003               	movlw	3
   759  05DD                     u815:	
   760  05DD  1003               	clrc
   761  05DE  0DBE               	rlf	??_dutyCycle,f
   762  05DF  3EFF               	addlw	-1
   763  05E0  1D03               	skipz
   764  05E1  2DDD               	goto	u815
   765  05E2  1003               	clrc
   766  05E3  0D3E               	rlf	??_dutyCycle,w
   767  05E4  380C               	iorlw	12
   768  05E5  0097               	movwf	23	;volatile
   769  05E6  0008               	return
   770  05E7                     __end_of_dutyCycle:	
   771                           
   772                           	psect	text2
   773  05E7                     __ptext2:	
   774 ;; *************** function ___fttol *****************
   775 ;; Defined at:
   776 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  f1              3   16[BANK0 ] float 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  lval            4   25[BANK0 ] unsigned long 
   781 ;;  exp1            1   29[BANK0 ] unsigned char 
   782 ;;  sign1           1   24[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  4   16[BANK0 ] long 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       4       0       0       0
   793 ;;      Locals:         0       6       0       0       0
   794 ;;      Temps:          0       4       0       0       0
   795 ;;      Totals:         0      14       0       0       0
   796 ;;Total ram usage:       14 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_dutyCycle
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function ___fttol
   807  05E7                     ___fttol:	
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   811  05E7  1283               	bcf	3,5	;RP0=0, select bank0
   812  05E8  1303               	bcf	3,6	;RP1=0, select bank0
   813  05E9  0830               	movf	___fttol@f1,w
   814  05EA  00B4               	movwf	??___fttol
   815  05EB  0831               	movf	___fttol@f1+1,w
   816  05EC  00B5               	movwf	??___fttol+1
   817  05ED  0832               	movf	___fttol@f1+2,w
   818  05EE  00B6               	movwf	??___fttol+2
   819  05EF  1003               	clrc
   820  05F0  0D35               	rlf	??___fttol+1,w
   821  05F1  0D36               	rlf	??___fttol+2,w
   822  05F2  00B7               	movwf	??___fttol+3
   823  05F3  0837               	movf	??___fttol+3,w
   824  05F4  00BD               	movwf	___fttol@exp1
   825  05F5  08BD               	movf	___fttol@exp1,f
   826  05F6  1D03               	skipz
   827  05F7  2E01               	goto	l863
   828  05F8  3000               	movlw	0
   829  05F9  00B3               	movwf	?___fttol+3
   830  05FA  3000               	movlw	0
   831  05FB  00B2               	movwf	?___fttol+2
   832  05FC  3000               	movlw	0
   833  05FD  00B1               	movwf	?___fttol+1
   834  05FE  3000               	movlw	0
   835  05FF  00B0               	movwf	?___fttol
   836  0600  0008               	return
   837  0601                     l863:	
   838  0601  0830               	movf	___fttol@f1,w
   839  0602  00B4               	movwf	??___fttol
   840  0603  0831               	movf	___fttol@f1+1,w
   841  0604  00B5               	movwf	??___fttol+1
   842  0605  0832               	movf	___fttol@f1+2,w
   843  0606  00B6               	movwf	??___fttol+2
   844  0607  3017               	movlw	23
   845  0608                     u725:	
   846  0608  1003               	clrc
   847  0609  0CB6               	rrf	??___fttol+2,f
   848  060A  0CB5               	rrf	??___fttol+1,f
   849  060B  0CB4               	rrf	??___fttol,f
   850  060C  3EFF               	addlw	-1
   851  060D  1D03               	skipz
   852  060E  2E08               	goto	u725
   853  060F  0834               	movf	??___fttol,w
   854  0610  00B7               	movwf	??___fttol+3
   855  0611  0837               	movf	??___fttol+3,w
   856  0612  00B8               	movwf	___fttol@sign1
   857  0613  17B1               	bsf	___fttol@f1+1,7
   858  0614  30FF               	movlw	255
   859  0615  05B0               	andwf	___fttol@f1,f
   860  0616  30FF               	movlw	255
   861  0617  05B1               	andwf	___fttol@f1+1,f
   862  0618  3000               	movlw	0
   863  0619  05B2               	andwf	___fttol@f1+2,f
   864  061A  0830               	movf	___fttol@f1,w
   865  061B  00B9               	movwf	___fttol@lval
   866  061C  0831               	movf	___fttol@f1+1,w
   867  061D  00BA               	movwf	___fttol@lval+1
   868  061E  0832               	movf	___fttol@f1+2,w
   869  061F  00BB               	movwf	___fttol@lval+2
   870  0620  01BC               	clrf	___fttol@lval+3
   871  0621  308E               	movlw	142
   872  0622  02BD               	subwf	___fttol@exp1,f
   873  0623  1FBD               	btfss	___fttol@exp1,7
   874  0624  2E43               	goto	l883
   875  0625  083D               	movf	___fttol@exp1,w
   876  0626  3A80               	xorlw	128
   877  0627  3E8F               	addlw	143
   878  0628  1803               	skipnc
   879  0629  2E33               	goto	l881
   880  062A  3000               	movlw	0
   881  062B  00B3               	movwf	?___fttol+3
   882  062C  3000               	movlw	0
   883  062D  00B2               	movwf	?___fttol+2
   884  062E  3000               	movlw	0
   885  062F  00B1               	movwf	?___fttol+1
   886  0630  3000               	movlw	0
   887  0631  00B0               	movwf	?___fttol
   888  0632  0008               	return
   889  0633                     l881:	
   890  0633  3001               	movlw	1
   891  0634                     u755:	
   892  0634  1003               	clrc
   893  0635  0CBC               	rrf	___fttol@lval+3,f
   894  0636  0CBB               	rrf	___fttol@lval+2,f
   895  0637  0CBA               	rrf	___fttol@lval+1,f
   896  0638  0CB9               	rrf	___fttol@lval,f
   897  0639  3EFF               	addlw	-1
   898  063A  1D03               	skipz
   899  063B  2E34               	goto	u755
   900  063C  3001               	movlw	1
   901  063D  00B4               	movwf	??___fttol
   902  063E  0834               	movf	??___fttol,w
   903  063F  07BD               	addwf	___fttol@exp1,f
   904  0640  1903               	btfsc	3,2
   905  0641  2E5E               	goto	l893
   906  0642  2E33               	goto	l881
   907  0643                     l883:	
   908  0643  3018               	movlw	24
   909  0644  023D               	subwf	___fttol@exp1,w
   910  0645  1C03               	skipc
   911  0646  2E5B               	goto	l891
   912  0647  3000               	movlw	0
   913  0648  00B3               	movwf	?___fttol+3
   914  0649  3000               	movlw	0
   915  064A  00B2               	movwf	?___fttol+2
   916  064B  3000               	movlw	0
   917  064C  00B1               	movwf	?___fttol+1
   918  064D  3000               	movlw	0
   919  064E  00B0               	movwf	?___fttol
   920  064F  0008               	return
   921  0650                     l889:	
   922  0650  3001               	movlw	1
   923  0651  00B4               	movwf	??___fttol
   924  0652                     u785:	
   925  0652  1003               	clrc
   926  0653  0DB9               	rlf	___fttol@lval,f
   927  0654  0DBA               	rlf	___fttol@lval+1,f
   928  0655  0DBB               	rlf	___fttol@lval+2,f
   929  0656  0DBC               	rlf	___fttol@lval+3,f
   930  0657  0BB4               	decfsz	??___fttol,f
   931  0658  2E52               	goto	u785
   932  0659  3001               	movlw	1
   933  065A  02BD               	subwf	___fttol@exp1,f
   934  065B                     l891:	
   935  065B  08BD               	movf	___fttol@exp1,f
   936  065C  1D03               	skipz
   937  065D  2E50               	goto	l889
   938  065E                     l893:	
   939  065E  0838               	movf	___fttol@sign1,w
   940  065F  1903               	btfsc	3,2
   941  0660  2E6C               	goto	l897
   942  0661  09B9               	comf	___fttol@lval,f
   943  0662  09BA               	comf	___fttol@lval+1,f
   944  0663  09BB               	comf	___fttol@lval+2,f
   945  0664  09BC               	comf	___fttol@lval+3,f
   946  0665  0AB9               	incf	___fttol@lval,f
   947  0666  1903               	skipnz
   948  0667  0ABA               	incf	___fttol@lval+1,f
   949  0668  1903               	skipnz
   950  0669  0ABB               	incf	___fttol@lval+2,f
   951  066A  1903               	skipnz
   952  066B  0ABC               	incf	___fttol@lval+3,f
   953  066C                     l897:	
   954  066C  083C               	movf	___fttol@lval+3,w
   955  066D  00B3               	movwf	?___fttol+3
   956  066E  083B               	movf	___fttol@lval+2,w
   957  066F  00B2               	movwf	?___fttol+2
   958  0670  083A               	movf	___fttol@lval+1,w
   959  0671  00B1               	movwf	?___fttol+1
   960  0672  0839               	movf	___fttol@lval,w
   961  0673  00B0               	movwf	?___fttol
   962  0674  0008               	return
   963  0675                     __end_of___fttol:	
   964                           
   965                           	psect	text3
   966  0719                     __ptext3:	
   967 ;; *************** function ___ftmul *****************
   968 ;; Defined at:
   969 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  f1              3    0[BANK0 ] float 
   972 ;;  f2              3    3[BANK0 ] float 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
   975 ;;  sign            1   15[BANK0 ] unsigned char 
   976 ;;  cntr            1   14[BANK0 ] unsigned char 
   977 ;;  exp             1   10[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  3    0[BANK0 ] float 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       6       0       0       0
   988 ;;      Locals:         0       6       0       0       0
   989 ;;      Temps:          0       4       0       0       0
   990 ;;      Totals:         0      16       0       0       0
   991 ;;Total ram usage:       16 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		___ftpack
   996 ;; This function is called by:
   997 ;;		_dutyCycle
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function ___ftmul
  1003  0719                     ___ftmul:	
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1007  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1008  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1009  071B  0820               	movf	___ftmul@f1,w
  1010  071C  00A6               	movwf	??___ftmul
  1011  071D  0821               	movf	___ftmul@f1+1,w
  1012  071E  00A7               	movwf	??___ftmul+1
  1013  071F  0822               	movf	___ftmul@f1+2,w
  1014  0720  00A8               	movwf	??___ftmul+2
  1015  0721  1003               	clrc
  1016  0722  0D27               	rlf	??___ftmul+1,w
  1017  0723  0D28               	rlf	??___ftmul+2,w
  1018  0724  00A9               	movwf	??___ftmul+3
  1019  0725  0829               	movf	??___ftmul+3,w
  1020  0726  00AA               	movwf	___ftmul@exp
  1021  0727  08AA               	movf	___ftmul@exp,f
  1022  0728  1D03               	skipz
  1023  0729  2F31               	goto	l813
  1024  072A  3000               	movlw	0
  1025  072B  00A0               	movwf	?___ftmul
  1026  072C  3000               	movlw	0
  1027  072D  00A1               	movwf	?___ftmul+1
  1028  072E  3000               	movlw	0
  1029  072F  00A2               	movwf	?___ftmul+2
  1030  0730  0008               	return
  1031  0731                     l813:	
  1032  0731  0823               	movf	___ftmul@f2,w
  1033  0732  00A6               	movwf	??___ftmul
  1034  0733  0824               	movf	___ftmul@f2+1,w
  1035  0734  00A7               	movwf	??___ftmul+1
  1036  0735  0825               	movf	___ftmul@f2+2,w
  1037  0736  00A8               	movwf	??___ftmul+2
  1038  0737  1003               	clrc
  1039  0738  0D27               	rlf	??___ftmul+1,w
  1040  0739  0D28               	rlf	??___ftmul+2,w
  1041  073A  00A9               	movwf	??___ftmul+3
  1042  073B  0829               	movf	??___ftmul+3,w
  1043  073C  00AF               	movwf	___ftmul@sign
  1044  073D  08AF               	movf	___ftmul@sign,f
  1045  073E  1D03               	skipz
  1046  073F  2F47               	goto	l819
  1047  0740  3000               	movlw	0
  1048  0741  00A0               	movwf	?___ftmul
  1049  0742  3000               	movlw	0
  1050  0743  00A1               	movwf	?___ftmul+1
  1051  0744  3000               	movlw	0
  1052  0745  00A2               	movwf	?___ftmul+2
  1053  0746  0008               	return
  1054  0747                     l819:	
  1055  0747  082F               	movf	___ftmul@sign,w
  1056  0748  3E7B               	addlw	123
  1057  0749  00A6               	movwf	??___ftmul
  1058  074A  0826               	movf	??___ftmul,w
  1059  074B  07AA               	addwf	___ftmul@exp,f
  1060  074C  0820               	movf	___ftmul@f1,w
  1061  074D  00A6               	movwf	??___ftmul
  1062  074E  0821               	movf	___ftmul@f1+1,w
  1063  074F  00A7               	movwf	??___ftmul+1
  1064  0750  0822               	movf	___ftmul@f1+2,w
  1065  0751  00A8               	movwf	??___ftmul+2
  1066  0752  3010               	movlw	16
  1067  0753                     u595:	
  1068  0753  1003               	clrc
  1069  0754  0CA8               	rrf	??___ftmul+2,f
  1070  0755  0CA7               	rrf	??___ftmul+1,f
  1071  0756  0CA6               	rrf	??___ftmul,f
  1072  0757  3EFF               	addlw	-1
  1073  0758  1D03               	skipz
  1074  0759  2F53               	goto	u595
  1075  075A  0826               	movf	??___ftmul,w
  1076  075B  00A9               	movwf	??___ftmul+3
  1077  075C  0829               	movf	??___ftmul+3,w
  1078  075D  00AF               	movwf	___ftmul@sign
  1079  075E  0823               	movf	___ftmul@f2,w
  1080  075F  00A6               	movwf	??___ftmul
  1081  0760  0824               	movf	___ftmul@f2+1,w
  1082  0761  00A7               	movwf	??___ftmul+1
  1083  0762  0825               	movf	___ftmul@f2+2,w
  1084  0763  00A8               	movwf	??___ftmul+2
  1085  0764  3010               	movlw	16
  1086  0765                     u605:	
  1087  0765  1003               	clrc
  1088  0766  0CA8               	rrf	??___ftmul+2,f
  1089  0767  0CA7               	rrf	??___ftmul+1,f
  1090  0768  0CA6               	rrf	??___ftmul,f
  1091  0769  3EFF               	addlw	-1
  1092  076A  1D03               	skipz
  1093  076B  2F65               	goto	u605
  1094  076C  0826               	movf	??___ftmul,w
  1095  076D  00A9               	movwf	??___ftmul+3
  1096  076E  0829               	movf	??___ftmul+3,w
  1097  076F  06AF               	xorwf	___ftmul@sign,f
  1098  0770  3080               	movlw	128
  1099  0771  00A6               	movwf	??___ftmul
  1100  0772  0826               	movf	??___ftmul,w
  1101  0773  05AF               	andwf	___ftmul@sign,f
  1102  0774  17A1               	bsf	___ftmul@f1+1,7
  1103  0775  17A4               	bsf	___ftmul@f2+1,7
  1104  0776  30FF               	movlw	255
  1105  0777  05A3               	andwf	___ftmul@f2,f
  1106  0778  30FF               	movlw	255
  1107  0779  05A4               	andwf	___ftmul@f2+1,f
  1108  077A  3000               	movlw	0
  1109  077B  05A5               	andwf	___ftmul@f2+2,f
  1110  077C  3000               	movlw	0
  1111  077D  00AB               	movwf	___ftmul@f3_as_product
  1112  077E  3000               	movlw	0
  1113  077F  00AC               	movwf	___ftmul@f3_as_product+1
  1114  0780  3000               	movlw	0
  1115  0781  00AD               	movwf	___ftmul@f3_as_product+2
  1116  0782  3007               	movlw	7
  1117  0783  00A6               	movwf	??___ftmul
  1118  0784  0826               	movf	??___ftmul,w
  1119  0785  00AE               	movwf	___ftmul@cntr
  1120  0786                     l831:	
  1121  0786  1C20               	btfss	___ftmul@f1,0
  1122  0787  2F96               	goto	l835
  1123  0788  0823               	movf	___ftmul@f2,w
  1124  0789  07AB               	addwf	___ftmul@f3_as_product,f
  1125  078A  0824               	movf	___ftmul@f2+1,w
  1126  078B  1103               	clrz
  1127  078C  1803               	skipnc
  1128  078D  0A24               	incf	___ftmul@f2+1,w
  1129  078E  1D03               	btfss	3,2
  1130  078F  07AC               	addwf	___ftmul@f3_as_product+1,f
  1131  0790  0825               	movf	___ftmul@f2+2,w
  1132  0791  1103               	clrz
  1133  0792  1803               	skipnc
  1134  0793  0A25               	incf	___ftmul@f2+2,w
  1135  0794  1D03               	btfss	3,2
  1136  0795  07AD               	addwf	___ftmul@f3_as_product+2,f
  1137  0796                     l835:	
  1138  0796  3001               	movlw	1
  1139  0797                     u635:	
  1140  0797  1003               	clrc
  1141  0798  0CA2               	rrf	___ftmul@f1+2,f
  1142  0799  0CA1               	rrf	___ftmul@f1+1,f
  1143  079A  0CA0               	rrf	___ftmul@f1,f
  1144  079B  3EFF               	addlw	-1
  1145  079C  1D03               	skipz
  1146  079D  2F97               	goto	u635
  1147  079E  3001               	movlw	1
  1148  079F                     u645:	
  1149  079F  1003               	clrc
  1150  07A0  0DA3               	rlf	___ftmul@f2,f
  1151  07A1  0DA4               	rlf	___ftmul@f2+1,f
  1152  07A2  0DA5               	rlf	___ftmul@f2+2,f
  1153  07A3  3EFF               	addlw	-1
  1154  07A4  1D03               	skipz
  1155  07A5  2F9F               	goto	u645
  1156  07A6  3001               	movlw	1
  1157  07A7  02AE               	subwf	___ftmul@cntr,f
  1158  07A8  1D03               	btfss	3,2
  1159  07A9  2F86               	goto	l831
  1160  07AA  3009               	movlw	9
  1161  07AB  00A6               	movwf	??___ftmul
  1162  07AC  0826               	movf	??___ftmul,w
  1163  07AD  00AE               	movwf	___ftmul@cntr
  1164  07AE                     l843:	
  1165  07AE  1C20               	btfss	___ftmul@f1,0
  1166  07AF  2FBE               	goto	l847
  1167  07B0  0823               	movf	___ftmul@f2,w
  1168  07B1  07AB               	addwf	___ftmul@f3_as_product,f
  1169  07B2  0824               	movf	___ftmul@f2+1,w
  1170  07B3  1103               	clrz
  1171  07B4  1803               	skipnc
  1172  07B5  0A24               	incf	___ftmul@f2+1,w
  1173  07B6  1D03               	btfss	3,2
  1174  07B7  07AC               	addwf	___ftmul@f3_as_product+1,f
  1175  07B8  0825               	movf	___ftmul@f2+2,w
  1176  07B9  1103               	clrz
  1177  07BA  1803               	skipnc
  1178  07BB  0A25               	incf	___ftmul@f2+2,w
  1179  07BC  1D03               	btfss	3,2
  1180  07BD  07AD               	addwf	___ftmul@f3_as_product+2,f
  1181  07BE                     l847:	
  1182  07BE  3001               	movlw	1
  1183  07BF                     u685:	
  1184  07BF  1003               	clrc
  1185  07C0  0CA2               	rrf	___ftmul@f1+2,f
  1186  07C1  0CA1               	rrf	___ftmul@f1+1,f
  1187  07C2  0CA0               	rrf	___ftmul@f1,f
  1188  07C3  3EFF               	addlw	-1
  1189  07C4  1D03               	skipz
  1190  07C5  2FBF               	goto	u685
  1191  07C6  3001               	movlw	1
  1192  07C7                     u695:	
  1193  07C7  1003               	clrc
  1194  07C8  0CAD               	rrf	___ftmul@f3_as_product+2,f
  1195  07C9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  1196  07CA  0CAB               	rrf	___ftmul@f3_as_product,f
  1197  07CB  3EFF               	addlw	-1
  1198  07CC  1D03               	skipz
  1199  07CD  2FC7               	goto	u695
  1200  07CE  3001               	movlw	1
  1201  07CF  02AE               	subwf	___ftmul@cntr,f
  1202  07D0  1D03               	btfss	3,2
  1203  07D1  2FAE               	goto	l843
  1204  07D2  082B               	movf	___ftmul@f3_as_product,w
  1205  07D3  00F0               	movwf	___ftpack@arg
  1206  07D4  082C               	movf	___ftmul@f3_as_product+1,w
  1207  07D5  00F1               	movwf	___ftpack@arg+1
  1208  07D6  082D               	movf	___ftmul@f3_as_product+2,w
  1209  07D7  00F2               	movwf	___ftpack@arg+2
  1210  07D8  082A               	movf	___ftmul@exp,w
  1211  07D9  00A6               	movwf	??___ftmul
  1212  07DA  0826               	movf	??___ftmul,w
  1213  07DB  00F3               	movwf	___ftpack@exp
  1214  07DC  082F               	movf	___ftmul@sign,w
  1215  07DD  00A7               	movwf	??___ftmul+1
  1216  07DE  0827               	movf	??___ftmul+1,w
  1217  07DF  00F4               	movwf	___ftpack@sign
  1218  07E0  120A  118A  250C   	fcall	___ftpack
  1219  07E3  0870               	movf	?___ftpack,w
  1220  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1221  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1222  07E6  00A0               	movwf	?___ftmul
  1223  07E7  0871               	movf	?___ftpack+1,w
  1224  07E8  00A1               	movwf	?___ftmul+1
  1225  07E9  0872               	movf	?___ftpack+2,w
  1226  07EA  00A2               	movwf	?___ftmul+2
  1227  07EB  0008               	return
  1228  07EC                     __end_of___ftmul:	
  1229                           
  1230                           	psect	text4
  1231  04EB                     __ptext4:	
  1232 ;; *************** function ___awtoft *****************
  1233 ;; Defined at:
  1234 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  c               2    8[COMMON] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  sign            1   13[COMMON] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  3    8[COMMON] float 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         3       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0
  1250 ;;      Temps:          2       0       0       0       0
  1251 ;;      Totals:         6       0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		___ftpack
  1257 ;; This function is called by:
  1258 ;;		_dutyCycle
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function ___awtoft
  1264  04EB                     ___awtoft:	
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1268  04EB  01FD               	clrf	___awtoft@sign
  1269  04EC  1FF9               	btfss	___awtoft@c+1,7
  1270  04ED  2CF5               	goto	l803
  1271  04EE  09F8               	comf	___awtoft@c,f
  1272  04EF  09F9               	comf	___awtoft@c+1,f
  1273  04F0  0AF8               	incf	___awtoft@c,f
  1274  04F1  1903               	skipnz
  1275  04F2  0AF9               	incf	___awtoft@c+1,f
  1276  04F3  01FD               	clrf	___awtoft@sign
  1277  04F4  0AFD               	incf	___awtoft@sign,f
  1278  04F5                     l803:	
  1279  04F5  0878               	movf	___awtoft@c,w
  1280  04F6  00F0               	movwf	___ftpack@arg
  1281  04F7  0879               	movf	___awtoft@c+1,w
  1282  04F8  00F1               	movwf	___ftpack@arg+1
  1283  04F9  01F2               	clrf	___ftpack@arg+2
  1284  04FA  308E               	movlw	142
  1285  04FB  00FB               	movwf	??___awtoft
  1286  04FC  087B               	movf	??___awtoft,w
  1287  04FD  00F3               	movwf	___ftpack@exp
  1288  04FE  087D               	movf	___awtoft@sign,w
  1289  04FF  00FC               	movwf	??___awtoft+1
  1290  0500  087C               	movf	??___awtoft+1,w
  1291  0501  00F4               	movwf	___ftpack@sign
  1292  0502  120A  118A  250C   	fcall	___ftpack
  1293  0505  0870               	movf	?___ftpack,w
  1294  0506  00F8               	movwf	?___awtoft
  1295  0507  0871               	movf	?___ftpack+1,w
  1296  0508  00F9               	movwf	?___awtoft+1
  1297  0509  0872               	movf	?___ftpack+2,w
  1298  050A  00FA               	movwf	?___awtoft+2
  1299  050B  0008               	return
  1300  050C                     __end_of___awtoft:	
  1301                           
  1302                           	psect	text5
  1303  050C                     __ptext5:	
  1304 ;; *************** function ___ftpack *****************
  1305 ;; Defined at:
  1306 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  arg             3    0[COMMON] unsigned um
  1309 ;;  exp             1    3[COMMON] unsigned char 
  1310 ;;  sign            1    4[COMMON] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  3    0[COMMON] float 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         5       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          3       0       0       0       0
  1325 ;;      Totals:         8       0       0       0       0
  1326 ;;Total ram usage:        8 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		___awtoft
  1332 ;;		___ftmul
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function ___ftpack
  1338  050C                     ___ftpack:	
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1342  050C  0873               	movf	___ftpack@exp,w
  1343  050D  1903               	btfsc	3,2
  1344  050E  2D14               	goto	l769
  1345  050F  0872               	movf	___ftpack@arg+2,w
  1346  0510  0471               	iorwf	___ftpack@arg+1,w
  1347  0511  0470               	iorwf	___ftpack@arg,w
  1348  0512  1D03               	skipz
  1349  0513  2D27               	goto	l775
  1350  0514                     l769:	
  1351  0514  3000               	movlw	0
  1352  0515  00F0               	movwf	?___ftpack
  1353  0516  3000               	movlw	0
  1354  0517  00F1               	movwf	?___ftpack+1
  1355  0518  3000               	movlw	0
  1356  0519  00F2               	movwf	?___ftpack+2
  1357  051A  0008               	return
  1358  051B                     l773:	
  1359  051B  3001               	movlw	1
  1360  051C  00F5               	movwf	??___ftpack
  1361  051D  0875               	movf	??___ftpack,w
  1362  051E  07F3               	addwf	___ftpack@exp,f
  1363  051F  3001               	movlw	1
  1364  0520                     u475:	
  1365  0520  1003               	clrc
  1366  0521  0CF2               	rrf	___ftpack@arg+2,f
  1367  0522  0CF1               	rrf	___ftpack@arg+1,f
  1368  0523  0CF0               	rrf	___ftpack@arg,f
  1369  0524  3EFF               	addlw	-1
  1370  0525  1D03               	skipz
  1371  0526  2D20               	goto	u475
  1372  0527                     l775:	
  1373  0527  30FE               	movlw	254
  1374  0528  0572               	andwf	___ftpack@arg+2,w
  1375  0529  1903               	btfsc	3,2
  1376  052A  2D42               	goto	l301
  1377  052B  2D1B               	goto	l773
  1378  052C                     l777:	
  1379  052C  3001               	movlw	1
  1380  052D  00F5               	movwf	??___ftpack
  1381  052E  0875               	movf	??___ftpack,w
  1382  052F  07F3               	addwf	___ftpack@exp,f
  1383  0530  3001               	movlw	1
  1384  0531  07F0               	addwf	___ftpack@arg,f
  1385  0532  3000               	movlw	0
  1386  0533  1803               	skipnc
  1387  0534  3001               	movlw	1
  1388  0535  07F1               	addwf	___ftpack@arg+1,f
  1389  0536  3000               	movlw	0
  1390  0537  1803               	skipnc
  1391  0538  3001               	movlw	1
  1392  0539  07F2               	addwf	___ftpack@arg+2,f
  1393  053A  3001               	movlw	1
  1394  053B                     u495:	
  1395  053B  1003               	clrc
  1396  053C  0CF2               	rrf	___ftpack@arg+2,f
  1397  053D  0CF1               	rrf	___ftpack@arg+1,f
  1398  053E  0CF0               	rrf	___ftpack@arg,f
  1399  053F  3EFF               	addlw	-1
  1400  0540  1D03               	skipz
  1401  0541  2D3B               	goto	u495
  1402  0542                     l301:	
  1403  0542  30FF               	movlw	255
  1404  0543  0572               	andwf	___ftpack@arg+2,w
  1405  0544  1903               	btfsc	3,2
  1406  0545  2D51               	goto	l785
  1407  0546  2D2C               	goto	l777
  1408  0547                     l783:	
  1409  0547  3001               	movlw	1
  1410  0548  02F3               	subwf	___ftpack@exp,f
  1411  0549  3001               	movlw	1
  1412  054A                     u515:	
  1413  054A  1003               	clrc
  1414  054B  0DF0               	rlf	___ftpack@arg,f
  1415  054C  0DF1               	rlf	___ftpack@arg+1,f
  1416  054D  0DF2               	rlf	___ftpack@arg+2,f
  1417  054E  3EFF               	addlw	-1
  1418  054F  1D03               	skipz
  1419  0550  2D4A               	goto	u515
  1420  0551                     l785:	
  1421  0551  1FF1               	btfss	___ftpack@arg+1,7
  1422  0552  2D47               	goto	l783
  1423  0553  1873               	btfsc	___ftpack@exp,0
  1424  0554  2D5B               	goto	l307
  1425  0555  30FF               	movlw	255
  1426  0556  05F0               	andwf	___ftpack@arg,f
  1427  0557  307F               	movlw	127
  1428  0558  05F1               	andwf	___ftpack@arg+1,f
  1429  0559  30FF               	movlw	255
  1430  055A  05F2               	andwf	___ftpack@arg+2,f
  1431  055B                     l307:	
  1432  055B  1003               	clrc
  1433  055C  0CF3               	rrf	___ftpack@exp,f
  1434  055D  0873               	movf	___ftpack@exp,w
  1435  055E  00F5               	movwf	??___ftpack
  1436  055F  01F6               	clrf	??___ftpack+1
  1437  0560  01F7               	clrf	??___ftpack+2
  1438  0561  3010               	movlw	16
  1439  0562                     u545:	
  1440  0562  1003               	clrc
  1441  0563  0DF5               	rlf	??___ftpack,f
  1442  0564  0DF6               	rlf	??___ftpack+1,f
  1443  0565  0DF7               	rlf	??___ftpack+2,f
  1444  0566  3EFF               	addlw	-1
  1445  0567  1D03               	skipz
  1446  0568  2D62               	goto	u545
  1447  0569  0875               	movf	??___ftpack,w
  1448  056A  04F0               	iorwf	___ftpack@arg,f
  1449  056B  0876               	movf	??___ftpack+1,w
  1450  056C  04F1               	iorwf	___ftpack@arg+1,f
  1451  056D  0877               	movf	??___ftpack+2,w
  1452  056E  04F2               	iorwf	___ftpack@arg+2,f
  1453  056F  0874               	movf	___ftpack@sign,w
  1454  0570  1903               	btfsc	3,2
  1455  0571  0008               	return
  1456  0572  17F2               	bsf	___ftpack@arg+2,7
  1457  0573  0008               	return
  1458  0574                     __end_of___ftpack:	
  1459                           
  1460                           	psect	text6
  1461  04C9                     __ptext6:	
  1462 ;; *************** function ___bmul *****************
  1463 ;; Defined at:
  1464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  multiplier      1    wreg     unsigned char 
  1467 ;;  multiplicand    1    0[COMMON] unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  multiplier      1    3[COMMON] unsigned char 
  1470 ;;  product         1    2[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         1       0       0       0       0
  1481 ;;      Locals:         2       0       0       0       0
  1482 ;;      Temps:          1       0       0       0       0
  1483 ;;      Totals:         4       0       0       0       0
  1484 ;;Total ram usage:        4 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function ___bmul
  1495  04C9                     ___bmul:	
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1499                           ;___bmul@multiplier stored from wreg
  1500  04C9  00F3               	movwf	___bmul@multiplier
  1501  04CA  01F2               	clrf	___bmul@product
  1502  04CB                     l915:	
  1503  04CB  1C73               	btfss	___bmul@multiplier,0
  1504  04CC  2CD1               	goto	l919
  1505  04CD  0870               	movf	___bmul@multiplicand,w
  1506  04CE  00F1               	movwf	??___bmul
  1507  04CF  0871               	movf	??___bmul,w
  1508  04D0  07F2               	addwf	___bmul@product,f
  1509  04D1                     l919:	
  1510  04D1  1003               	clrc
  1511  04D2  0DF0               	rlf	___bmul@multiplicand,f
  1512  04D3  1003               	clrc
  1513  04D4  0CF3               	rrf	___bmul@multiplier,f
  1514  04D5  08F3               	movf	___bmul@multiplier,f
  1515  04D6  1D03               	skipz
  1516  04D7  2CCB               	goto	l915
  1517  04D8  0872               	movf	___bmul@product,w
  1518  04D9  0008               	return
  1519  04DA                     __end_of___bmul:	
  1520  007E                     btemp	set	126	;btemp
  1521  007E                     wtemp	set	126
  1522  007E                     wtemp0	set	126
  1523  0080                     wtemp1	set	128
  1524  0082                     wtemp2	set	130
  1525  0084                     wtemp3	set	132
  1526  0086                     wtemp4	set	134
  1527  0088                     wtemp5	set	136
  1528  007F                     wtemp6	set	127
  1529  007E                     ttemp	set	126
  1530  007E                     ttemp0	set	126
  1531  0081                     ttemp1	set	129
  1532  0084                     ttemp2	set	132
  1533  0087                     ttemp3	set	135
  1534  007F                     ttemp4	set	127
  1535  007E                     ltemp	set	126
  1536  007E                     ltemp0	set	126
  1537  0082                     ltemp1	set	130
  1538  0086                     ltemp2	set	134
  1539  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _dutyCycle->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_dutyCycle
    _dutyCycle->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4389
                                             37 BANK0      1     1      0
                             ___bmul
                          _dutyCycle
 ---------------------------------------------------------------------------------
 (1) _dutyCycle                                            7     7      0    4271
                                             30 BANK0      7     7      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2145
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1751
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1607
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _dutyCycle
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 19 00:30:35 2025

                      pc 0002           ___bmul@product 0072              __CFG_CP$OFF 0000  
                     l51 0714                       l37 06D2                       l39 06CE  
                     fsr 0004                      l301 0542                      l307 055B  
                    l803 04F5                      l813 0731                      l831 0786  
                    l915 04CB                      l843 07AE                      l835 0796  
                    l819 0747                      l773 051B                      l919 04D1  
                    l783 0547                      l775 0527                      l847 07BE  
                    l863 0601                      l785 0551                      l777 052C  
                    l769 0514                      l881 0633                      l961 06DB  
                    l953 06A6                      l945 068F                      l891 065B  
                    l883 0643                      l971 06F0                      l963 06DC  
                    l893 065E                      l965 06E2                      l967 06E6  
                    l897 066C                      l889 0650                      l969 06EA  
                    l977 06F9                      l979 070F                      _RB0 0030  
                    _RB1 0031                      _RC2 003A                      _PR2 0092  
           __CFG_CPD$OFF 0000                      u515 054A                      u605 0765  
                    u545 0562                      u475 0520                      u635 0797  
                    u645 079F                      u725 0608                      u495 053B  
                    u815 05DD                      u595 0753                      u755 0634  
                    u685 07BF                      u695 07C7                      u855 06A0  
                    u785 0652                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     l1017 06FE  
           __CFG_WRT$OFF 0000                     _main 0675             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E        ___bmul@multiplier 0073             ___ftmul@cntr 002E  
           ___ftmul@sign 002F             ___fttol@exp1 003D             ___fttol@lval 0039  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___ftmul 07EC  
        __end_of___fttol 0675                    _T2CON 0012                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07EC             __end_of_main 0719  
                 ??_main 0045            ___fttol@sign1 0038                   _CCPR1L 0015  
       __end_of___awtoft 050C         __end_of___ftpack 0574                   ___bmul 04C9  
              ??___ftmul 0026                ??___fttol 0034                   _period 0059  
  ___ftmul@f3_as_product 002B  __end_of__initialization 07FC               ___awtoft@c 0078  
    ___bmul@multiplicand 0070               ___ftmul@f1 0020               ___ftmul@f2 0023  
             ___fttol@f1 0030           __pcstackCOMMON 0070             __pidataBANK0 04BA  
             __pbssBANK0 0055       __size_of_dutyCycle 0073               __pmaintext 0675  
                ?___bmul 0070                  _CCP1CON 0017                ?___awtoft 0078  
              ?___ftpack 0070          __size_of___bmul 0011                  ___ftmul 0719  
                ___fttol 05E7               ??___awtoft 007B               ??___ftpack 0075  
                __ptext1 0574                  __ptext2 05E7                  __ptext3 0719  
                __ptext4 04EB                  __ptext5 050C                  __ptext6 04C9  
      __end_of_dutyCycle 05E7                  _percent 0052     end_of_initialization 07FC  
            ___ftmul@exp 002A           __end_of___bmul 04DA      start_initialization 07EC  
               ??___bmul 0071               init_fetch0 04DA              __pdataBANK0 0046  
      __size_of___awtoft 0021        __size_of___ftpack 0068                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0059                 ?___ftmul 0020  
               ?___fttol 0030                _cnt_cycle 0055                _dutyCycle 0574  
        dutyCycle@result 0043               ?_dutyCycle 0070         __size_of___ftmul 00D3  
       __size_of___fttol 008E                 ___awtoft 04EB                 ___ftpack 050C  
               _cnt_freq 0057                 _freq_PR2 004F            __size_of_main 00A4  
            _period_freq 0046                 init_ram0 04DE              ??_dutyCycle 003E  
      dutyCycle@PWM_time 0040  
