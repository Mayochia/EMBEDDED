

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 26 00:14:32 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	text39,local,class=CODE,merge=1,delta=2
    50                           	psect	text40,local,class=CODE,merge=1,delta=2
    51                           	psect	text41,local,class=CODE,merge=1,delta=2
    52                           	psect	text42,local,class=CODE,merge=1,delta=2
    53                           	psect	text43,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115                           
   116                           	psect	strings
   117  1000                     __pstrings:	
   118  1000                     stringtab:	
   119  1000                     __stringtab:	
   120  1000                     stringcode:	
   121                           ;	String table - string pointers are 1 byte each
   122                           
   123  1000                     stringdir:	
   124  1000  3010               	movlw	high stringdir
   125  1001  008A               	movwf	10
   126  1002  0804               	movf	4,w
   127  1003  0A84               	incf	4,f
   128  1004  0782               	addwf	2,f
   129  1005                     __stringbase:	
   130  1005  3400               	retlw	0
   131  1006                     __end_of__stringtab:	
   132  1006                     _dpowers:	
   133  1006  3401               	retlw	1
   134  1007  3400               	retlw	0
   135  1008  3400               	retlw	0
   136  1009  3400               	retlw	0
   137  100A  340A               	retlw	10
   138  100B  3400               	retlw	0
   139  100C  3400               	retlw	0
   140  100D  3400               	retlw	0
   141  100E  3464               	retlw	100
   142  100F  3400               	retlw	0
   143  1010  3400               	retlw	0
   144  1011  3400               	retlw	0
   145  1012  34E8               	retlw	232
   146  1013  3403               	retlw	3
   147  1014  3400               	retlw	0
   148  1015  3400               	retlw	0
   149  1016  3410               	retlw	16
   150  1017  3427               	retlw	39
   151  1018  3400               	retlw	0
   152  1019  3400               	retlw	0
   153  101A  34A0               	retlw	160
   154  101B  3486               	retlw	134
   155  101C  3401               	retlw	1
   156  101D  3400               	retlw	0
   157  101E  3440               	retlw	64
   158  101F  3442               	retlw	66
   159  1020  340F               	retlw	15
   160  1021  3400               	retlw	0
   161  1022  3480               	retlw	128
   162  1023  3496               	retlw	150
   163  1024  3498               	retlw	152
   164  1025  3400               	retlw	0
   165  1026  3400               	retlw	0
   166  1027  34E1               	retlw	225
   167  1028  34F5               	retlw	245
   168  1029  3405               	retlw	5
   169  102A  3400               	retlw	0
   170  102B  34CA               	retlw	202
   171  102C  349A               	retlw	154
   172  102D  343B               	retlw	59
   173  102E                     __end_of_dpowers:	
   174  102E                     __npowers_:	
   175  102E  3400               	retlw	0
   176  102F  3480               	retlw	128
   177  1030  343F               	retlw	63
   178  1031  34CD               	retlw	205
   179  1032  34CC               	retlw	204
   180  1033  343D               	retlw	61
   181  1034  34D7               	retlw	215
   182  1035  3423               	retlw	35
   183  1036  343C               	retlw	60
   184  1037  3412               	retlw	18
   185  1038  3483               	retlw	131
   186  1039  343A               	retlw	58
   187  103A  34B7               	retlw	183
   188  103B  34D1               	retlw	209
   189  103C  3438               	retlw	56
   190  103D  34C6               	retlw	198
   191  103E  3427               	retlw	39
   192  103F  3437               	retlw	55
   193  1040  3438               	retlw	56
   194  1041  3486               	retlw	134
   195  1042  3435               	retlw	53
   196  1043  34C0               	retlw	192
   197  1044  34D6               	retlw	214
   198  1045  3433               	retlw	51
   199  1046  34CC               	retlw	204
   200  1047  342B               	retlw	43
   201  1048  3432               	retlw	50
   202  1049  3470               	retlw	112
   203  104A  3489               	retlw	137
   204  104B  3430               	retlw	48
   205  104C  34E7               	retlw	231
   206  104D  34DB               	retlw	219
   207  104E  342E               	retlw	46
   208  104F  34E5               	retlw	229
   209  1050  343C               	retlw	60
   210  1051  341E               	retlw	30
   211  1052  3442               	retlw	66
   212  1053  34A2               	retlw	162
   213  1054  340D               	retlw	13
   214  1055                     __end_of__npowers_:	
   215  1055                     __powers_:	
   216  1055  3400               	retlw	0
   217  1056  3480               	retlw	128
   218  1057  343F               	retlw	63
   219  1058  3400               	retlw	0
   220  1059  3420               	retlw	32
   221  105A  3441               	retlw	65
   222  105B  3400               	retlw	0
   223  105C  34C8               	retlw	200
   224  105D  3442               	retlw	66
   225  105E  3400               	retlw	0
   226  105F  347A               	retlw	122
   227  1060  3444               	retlw	68
   228  1061  3440               	retlw	64
   229  1062  341C               	retlw	28
   230  1063  3446               	retlw	70
   231  1064  3450               	retlw	80
   232  1065  34C3               	retlw	195
   233  1066  3447               	retlw	71
   234  1067  3424               	retlw	36
   235  1068  3474               	retlw	116
   236  1069  3449               	retlw	73
   237  106A  3497               	retlw	151
   238  106B  3418               	retlw	24
   239  106C  344B               	retlw	75
   240  106D  34BC               	retlw	188
   241  106E  34BE               	retlw	190
   242  106F  344C               	retlw	76
   243  1070  346B               	retlw	107
   244  1071  346E               	retlw	110
   245  1072  344E               	retlw	78
   246  1073  3403               	retlw	3
   247  1074  3415               	retlw	21
   248  1075  3450               	retlw	80
   249  1076  3479               	retlw	121
   250  1077  34AD               	retlw	173
   251  1078  3460               	retlw	96
   252  1079  34F3               	retlw	243
   253  107A  3449               	retlw	73
   254  107B  3471               	retlw	113
   255  107C                     __end_of__powers_:	
   256  107C                     exp@coeff:	
   257  107C  3400               	retlw	0
   258  107D  3480               	retlw	128
   259  107E  343F               	retlw	63
   260  107F  3472               	retlw	114
   261  1080  3431               	retlw	49
   262  1081  343F               	retlw	63
   263  1082  34FE               	retlw	254
   264  1083  3475               	retlw	117
   265  1084  343E               	retlw	62
   266  1085  3458               	retlw	88
   267  1086  3463               	retlw	99
   268  1087  343D               	retlw	61
   269  1088  3495               	retlw	149
   270  1089  341D               	retlw	29
   271  108A  343C               	retlw	60
   272  108B  34C5               	retlw	197
   273  108C  34AE               	retlw	174
   274  108D  343A               	retlw	58
   275  108E  3479               	retlw	121
   276  108F  3421               	retlw	33
   277  1090  3439               	retlw	57
   278  1091  3494               	retlw	148
   279  1092  3480               	retlw	128
   280  1093  3437               	retlw	55
   281  1094  3493               	retlw	147
   282  1095  34A7               	retlw	167
   283  1096  3435               	retlw	53
   284  1097  3456               	retlw	86
   285  1098  3415               	retlw	21
   286  1099  3434               	retlw	52
   287  109A                     __end_ofexp@coeff:	
   288  109A                     log@coeff:	
   289  109A  3400               	retlw	0
   290  109B  3400               	retlw	0
   291  109C  3400               	retlw	0
   292  109D  3400               	retlw	0
   293  109E  3480               	retlw	128
   294  109F  343F               	retlw	63
   295  10A0  34F0               	retlw	240
   296  10A1  34FF               	retlw	255
   297  10A2  34BE               	retlw	190
   298  10A3  34E2               	retlw	226
   299  10A4  34A9               	retlw	169
   300  10A5  343E               	retlw	62
   301  10A6  3483               	retlw	131
   302  10A7  3476               	retlw	118
   303  10A8  34BE               	retlw	190
   304  10A9  34AE               	retlw	174
   305  10AA  342B               	retlw	43
   306  10AB  343E               	retlw	62
   307  10AC  343C               	retlw	60
   308  10AD  34C3               	retlw	195
   309  10AE  34BD               	retlw	189
   310  10AF  34D2               	retlw	210
   311  10B0  3413               	retlw	19
   312  10B1  343D               	retlw	61
   313  10B2  3478               	retlw	120
   314  10B3  34D3               	retlw	211
   315  10B4  34BB               	retlw	187
   316  10B5                     __end_oflog@coeff:	
   317  0006                     _PORTB	set	6
   318  0008                     _PORTD	set	8
   319  0013                     _SSPBUF	set	19
   320  0014                     _SSPCON	set	20
   321  0040                     _RD0	set	64
   322  0041                     _RD1	set	65
   323  0093                     _SSPADD	set	147
   324  0091                     _SSPCON2	set	145
   325  0094                     _SSPSTAT	set	148
   326  0086                     _TRISB	set	134
   327  0088                     _TRISD	set	136
   328  048D                     _ACKDT	set	1165
   329  048C                     _ACKEN	set	1164
   330  048A                     _PEN	set	1162
   331  048B                     _RCEN	set	1163
   332  0489                     _RSEN	set	1161
   333  0488                     _SEN	set	1160
   334  043B                     _TRISC3	set	1083
   335  043C                     _TRISC4	set	1084
   336  10B5                     __stringdata:	
   337  10B5                     STR_1:	
   338  10B5  3425               	retlw	37	;'%'
   339  10B6  3464               	retlw	100	;'d'
   340  10B7  3400               	retlw	0
   341  10B8                     STR_2:	
   342  10B8  3425               	retlw	37	;'%'
   343  10B9  3466               	retlw	102	;'f'
   344  10BA  3400               	retlw	0
   345  10BB                     __end_of__stringdata:	
   346                           
   347                           ; #config settings
   348  0000                     
   349                           	psect	cinit
   350  07F3                     start_initialization:	
   351  07F3                     __initialization:	
   352                           
   353                           ; Clear objects allocated to BANK1
   354  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   355  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   356  07F5  01D9               	clrf	__pbssBANK1& (0+127)
   357  07F6  01DA               	clrf	(__pbssBANK1+1)& (0+127)
   358  07F7  01DB               	clrf	(__pbssBANK1+2)& (0+127)
   359  07F8  01DC               	clrf	(__pbssBANK1+3)& (0+127)
   360  07F9  01DD               	clrf	(__pbssBANK1+4)& (0+127)
   361  07FA  01DE               	clrf	(__pbssBANK1+5)& (0+127)
   362  07FB  01DF               	clrf	(__pbssBANK1+6)& (0+127)
   363  07FC                     end_of_initialization:	
   364                           ;End of C runtime variable initialization code
   365                           
   366  07FC                     __end_of__initialization:	
   367  07FC  0183               	clrf	3
   368  07FD  120A  158A  2AFD   	ljmp	_main	;jump to C main() function
   369                           
   370                           	psect	bssBANK1
   371  00D9                     __pbssBANK1:	
   372  00D9                     _T:	
   373  00D9                     	ds	3
   374  00DC                     _RH:	
   375  00DC                     	ds	2
   376  00DE                     _errno:	
   377  00DE                     	ds	2
   378                           
   379                           	psect	cstackBANK1
   380  00A0                     __pcstackBANK1:	
   381  00A0                     _ldexp$512:	
   382  00A0                     _sprintf$691:	
   383                           ; 3 bytes @ 0x0
   384                           
   385                           
   386                           ; 3 bytes @ 0x0
   387  00A0                     	ds	3
   388  00A3                     ?_exp:	
   389  00A3                     exp@x:	
   390                           ; 3 bytes @ 0x3
   391                           
   392  00A3                     _sprintf$184:	
   393                           ; 3 bytes @ 0x3
   394                           
   395                           
   396                           ; 4 bytes @ 0x3
   397  00A3                     	ds	3
   398  00A6                     _exp$694:	
   399                           
   400                           ; 3 bytes @ 0x6
   401  00A6                     	ds	1
   402  00A7                     sprintf@vd:	
   403                           
   404                           ; 4 bytes @ 0x7
   405  00A7                     	ds	2
   406  00A9                     _exp$475:	
   407                           
   408                           ; 3 bytes @ 0x9
   409  00A9                     	ds	2
   410  00AB                     sprintf@vd_186:	
   411                           
   412                           ; 4 bytes @ 0xB
   413  00AB                     	ds	1
   414  00AC                     exp@exponent:	
   415                           
   416                           ; 2 bytes @ 0xC
   417  00AC                     	ds	2
   418  00AE                     exp@sign:	
   419                           
   420                           ; 1 bytes @ 0xE
   421  00AE                     	ds	1
   422  00AF                     ?_pow:	
   423  00AF                     sprintf@ap:	
   424                           ; 3 bytes @ 0xF
   425                           
   426  00AF                     pow@x:	
   427                           ; 1 bytes @ 0xF
   428                           
   429                           
   430                           ; 3 bytes @ 0xF
   431  00AF                     	ds	1
   432  00B0                     sprintf@flag:	
   433                           
   434                           ; 2 bytes @ 0x10
   435  00B0                     	ds	2
   436  00B2                     sprintf@integ:	
   437  00B2                     pow@y:	
   438                           ; 3 bytes @ 0x12
   439                           
   440                           
   441                           ; 3 bytes @ 0x12
   442  00B2                     	ds	3
   443  00B5                     sprintf@prec:	
   444  00B5                     _pow$692:	
   445                           ; 2 bytes @ 0x15
   446                           
   447                           
   448                           ; 3 bytes @ 0x15
   449  00B5                     	ds	2
   450  00B7                     sprintf@_val:	
   451                           
   452                           ; 4 bytes @ 0x17
   453  00B7                     	ds	1
   454  00B8                     _pow$693:	
   455                           
   456                           ; 3 bytes @ 0x18
   457  00B8                     	ds	3
   458  00BB                     pow@sign:	
   459  00BB                     sprintf@exp:	
   460                           ; 1 bytes @ 0x1B
   461                           
   462                           
   463                           ; 2 bytes @ 0x1B
   464  00BB                     	ds	1
   465  00BC                     pow@yi:	
   466                           
   467                           ; 4 bytes @ 0x1C
   468  00BC                     	ds	1
   469  00BD                     sprintf@sp:	
   470                           
   471                           ; 1 bytes @ 0x1D
   472  00BD                     	ds	1
   473  00BE                     sprintf@fval:	
   474                           
   475                           ; 3 bytes @ 0x1E
   476  00BE                     	ds	3
   477  00C1                     sprintf@c:	
   478                           
   479                           ; 1 bytes @ 0x21
   480  00C1                     	ds	1
   481  00C2                     dispRH@val:	
   482  00C2                     dispT@val:	
   483                           ; 4 bytes @ 0x22
   484                           
   485                           
   486                           ; 5 bytes @ 0x22
   487  00C2                     	ds	5
   488  00C7                     ??_main:	
   489                           
   490                           ; 0 bytes @ 0x27
   491  00C7                     	ds	2
   492  00C9                     main@rh:	
   493                           
   494                           ; 3 bytes @ 0x29
   495  00C9                     	ds	3
   496  00CC                     main@t:	
   497                           
   498                           ; 3 bytes @ 0x2C
   499  00CC                     	ds	3
   500  00CF                     _main$687:	
   501                           
   502                           ; 3 bytes @ 0x2F
   503  00CF                     	ds	3
   504  00D2                     main@res:	
   505                           
   506                           ; 2 bytes @ 0x32
   507  00D2                     	ds	2
   508  00D4                     main@RH_temp:	
   509                           
   510                           ; 2 bytes @ 0x34
   511  00D4                     	ds	2
   512  00D6                     main@T_temp:	
   513                           
   514                           ; 2 bytes @ 0x36
   515  00D6                     	ds	2
   516  00D8                     main@temp:	
   517                           
   518                           ; 1 bytes @ 0x38
   519  00D8                     	ds	1
   520                           
   521                           	psect	cstackCOMMON
   522  0070                     __pcstackCOMMON:	
   523  0070                     ?_init_I2C_Master:	
   524  0070                     ??_init_I2C_Master:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_initLCD:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ?_I2C_Start:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ??_I2C_Start:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_I2C_Send:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ??_I2C_Send:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_I2C_RepeatedStart:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ??_I2C_RepeatedStart:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ??_I2C_Receive:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Stop:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Stop:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_delay_ms:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_dispRH:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ?_dispT:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_main:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_instCtrl:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_dataCtrl:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0070                     ?_I2C_Wait:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0070                     ??_I2C_Wait:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0070                     ?___ftge:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0070                     ?_I2C_Receive:	
   585                           ; 1 bit 
   586                           
   587  0070                     ?___wmul:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?___awmod:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ?___ftpack:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?_frexp:	
   597                           ; 3 bytes @ 0x0
   598                           
   599  0070                     ?___ftneg:	
   600                           ; 3 bytes @ 0x0
   601                           
   602  0070                     ?__tdiv_to_l_:	
   603                           ; 3 bytes @ 0x0
   604                           
   605  0070                     ?__div_to_l_:	
   606                           ; 4 bytes @ 0x0
   607                           
   608  0070                     ?___lldiv:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0070                     I2C_Send@data:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     delay_ms@cnt:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ___wmul@multiplier:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     ___awmod@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623  0070                     __div_to_l_@f1:	
   624                           ; 2 bytes @ 0x0
   625                           
   626  0070                     ___ftpack@arg:	
   627                           ; 3 bytes @ 0x0
   628                           
   629  0070                     __tdiv_to_l_@f1:	
   630                           ; 3 bytes @ 0x0
   631                           
   632  0070                     ___ftge@ff1:	
   633                           ; 3 bytes @ 0x0
   634                           
   635  0070                     ___ftneg@f1:	
   636                           ; 3 bytes @ 0x0
   637                           
   638  0070                     frexp@value:	
   639                           ; 3 bytes @ 0x0
   640                           
   641  0070                     ___lldiv@divisor:	
   642                           ; 3 bytes @ 0x0
   643                           
   644                           
   645                           ; 4 bytes @ 0x0
   646  0070                     	ds	1
   647  0071                     I2C_Receive@ack:	
   648                           
   649                           ; 1 bytes @ 0x1
   650  0071                     	ds	1
   651  0072                     ??_delay_ms:	
   652  0072                     I2C_Receive@temp:	
   653                           ; 0 bytes @ 0x2
   654                           
   655  0072                     delay_ms@i:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ___wmul@multiplicand:	
   659                           ; 2 bytes @ 0x2
   660                           
   661  0072                     ___awmod@dividend:	
   662                           ; 2 bytes @ 0x2
   663                           
   664                           
   665                           ; 2 bytes @ 0x2
   666  0072                     	ds	1
   667  0073                     ??___ftneg:	
   668  0073                     ___ftpack@exp:	
   669                           ; 0 bytes @ 0x3
   670                           
   671  0073                     frexp@eptr:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     __div_to_l_@f2:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     __tdiv_to_l_@f2:	
   678                           ; 3 bytes @ 0x3
   679                           
   680  0073                     ___ftge@ff2:	
   681                           ; 3 bytes @ 0x3
   682                           
   683                           
   684                           ; 3 bytes @ 0x3
   685  0073                     	ds	1
   686  0074                     ??_frexp:	
   687  0074                     ??___wmul:	
   688                           ; 0 bytes @ 0x4
   689                           
   690  0074                     ??___awmod:	
   691                           ; 0 bytes @ 0x4
   692                           
   693  0074                     ___ftpack@sign:	
   694                           ; 0 bytes @ 0x4
   695                           
   696  0074                     delay_ms@j:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0074                     ___wmul@product:	
   700                           ; 2 bytes @ 0x4
   701                           
   702  0074                     ___lldiv@dividend:	
   703                           ; 2 bytes @ 0x4
   704                           
   705                           
   706                           ; 4 bytes @ 0x4
   707  0074                     	ds	1
   708  0075                     ??___ftpack:	
   709  0075                     ___awmod@counter:	
   710                           ; 0 bytes @ 0x5
   711                           
   712                           
   713                           ; 1 bytes @ 0x5
   714  0075                     	ds	1
   715  0076                     ??__tdiv_to_l_:	
   716  0076                     ??__div_to_l_:	
   717                           ; 0 bytes @ 0x6
   718                           
   719  0076                     ??_instCtrl:	
   720                           ; 0 bytes @ 0x6
   721                           
   722  0076                     ??_dataCtrl:	
   723                           ; 0 bytes @ 0x6
   724                           
   725  0076                     ??___ftge:	
   726                           ; 0 bytes @ 0x6
   727                           
   728  0076                     instCtrl@INST:	
   729                           ; 0 bytes @ 0x6
   730                           
   731  0076                     dataCtrl@DATA:	
   732                           ; 1 bytes @ 0x6
   733                           
   734  0076                     ___awmod@sign:	
   735                           ; 1 bytes @ 0x6
   736                           
   737                           
   738                           ; 1 bytes @ 0x6
   739  0076                     	ds	1
   740  0077                     ??_initLCD:	
   741  0077                     ?___awdiv:	
   742                           ; 0 bytes @ 0x7
   743                           
   744  0077                     ___awdiv@divisor:	
   745                           ; 2 bytes @ 0x7
   746                           
   747                           
   748                           ; 2 bytes @ 0x7
   749  0077                     	ds	1
   750  0078                     ??___lldiv:	
   751  0078                     ?___awtoft:	
   752                           ; 0 bytes @ 0x8
   753                           
   754  0078                     ?___lltoft:	
   755                           ; 3 bytes @ 0x8
   756                           
   757  0078                     ?___lwtoft:	
   758                           ; 3 bytes @ 0x8
   759                           
   760  0078                     ___awtoft@c:	
   761                           ; 3 bytes @ 0x8
   762                           
   763  0078                     ___lwtoft@c:	
   764                           ; 2 bytes @ 0x8
   765                           
   766  0078                     ___lltoft@c:	
   767                           ; 2 bytes @ 0x8
   768                           
   769                           
   770                           ; 4 bytes @ 0x8
   771  0078                     	ds	1
   772  0079                     ___awdiv@dividend:	
   773  0079                     ___lldiv@quotient:	
   774                           ; 2 bytes @ 0x9
   775                           
   776                           
   777                           ; 4 bytes @ 0x9
   778  0079                     	ds	2
   779  007B                     ??___awdiv:	
   780  007B                     ??___awtoft:	
   781                           ; 0 bytes @ 0xB
   782                           
   783  007B                     ??___lwtoft:	
   784                           ; 0 bytes @ 0xB
   785                           
   786                           
   787                           ; 0 bytes @ 0xB
   788  007B                     	ds	1
   789  007C                     ??___bmul:	
   790  007C                     ??___lltoft:	
   791                           ; 0 bytes @ 0xC
   792                           
   793                           
   794                           ; 0 bytes @ 0xC
   795  007C                     	ds	1
   796  007D                     ___awtoft@sign:	
   797  007D                     ___lldiv@counter:	
   798                           ; 1 bytes @ 0xD
   799                           
   800  007D                     ___lltoft@exp:	
   801                           ; 1 bytes @ 0xD
   802                           
   803                           
   804                           ; 1 bytes @ 0xD
   805  007D                     	ds	1
   806  007E                     ??___ftsub:	
   807                           
   808                           	psect	cstackBANK0
   809  0020                     __pcstackBANK0:	
   810                           ; 0 bytes @ 0xE
   811                           
   812  0020                     ?___ftdiv:	
   813  0020                     ?___llmod:	
   814                           ; 3 bytes @ 0x0
   815                           
   816  0020                     ___awdiv@counter:	
   817                           ; 4 bytes @ 0x0
   818                           
   819  0020                     ___ftdiv@f2:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0020                     __div_to_l_@quot:	
   823                           ; 3 bytes @ 0x0
   824                           
   825  0020                     __tdiv_to_l_@quot:	
   826                           ; 4 bytes @ 0x0
   827                           
   828  0020                     ___llmod@divisor:	
   829                           ; 4 bytes @ 0x0
   830                           
   831                           
   832                           ; 4 bytes @ 0x0
   833  0020                     	ds	1
   834  0021                     ___awdiv@sign:	
   835                           
   836                           ; 1 bytes @ 0x1
   837  0021                     	ds	1
   838  0022                     ___awdiv@quotient:	
   839                           
   840                           ; 2 bytes @ 0x2
   841  0022                     	ds	1
   842  0023                     ___ftdiv@f1:	
   843                           
   844                           ; 3 bytes @ 0x3
   845  0023                     	ds	1
   846  0024                     ?___bmul:	
   847  0024                     ___bmul@multiplicand:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0024                     __div_to_l_@cntr:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  0024                     __tdiv_to_l_@cntr:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0024                     ___llmod@dividend:	
   857                           ; 1 bytes @ 0x4
   858                           
   859                           
   860                           ; 4 bytes @ 0x4
   861  0024                     	ds	1
   862  0025                     ___bmul@product:	
   863  0025                     __div_to_l_@exp1:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  0025                     __tdiv_to_l_@exp1:	
   867                           ; 1 bytes @ 0x5
   868                           
   869                           
   870                           ; 1 bytes @ 0x5
   871  0025                     	ds	1
   872  0026                     ??___ftdiv:	
   873  0026                     ___bmul@multiplier:	
   874                           ; 0 bytes @ 0x6
   875                           
   876                           
   877                           ; 1 bytes @ 0x6
   878  0026                     	ds	2
   879  0028                     ??___llmod:	
   880                           
   881                           ; 0 bytes @ 0x8
   882  0028                     	ds	1
   883  0029                     ___llmod@counter:	
   884                           
   885                           ; 1 bytes @ 0x9
   886  0029                     	ds	1
   887  002A                     ___ftdiv@cntr:	
   888                           
   889                           ; 1 bytes @ 0xA
   890  002A                     	ds	1
   891  002B                     ___ftdiv@f3:	
   892                           
   893                           ; 3 bytes @ 0xB
   894  002B                     	ds	3
   895  002E                     ___ftdiv@exp:	
   896                           
   897                           ; 1 bytes @ 0xE
   898  002E                     	ds	1
   899  002F                     ___ftdiv@sign:	
   900                           
   901                           ; 1 bytes @ 0xF
   902  002F                     	ds	1
   903  0030                     ?___ftmul:	
   904  0030                     ___ftmul@f1:	
   905                           ; 3 bytes @ 0x10
   906                           
   907                           
   908                           ; 3 bytes @ 0x10
   909  0030                     	ds	3
   910  0033                     ___ftmul@f2:	
   911                           
   912                           ; 3 bytes @ 0x13
   913  0033                     	ds	3
   914  0036                     ??___ftmul:	
   915                           
   916                           ; 0 bytes @ 0x16
   917  0036                     	ds	4
   918  003A                     ___ftmul@exp:	
   919                           
   920                           ; 1 bytes @ 0x1A
   921  003A                     	ds	1
   922  003B                     ___ftmul@f3_as_product:	
   923                           
   924                           ; 3 bytes @ 0x1B
   925  003B                     	ds	3
   926  003E                     ___ftmul@cntr:	
   927                           
   928                           ; 1 bytes @ 0x1E
   929  003E                     	ds	1
   930  003F                     ___ftmul@sign:	
   931                           
   932                           ; 1 bytes @ 0x1F
   933  003F                     	ds	1
   934  0040                     ?_fround:	
   935  0040                     ?_scale:	
   936                           ; 3 bytes @ 0x20
   937                           
   938                           
   939                           ; 3 bytes @ 0x20
   940  0040                     	ds	3
   941  0043                     ??_fround:	
   942  0043                     ??_scale:	
   943                           ; 0 bytes @ 0x23
   944                           
   945                           
   946                           ; 0 bytes @ 0x23
   947  0043                     	ds	2
   948  0045                     _scale$690:	
   949                           
   950                           ; 3 bytes @ 0x25
   951  0045                     	ds	3
   952  0048                     scale@scl:	
   953                           
   954                           ; 1 bytes @ 0x28
   955  0048                     	ds	1
   956  0049                     ?___fttol:	
   957  0049                     ___fttol@f1:	
   958                           ; 4 bytes @ 0x29
   959                           
   960  0049                     _fround$689:	
   961                           ; 3 bytes @ 0x29
   962                           
   963                           
   964                           ; 3 bytes @ 0x29
   965  0049                     	ds	3
   966  004C                     _fround$688:	
   967                           
   968                           ; 3 bytes @ 0x2C
   969  004C                     	ds	1
   970  004D                     ??___fttol:	
   971                           
   972                           ; 0 bytes @ 0x2D
   973  004D                     	ds	2
   974  004F                     fround@prec:	
   975                           
   976                           ; 1 bytes @ 0x2F
   977  004F                     	ds	1
   978  0050                     ?___ftadd:	
   979  0050                     ___ftadd@f1:	
   980                           ; 3 bytes @ 0x30
   981                           
   982                           
   983                           ; 3 bytes @ 0x30
   984  0050                     	ds	1
   985  0051                     ___fttol@sign1:	
   986                           
   987                           ; 1 bytes @ 0x31
   988  0051                     	ds	1
   989  0052                     ___fttol@lval:	
   990                           
   991                           ; 4 bytes @ 0x32
   992  0052                     	ds	1
   993  0053                     ___ftadd@f2:	
   994                           
   995                           ; 3 bytes @ 0x33
   996  0053                     	ds	3
   997  0056                     ??___ftadd:	
   998  0056                     ___fttol@exp1:	
   999                           ; 0 bytes @ 0x36
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x36
  1003  0056                     	ds	1
  1004  0057                     ?___altoft:	
  1005  0057                     ___altoft@c:	
  1006                           ; 3 bytes @ 0x37
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x37
  1010  0057                     	ds	3
  1011  005A                     ___ftadd@sign:	
  1012                           
  1013                           ; 1 bytes @ 0x3A
  1014  005A                     	ds	1
  1015  005B                     ??___altoft:	
  1016  005B                     ___ftadd@exp2:	
  1017                           ; 0 bytes @ 0x3B
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x3B
  1021  005B                     	ds	1
  1022  005C                     ___ftadd@exp1:	
  1023                           
  1024                           ; 1 bytes @ 0x3C
  1025  005C                     	ds	1
  1026  005D                     ?_eval_poly:	
  1027  005D                     ?___ftsub:	
  1028                           ; 3 bytes @ 0x3D
  1029                           
  1030  005D                     ___altoft@exp:	
  1031                           ; 3 bytes @ 0x3D
  1032                           
  1033  005D                     ___ftsub@f2:	
  1034                           ; 1 bytes @ 0x3D
  1035                           
  1036  005D                     eval_poly@x:	
  1037                           ; 3 bytes @ 0x3D
  1038                           
  1039                           
  1040                           ; 3 bytes @ 0x3D
  1041  005D                     	ds	1
  1042  005E                     ___altoft@sign:	
  1043                           
  1044                           ; 1 bytes @ 0x3E
  1045  005E                     	ds	1
  1046  005F                     ?_floor:	
  1047  005F                     floor@x:	
  1048                           ; 3 bytes @ 0x3F
  1049                           
  1050                           
  1051                           ; 3 bytes @ 0x3F
  1052  005F                     	ds	1
  1053  0060                     eval_poly@d:	
  1054  0060                     ___ftsub@f1:	
  1055                           ; 1 bytes @ 0x40
  1056                           
  1057                           
  1058                           ; 3 bytes @ 0x40
  1059  0060                     	ds	1
  1060  0061                     eval_poly@n:	
  1061                           
  1062                           ; 2 bytes @ 0x41
  1063  0061                     	ds	1
  1064  0062                     ??_floor:	
  1065                           
  1066                           ; 0 bytes @ 0x42
  1067  0062                     	ds	1
  1068  0063                     ??_eval_poly:	
  1069  0063                     ?_sprintf:	
  1070                           ; 0 bytes @ 0x43
  1071                           
  1072  0063                     sprintf@f:	
  1073                           ; 2 bytes @ 0x43
  1074                           
  1075  0063                     floor@i:	
  1076                           ; 1 bytes @ 0x43
  1077                           
  1078                           
  1079                           ; 3 bytes @ 0x43
  1080  0063                     	ds	1
  1081  0064                     eval_poly@res:	
  1082                           
  1083                           ; 3 bytes @ 0x44
  1084  0064                     	ds	2
  1085  0066                     floor@expon:	
  1086                           
  1087                           ; 2 bytes @ 0x46
  1088  0066                     	ds	1
  1089  0067                     ??_sprintf:	
  1090  0067                     ?_log:	
  1091                           ; 0 bytes @ 0x47
  1092                           
  1093  0067                     ?_ldexp:	
  1094                           ; 3 bytes @ 0x47
  1095                           
  1096  0067                     ldexp@value:	
  1097                           ; 3 bytes @ 0x47
  1098                           
  1099  0067                     log@x:	
  1100                           ; 3 bytes @ 0x47
  1101                           
  1102                           
  1103                           ; 3 bytes @ 0x47
  1104  0067                     	ds	3
  1105  006A                     ??_log:	
  1106  006A                     ldexp@newexp:	
  1107                           ; 0 bytes @ 0x4A
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x4A
  1111  006A                     	ds	1
  1112  006B                     log@exponent:	
  1113                           
  1114                           ; 2 bytes @ 0x4B
  1115  006B                     	ds	1
  1116  006C                     ??_ldexp:	
  1117                           
  1118                           ; 0 bytes @ 0x4C
  1119  006C                     	ds	1
  1120  006D                     ??_dispRH:	
  1121  006D                     ??_dispT:	
  1122                           ; 0 bytes @ 0x4D
  1123                           
  1124                           
  1125                           ; 0 bytes @ 0x4D
  1126  006D                     	ds	1
  1127  006E                     ??_exp:	
  1128                           
  1129                           ; 0 bytes @ 0x4E
  1130  006E                     	ds	1
  1131  006F                     ??_pow:	
  1132                           
  1133                           ; 0 bytes @ 0x4F
  1134  006F                     	ds	1
  1135                           
  1136                           	psect	maintext
  1137  0AFD                     __pmaintext:	
  1138 ;;
  1139 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1140 ;;
  1141 ;; *************** function _main *****************
  1142 ;; Defined at:
  1143 ;;		line 33 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #7\To Submit\LE7-3.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  t               3   44[BANK1 ] float 
  1148 ;;  rh              3   41[BANK1 ] float 
  1149 ;;  T_temp          2   54[BANK1 ] unsigned int 
  1150 ;;  RH_temp         2   52[BANK1 ] unsigned int 
  1151 ;;  res             2   50[BANK1 ] int 
  1152 ;;  temp            1   56[BANK1 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;		None               void
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 17F/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       0      16       0       0
  1164 ;;      Temps:          0       0       2       0       0
  1165 ;;      Totals:         0       0      18       0       0
  1166 ;;Total ram usage:       18 bytes
  1167 ;; Hardware stack levels required when called:    5
  1168 ;; This function calls:
  1169 ;;		_I2C_Receive
  1170 ;;		_I2C_RepeatedStart
  1171 ;;		_I2C_Send
  1172 ;;		_I2C_Start
  1173 ;;		_I2C_Stop
  1174 ;;		___awtoft
  1175 ;;		___ftadd
  1176 ;;		___ftdiv
  1177 ;;		___ftmul
  1178 ;;		___fttol
  1179 ;;		___lwtoft
  1180 ;;		_delay_ms
  1181 ;;		_dispRH
  1182 ;;		_dispT
  1183 ;;		_initLCD
  1184 ;;		_init_I2C_Master
  1185 ;;		_pow
  1186 ;; This function is called by:
  1187 ;;		Startup code after reset
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _main
  1193  0AFD                     _main:	
  1194                           
  1195                           ;LE7-3.c: 34: int res = (int)(pow(2,14));
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1199  0AFD  3000               	movlw	0
  1200  0AFE  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0AFF  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0B00  00B2               	movwf	pow@y^(0+128)
  1203  0B01  3060               	movlw	96
  1204  0B02  00B3               	movwf	(pow@y+1)^(0+128)
  1205  0B03  3041               	movlw	65
  1206  0B04  00B4               	movwf	(pow@y+2)^(0+128)
  1207  0B05  3000               	movlw	0
  1208  0B06  00AF               	movwf	pow@x^(0+128)
  1209  0B07  3000               	movlw	0
  1210  0B08  00B0               	movwf	(pow@x+1)^(0+128)
  1211  0B09  3040               	movlw	64
  1212  0B0A  00B1               	movwf	(pow@x+2)^(0+128)
  1213  0B0B  160A  118A  2520  120A  158A  	fcall	_pow
  1214  0B10  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0B11  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0B12  082F               	movf	?_pow^(0+128),w
  1217  0B13  00CF               	movwf	_main$687^(0+128)
  1218  0B14  0830               	movf	(?_pow+1)^(0+128),w
  1219  0B15  00D0               	movwf	(_main$687+1)^(0+128)
  1220  0B16  0831               	movf	(?_pow+2)^(0+128),w
  1221  0B17  00D1               	movwf	(_main$687+2)^(0+128)
  1222                           
  1223                           ;LE7-3.c: 34: int res = (int)(pow(2,14));
  1224  0B18  084F               	movf	_main$687^(0+128),w
  1225  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0B1B  00C9               	movwf	___fttol@f1
  1228  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0B1E  0850               	movf	(_main$687+1)^(0+128),w
  1231  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0B21  00CA               	movwf	___fttol@f1+1
  1234  0B22  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0B23  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0B24  0851               	movf	(_main$687+2)^(0+128),w
  1237  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0B26  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0B27  00CB               	movwf	___fttol@f1+2
  1240  0B28  160A  158A  2640  120A  158A  	fcall	___fttol
  1241  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0B2F  084A               	movf	?___fttol+1,w
  1244  0B30  1683               	bsf	3,5	;RP0=1, select bank1
  1245  0B31  1303               	bcf	3,6	;RP1=0, select bank1
  1246  0B32  01D3               	clrf	(main@res+1)^(0+128)
  1247  0B33  07D3               	addwf	(main@res+1)^(0+128),f
  1248  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0B36  0849               	movf	?___fttol,w
  1251  0B37  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0B38  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0B39  01D2               	clrf	main@res^(0+128)
  1254  0B3A  07D2               	addwf	main@res^(0+128),f
  1255                           
  1256                           ;LE7-3.c: 35: unsigned int RH_temp = 0x0000, T_temp = 0x0000;
  1257  0B3B  01D4               	clrf	main@RH_temp^(0+128)
  1258  0B3C  01D5               	clrf	(main@RH_temp+1)^(0+128)
  1259  0B3D  01D6               	clrf	main@T_temp^(0+128)
  1260  0B3E  01D7               	clrf	(main@T_temp+1)^(0+128)
  1261                           
  1262                           ;LE7-3.c: 36: unsigned char temp = 0x00;
  1263  0B3F  01D8               	clrf	main@temp^(0+128)
  1264                           
  1265                           ;LE7-3.c: 37: float rh, t;
  1266                           ;LE7-3.c: 38: TRISB = 0x00;
  1267  0B40  0186               	clrf	6	;volatile
  1268                           
  1269                           ;LE7-3.c: 39: TRISD = 0x00;
  1270  0B41  0188               	clrf	8	;volatile
  1271                           
  1272                           ;LE7-3.c: 40: PORTB = 0x00;
  1273  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0B44  0186               	clrf	6	;volatile
  1276                           
  1277                           ;LE7-3.c: 41: PORTD = 0x00;
  1278  0B45  0188               	clrf	8	;volatile
  1279                           
  1280                           ;LE7-3.c: 42: init_I2C_Master();
  1281  0B46  160A  158A  219D  120A  158A  	fcall	_init_I2C_Master
  1282  0B4B                     l3313:	
  1283                           ;LE7-3.c: 44: for(;;)
  1284                           
  1285                           
  1286                           ;LE7-3.c: 45: {
  1287                           ;LE7-3.c: 46: initLCD();
  1288  0B4B  160A  158A  2213  120A  158A  	fcall	_initLCD
  1289                           
  1290                           ;LE7-3.c: 48: I2C_Start();
  1291  0B50  160A  158A  217F  120A  158A  	fcall	_I2C_Start
  1292                           
  1293                           ;LE7-3.c: 49: I2C_Send(0x80);
  1294  0B55  3080               	movlw	128
  1295  0B56  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1296                           
  1297                           ;LE7-3.c: 50: I2C_Send(0xE5);
  1298  0B5B  30E5               	movlw	229
  1299  0B5C  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1300                           
  1301                           ;LE7-3.c: 51: I2C_RepeatedStart();
  1302  0B61  160A  158A  2178  120A  158A  	fcall	_I2C_RepeatedStart
  1303                           
  1304                           ;LE7-3.c: 52: I2C_Send(0x81);
  1305  0B66  3081               	movlw	129
  1306  0B67  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1307                           
  1308                           ;LE7-3.c: 53: RH_temp = I2C_Receive(1);
  1309  0B6C  3001               	movlw	1
  1310  0B6D  160A  158A  2256  120A  158A  	fcall	_I2C_Receive
  1311  0B72  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0B73  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0B74  00C7               	movwf	??_main^(0+128)
  1314  0B75  01C8               	clrf	(??_main^(0+128)+1)
  1315  0B76  0847               	movf	??_main^(0+128),w
  1316  0B77  00D4               	movwf	main@RH_temp^(0+128)
  1317  0B78  0848               	movf	(??_main+1)^(0+128),w
  1318  0B79  00D5               	movwf	(main@RH_temp+1)^(0+128)
  1319                           
  1320                           ;LE7-3.c: 54: temp = I2C_Receive(0);
  1321  0B7A  3000               	movlw	0
  1322  0B7B  160A  158A  2256  120A  158A  	fcall	_I2C_Receive
  1323  0B80  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0B81  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0B82  00C7               	movwf	??_main^(0+128)
  1326  0B83  0847               	movf	??_main^(0+128),w
  1327  0B84  00D8               	movwf	main@temp^(0+128)
  1328                           
  1329                           ;LE7-3.c: 55: I2C_Stop();
  1330  0B85  160A  158A  2186  120A  158A  	fcall	_I2C_Stop
  1331                           
  1332                           ;LE7-3.c: 56: delay_ms(200);
  1333  0B8A  30C8               	movlw	200
  1334  0B8B  00F0               	movwf	delay_ms@cnt
  1335  0B8C  3000               	movlw	0
  1336  0B8D  00F1               	movwf	delay_ms@cnt+1
  1337  0B8E  120A  158A  2000  120A  158A  	fcall	_delay_ms
  1338                           
  1339                           ;LE7-3.c: 59: RH_temp = RH_temp << 6;
  1340  0B93  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0B94  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0B95  0855               	movf	(main@RH_temp+1)^(0+128),w
  1343  0B96  00C8               	movwf	(??_main^(0+128)+1)
  1344  0B97  0854               	movf	main@RH_temp^(0+128),w
  1345  0B98  00C7               	movwf	??_main^(0+128)
  1346  0B99  3006               	movlw	6
  1347  0B9A  00FF               	movwf	127
  1348  0B9B                     u4415:	
  1349  0B9B  1003               	clrc
  1350  0B9C  0DC7               	rlf	??_main^(0+128),f
  1351  0B9D  0DC8               	rlf	(??_main^(0+128)+1),f
  1352  0B9E  0BFF               	decfsz	127,f
  1353  0B9F  2B9B               	goto	u4415
  1354  0BA0  0847               	movf	??_main^(0+128),w
  1355  0BA1  00D4               	movwf	main@RH_temp^(0+128)
  1356  0BA2  0848               	movf	(??_main+1)^(0+128),w
  1357  0BA3  00D5               	movwf	(main@RH_temp+1)^(0+128)
  1358                           
  1359                           ;LE7-3.c: 60: temp = temp >> 2;
  1360  0BA4  0858               	movf	main@temp^(0+128),w
  1361  0BA5  00C7               	movwf	??_main^(0+128)
  1362  0BA6  3002               	movlw	2
  1363  0BA7                     u4425:	
  1364  0BA7  1003               	clrc
  1365  0BA8  0CC7               	rrf	??_main^(0+128),f
  1366  0BA9  3EFF               	addlw	-1
  1367  0BAA  1D03               	skipz
  1368  0BAB  2BA7               	goto	u4425
  1369  0BAC  0847               	movf	??_main^(0+128),w
  1370  0BAD  00C8               	movwf	(??_main+1)^(0+128)
  1371  0BAE  0848               	movf	(??_main+1)^(0+128),w
  1372  0BAF  00D8               	movwf	main@temp^(0+128)
  1373                           
  1374                           ;LE7-3.c: 61: RH_temp = RH_temp | temp;
  1375  0BB0  0854               	movf	main@RH_temp^(0+128),w
  1376  0BB1  0458               	iorwf	main@temp^(0+128),w
  1377  0BB2  00D4               	movwf	main@RH_temp^(0+128)
  1378  0BB3  0855               	movf	(main@RH_temp+1)^(0+128),w
  1379  0BB4  00D5               	movwf	(main@RH_temp+1)^(0+128)
  1380                           
  1381                           ;LE7-3.c: 63: rh = (float)(-6+(125*((float)RH_temp/(float)res)));
  1382  0BB5  3000               	movlw	0
  1383  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0BB8  00D0               	movwf	___ftadd@f1
  1386  0BB9  30C0               	movlw	192
  1387  0BBA  00D1               	movwf	___ftadd@f1+1
  1388  0BBB  30C0               	movlw	192
  1389  0BBC  00D2               	movwf	___ftadd@f1+2
  1390  0BBD  3000               	movlw	0
  1391  0BBE  00B0               	movwf	___ftmul@f1
  1392  0BBF  30FA               	movlw	250
  1393  0BC0  00B1               	movwf	___ftmul@f1+1
  1394  0BC1  3042               	movlw	66
  1395  0BC2  00B2               	movwf	___ftmul@f1+2
  1396  0BC3  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0BC4  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0BC5  0853               	movf	(main@res+1)^(0+128),w
  1399  0BC6  01F9               	clrf	___awtoft@c+1
  1400  0BC7  07F9               	addwf	___awtoft@c+1,f
  1401  0BC8  0852               	movf	main@res^(0+128),w
  1402  0BC9  01F8               	clrf	___awtoft@c
  1403  0BCA  07F8               	addwf	___awtoft@c,f
  1404  0BCB  160A  118A  20BB  120A  158A  	fcall	___awtoft
  1405  0BD0  0878               	movf	?___awtoft,w
  1406  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0BD3  00A0               	movwf	___ftdiv@f2
  1409  0BD4  0879               	movf	?___awtoft+1,w
  1410  0BD5  00A1               	movwf	___ftdiv@f2+1
  1411  0BD6  087A               	movf	?___awtoft+2,w
  1412  0BD7  00A2               	movwf	___ftdiv@f2+2
  1413  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0BD9  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0BDA  0855               	movf	(main@RH_temp+1)^(0+128),w
  1416  0BDB  01F9               	clrf	___lwtoft@c+1
  1417  0BDC  07F9               	addwf	___lwtoft@c+1,f
  1418  0BDD  0854               	movf	main@RH_temp^(0+128),w
  1419  0BDE  01F8               	clrf	___lwtoft@c
  1420  0BDF  07F8               	addwf	___lwtoft@c,f
  1421  0BE0  160A  158A  21E3  120A  158A  	fcall	___lwtoft
  1422  0BE5  0878               	movf	?___lwtoft,w
  1423  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0BE8  00A3               	movwf	___ftdiv@f1
  1426  0BE9  0879               	movf	?___lwtoft+1,w
  1427  0BEA  00A4               	movwf	___ftdiv@f1+1
  1428  0BEB  087A               	movf	?___lwtoft+2,w
  1429  0BEC  00A5               	movwf	___ftdiv@f1+2
  1430  0BED  160A  118A  20DC  120A  158A  	fcall	___ftdiv
  1431  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0BF4  0820               	movf	?___ftdiv,w
  1434  0BF5  00B3               	movwf	___ftmul@f2
  1435  0BF6  0821               	movf	?___ftdiv+1,w
  1436  0BF7  00B4               	movwf	___ftmul@f2+1
  1437  0BF8  0822               	movf	?___ftdiv+2,w
  1438  0BF9  00B5               	movwf	___ftmul@f2+2
  1439  0BFA  120A  118A  200D  120A  158A  	fcall	___ftmul
  1440  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0C01  0830               	movf	?___ftmul,w
  1443  0C02  00D3               	movwf	___ftadd@f2
  1444  0C03  0831               	movf	?___ftmul+1,w
  1445  0C04  00D4               	movwf	___ftadd@f2+1
  1446  0C05  0832               	movf	?___ftmul+2,w
  1447  0C06  00D5               	movwf	___ftadd@f2+2
  1448  0C07  120A  158A  2028  120A  158A  	fcall	___ftadd
  1449  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0C0E  0850               	movf	?___ftadd,w
  1452  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0C11  00C9               	movwf	main@rh^(0+128)
  1455  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0C14  0851               	movf	?___ftadd+1,w
  1458  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0C17  00CA               	movwf	(main@rh+1)^(0+128)
  1461  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0C1A  0852               	movf	?___ftadd+2,w
  1464  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0C1C  1303               	bcf	3,6	;RP1=0, select bank1
  1466  0C1D  00CB               	movwf	(main@rh+2)^(0+128)
  1467                           
  1468                           ;LE7-3.c: 64: RH = (int)(rh);
  1469  0C1E  0849               	movf	main@rh^(0+128),w
  1470  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0C21  00C9               	movwf	___fttol@f1
  1473  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0C24  084A               	movf	(main@rh+1)^(0+128),w
  1476  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0C27  00CA               	movwf	___fttol@f1+1
  1479  0C28  1683               	bsf	3,5	;RP0=1, select bank1
  1480  0C29  1303               	bcf	3,6	;RP1=0, select bank1
  1481  0C2A  084B               	movf	(main@rh+2)^(0+128),w
  1482  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0C2D  00CB               	movwf	___fttol@f1+2
  1485  0C2E  160A  158A  2640  120A  158A  	fcall	___fttol
  1486  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0C35  084A               	movf	?___fttol+1,w
  1489  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0C37  1303               	bcf	3,6	;RP1=0, select bank1
  1491  0C38  01DD               	clrf	(_RH+1)^(0+128)
  1492  0C39  07DD               	addwf	(_RH+1)^(0+128),f
  1493  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0C3C  0849               	movf	?___fttol,w
  1496  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0C3F  01DC               	clrf	_RH^(0+128)
  1499  0C40  07DC               	addwf	_RH^(0+128),f
  1500                           
  1501                           ;LE7-3.c: 67: I2C_Start();
  1502  0C41  160A  158A  217F  120A  158A  	fcall	_I2C_Start
  1503                           
  1504                           ;LE7-3.c: 68: I2C_Send(0x80);
  1505  0C46  3080               	movlw	128
  1506  0C47  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1507                           
  1508                           ;LE7-3.c: 69: I2C_Send(0xE3);
  1509  0C4C  30E3               	movlw	227
  1510  0C4D  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1511                           
  1512                           ;LE7-3.c: 70: I2C_Stop();
  1513  0C52  160A  158A  2186  120A  158A  	fcall	_I2C_Stop
  1514                           
  1515                           ;LE7-3.c: 71: delay_ms(200);
  1516  0C57  30C8               	movlw	200
  1517  0C58  00F0               	movwf	delay_ms@cnt
  1518  0C59  3000               	movlw	0
  1519  0C5A  00F1               	movwf	delay_ms@cnt+1
  1520  0C5B  120A  158A  2000  120A  158A  	fcall	_delay_ms
  1521                           
  1522                           ;LE7-3.c: 74: temp = 0x00;
  1523  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0C61  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0C62  01D8               	clrf	main@temp^(0+128)
  1526                           
  1527                           ;LE7-3.c: 75: I2C_Start();
  1528  0C63  160A  158A  217F  120A  158A  	fcall	_I2C_Start
  1529                           
  1530                           ;LE7-3.c: 76: I2C_Send(0x80);
  1531  0C68  3080               	movlw	128
  1532  0C69  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1533                           
  1534                           ;LE7-3.c: 77: I2C_Send(0xE3);
  1535  0C6E  30E3               	movlw	227
  1536  0C6F  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1537                           
  1538                           ;LE7-3.c: 78: I2C_RepeatedStart();
  1539  0C74  160A  158A  2178  120A  158A  	fcall	_I2C_RepeatedStart
  1540                           
  1541                           ;LE7-3.c: 79: I2C_Send(0x81);
  1542  0C79  3081               	movlw	129
  1543  0C7A  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1544                           
  1545                           ;LE7-3.c: 80: T_temp = I2C_Receive(1);
  1546  0C7F  3001               	movlw	1
  1547  0C80  160A  158A  2256  120A  158A  	fcall	_I2C_Receive
  1548  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0C87  00C7               	movwf	??_main^(0+128)
  1551  0C88  01C8               	clrf	(??_main^(0+128)+1)
  1552  0C89  0847               	movf	??_main^(0+128),w
  1553  0C8A  00D6               	movwf	main@T_temp^(0+128)
  1554  0C8B  0848               	movf	(??_main+1)^(0+128),w
  1555  0C8C  00D7               	movwf	(main@T_temp+1)^(0+128)
  1556                           
  1557                           ;LE7-3.c: 81: temp = I2C_Receive(0);
  1558  0C8D  3000               	movlw	0
  1559  0C8E  160A  158A  2256  120A  158A  	fcall	_I2C_Receive
  1560  0C93  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0C94  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0C95  00C7               	movwf	??_main^(0+128)
  1563  0C96  0847               	movf	??_main^(0+128),w
  1564  0C97  00D8               	movwf	main@temp^(0+128)
  1565                           
  1566                           ;LE7-3.c: 82: I2C_Stop();
  1567  0C98  160A  158A  2186  120A  158A  	fcall	_I2C_Stop
  1568                           
  1569                           ;LE7-3.c: 83: delay_ms(200);
  1570  0C9D  30C8               	movlw	200
  1571  0C9E  00F0               	movwf	delay_ms@cnt
  1572  0C9F  3000               	movlw	0
  1573  0CA0  00F1               	movwf	delay_ms@cnt+1
  1574  0CA1  120A  158A  2000  120A  158A  	fcall	_delay_ms
  1575                           
  1576                           ;LE7-3.c: 85: T_temp = T_temp << 6;
  1577  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0CA7  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0CA8  0857               	movf	(main@T_temp+1)^(0+128),w
  1580  0CA9  00C8               	movwf	(??_main^(0+128)+1)
  1581  0CAA  0856               	movf	main@T_temp^(0+128),w
  1582  0CAB  00C7               	movwf	??_main^(0+128)
  1583  0CAC  3006               	movlw	6
  1584  0CAD  00FF               	movwf	127
  1585  0CAE                     u4435:	
  1586  0CAE  1003               	clrc
  1587  0CAF  0DC7               	rlf	??_main^(0+128),f
  1588  0CB0  0DC8               	rlf	(??_main^(0+128)+1),f
  1589  0CB1  0BFF               	decfsz	127,f
  1590  0CB2  2CAE               	goto	u4435
  1591  0CB3  0847               	movf	??_main^(0+128),w
  1592  0CB4  00D6               	movwf	main@T_temp^(0+128)
  1593  0CB5  0848               	movf	(??_main+1)^(0+128),w
  1594  0CB6  00D7               	movwf	(main@T_temp+1)^(0+128)
  1595                           
  1596                           ;LE7-3.c: 86: temp = temp >> 2;
  1597  0CB7  0858               	movf	main@temp^(0+128),w
  1598  0CB8  00C7               	movwf	??_main^(0+128)
  1599  0CB9  3002               	movlw	2
  1600  0CBA                     u4445:	
  1601  0CBA  1003               	clrc
  1602  0CBB  0CC7               	rrf	??_main^(0+128),f
  1603  0CBC  3EFF               	addlw	-1
  1604  0CBD  1D03               	skipz
  1605  0CBE  2CBA               	goto	u4445
  1606  0CBF  0847               	movf	??_main^(0+128),w
  1607  0CC0  00C8               	movwf	(??_main+1)^(0+128)
  1608  0CC1  0848               	movf	(??_main+1)^(0+128),w
  1609  0CC2  00D8               	movwf	main@temp^(0+128)
  1610                           
  1611                           ;LE7-3.c: 87: T_temp = T_temp | temp;
  1612  0CC3  0856               	movf	main@T_temp^(0+128),w
  1613  0CC4  0458               	iorwf	main@temp^(0+128),w
  1614  0CC5  00D6               	movwf	main@T_temp^(0+128)
  1615  0CC6  0857               	movf	(main@T_temp+1)^(0+128),w
  1616  0CC7  00D7               	movwf	(main@T_temp+1)^(0+128)
  1617                           
  1618                           ;LE7-3.c: 89: t = (float)(-46.85+(175.72*((float)T_temp/(float)res)));
  1619  0CC8  3066               	movlw	102
  1620  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1622  0CCB  00D0               	movwf	___ftadd@f1
  1623  0CCC  303B               	movlw	59
  1624  0CCD  00D1               	movwf	___ftadd@f1+1
  1625  0CCE  30C2               	movlw	194
  1626  0CCF  00D2               	movwf	___ftadd@f1+2
  1627  0CD0  30B8               	movlw	184
  1628  0CD1  00B0               	movwf	___ftmul@f1
  1629  0CD2  302F               	movlw	47
  1630  0CD3  00B1               	movwf	___ftmul@f1+1
  1631  0CD4  3043               	movlw	67
  1632  0CD5  00B2               	movwf	___ftmul@f1+2
  1633  0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0CD8  0853               	movf	(main@res+1)^(0+128),w
  1636  0CD9  01F9               	clrf	___awtoft@c+1
  1637  0CDA  07F9               	addwf	___awtoft@c+1,f
  1638  0CDB  0852               	movf	main@res^(0+128),w
  1639  0CDC  01F8               	clrf	___awtoft@c
  1640  0CDD  07F8               	addwf	___awtoft@c,f
  1641  0CDE  160A  118A  20BB  120A  158A  	fcall	___awtoft
  1642  0CE3  0878               	movf	?___awtoft,w
  1643  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0CE6  00A0               	movwf	___ftdiv@f2
  1646  0CE7  0879               	movf	?___awtoft+1,w
  1647  0CE8  00A1               	movwf	___ftdiv@f2+1
  1648  0CE9  087A               	movf	?___awtoft+2,w
  1649  0CEA  00A2               	movwf	___ftdiv@f2+2
  1650  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0CED  0857               	movf	(main@T_temp+1)^(0+128),w
  1653  0CEE  01F9               	clrf	___lwtoft@c+1
  1654  0CEF  07F9               	addwf	___lwtoft@c+1,f
  1655  0CF0  0856               	movf	main@T_temp^(0+128),w
  1656  0CF1  01F8               	clrf	___lwtoft@c
  1657  0CF2  07F8               	addwf	___lwtoft@c,f
  1658  0CF3  160A  158A  21E3  120A  158A  	fcall	___lwtoft
  1659  0CF8  0878               	movf	?___lwtoft,w
  1660  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0CFB  00A3               	movwf	___ftdiv@f1
  1663  0CFC  0879               	movf	?___lwtoft+1,w
  1664  0CFD  00A4               	movwf	___ftdiv@f1+1
  1665  0CFE  087A               	movf	?___lwtoft+2,w
  1666  0CFF  00A5               	movwf	___ftdiv@f1+2
  1667  0D00  160A  118A  20DC  120A  158A  	fcall	___ftdiv
  1668  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0D07  0820               	movf	?___ftdiv,w
  1671  0D08  00B3               	movwf	___ftmul@f2
  1672  0D09  0821               	movf	?___ftdiv+1,w
  1673  0D0A  00B4               	movwf	___ftmul@f2+1
  1674  0D0B  0822               	movf	?___ftdiv+2,w
  1675  0D0C  00B5               	movwf	___ftmul@f2+2
  1676  0D0D  120A  118A  200D  120A  158A  	fcall	___ftmul
  1677  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0D14  0830               	movf	?___ftmul,w
  1680  0D15  00D3               	movwf	___ftadd@f2
  1681  0D16  0831               	movf	?___ftmul+1,w
  1682  0D17  00D4               	movwf	___ftadd@f2+1
  1683  0D18  0832               	movf	?___ftmul+2,w
  1684  0D19  00D5               	movwf	___ftadd@f2+2
  1685  0D1A  120A  158A  2028  120A  158A  	fcall	___ftadd
  1686  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0D21  0850               	movf	?___ftadd,w
  1689  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0D24  00CC               	movwf	main@t^(0+128)
  1692  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0D27  0851               	movf	?___ftadd+1,w
  1695  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0D2A  00CD               	movwf	(main@t+1)^(0+128)
  1698  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0D2D  0852               	movf	?___ftadd+2,w
  1701  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0D30  00CE               	movwf	(main@t+2)^(0+128)
  1704                           
  1705                           ;LE7-3.c: 90: T = t;
  1706  0D31  084C               	movf	main@t^(0+128),w
  1707  0D32  00D9               	movwf	_T^(0+128)
  1708  0D33  084D               	movf	(main@t+1)^(0+128),w
  1709  0D34  00DA               	movwf	(_T+1)^(0+128)
  1710  0D35  084E               	movf	(main@t+2)^(0+128),w
  1711  0D36  00DB               	movwf	(_T+2)^(0+128)
  1712                           
  1713                           ;LE7-3.c: 93: I2C_Start();
  1714  0D37  160A  158A  217F  120A  158A  	fcall	_I2C_Start
  1715                           
  1716                           ;LE7-3.c: 94: I2C_Send(0x80);
  1717  0D3C  3080               	movlw	128
  1718  0D3D  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1719                           
  1720                           ;LE7-3.c: 95: I2C_Send(0xE5);
  1721  0D42  30E5               	movlw	229
  1722  0D43  120A  118A  2004  120A  158A  	fcall	_I2C_Send
  1723                           
  1724                           ;LE7-3.c: 96: I2C_Stop();
  1725  0D48  160A  158A  2186  120A  158A  	fcall	_I2C_Stop
  1726                           
  1727                           ;LE7-3.c: 97: delay_ms(200);
  1728  0D4D  30C8               	movlw	200
  1729  0D4E  00F0               	movwf	delay_ms@cnt
  1730  0D4F  3000               	movlw	0
  1731  0D50  00F1               	movwf	delay_ms@cnt+1
  1732  0D51  120A  158A  2000  120A  158A  	fcall	_delay_ms
  1733                           
  1734                           ;LE7-3.c: 99: dispRH();
  1735  0D56  160A  158A  25BD  120A  158A  	fcall	_dispRH
  1736                           
  1737                           ;LE7-3.c: 100: dispT();
  1738  0D5B  160A  118A  2257  120A  158A  	fcall	_dispT
  1739                           
  1740                           ;LE7-3.c: 101: }
  1741  0D60  2B4B               	goto	l3313
  1742  0D61                     __end_of_main:	
  1743                           
  1744                           	psect	text1
  1745  1520                     __ptext1:	
  1746 ;; *************** function _pow *****************
  1747 ;; Defined at:
  1748 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\pow.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  x               3   15[BANK1 ] unsigned char 
  1751 ;;  y               3   18[BANK1 ] unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  yi              4   28[BANK1 ] unsigned long 
  1754 ;;  sign            1   27[BANK1 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  3   15[BANK1 ] unsigned char 
  1757 ;; Registers used:
  1758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         0       0       6       0       0
  1765 ;;      Locals:         0       0      11       0       0
  1766 ;;      Temps:          0       1       0       0       0
  1767 ;;      Totals:         0       1      17       0       0
  1768 ;;Total ram usage:       18 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    4
  1771 ;; This function calls:
  1772 ;;		___ftge
  1773 ;;		___ftmul
  1774 ;;		___ftneg
  1775 ;;		___fttol
  1776 ;;		___lltoft
  1777 ;;		_exp
  1778 ;;		_log
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _pow
  1786  1520                     _pow:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1790  1520  1683               	bsf	3,5	;RP0=1, select bank1
  1791  1521  1303               	bcf	3,6	;RP1=0, select bank1
  1792  1522  01BB               	clrf	pow@sign^(0+128)
  1793  1523  0831               	movf	(pow@x+2)^(0+128),w
  1794  1524  0430               	iorwf	(pow@x+1)^(0+128),w
  1795  1525  042F               	iorwf	pow@x^(0+128),w
  1796  1526  1D03               	skipz
  1797  1527  2D4A               	goto	l3175
  1798  1528  3000               	movlw	0
  1799  1529  00F0               	movwf	___ftge@ff1
  1800  152A  3000               	movlw	0
  1801  152B  00F1               	movwf	___ftge@ff1+1
  1802  152C  3000               	movlw	0
  1803  152D  00F2               	movwf	___ftge@ff1+2
  1804  152E  0832               	movf	pow@y^(0+128),w
  1805  152F  00F3               	movwf	___ftge@ff2
  1806  1530  0833               	movf	(pow@y+1)^(0+128),w
  1807  1531  00F4               	movwf	___ftge@ff2+1
  1808  1532  0834               	movf	(pow@y+2)^(0+128),w
  1809  1533  00F5               	movwf	___ftge@ff2+2
  1810  1534  160A  158A  23C4  160A  118A  	fcall	___ftge
  1811  1539  1C03               	btfss	3,0
  1812  153A  2D41               	goto	l686
  1813  153B  3021               	movlw	33
  1814  153C  1683               	bsf	3,5	;RP0=1, select bank1
  1815  153D  1303               	bcf	3,6	;RP1=0, select bank1
  1816  153E  00DE               	movwf	_errno^(0+128)
  1817  153F  3000               	movlw	0
  1818  1540  00DF               	movwf	(_errno^(0+128)+1)
  1819  1541                     l686:	
  1820  1541  3000               	movlw	0
  1821  1542  1683               	bsf	3,5	;RP0=1, select bank1
  1822  1543  1303               	bcf	3,6	;RP1=0, select bank1
  1823  1544  00AF               	movwf	?_pow^(0+128)
  1824  1545  3000               	movlw	0
  1825  1546  00B0               	movwf	(?_pow+1)^(0+128)
  1826  1547  3000               	movlw	0
  1827  1548  00B1               	movwf	(?_pow+2)^(0+128)
  1828  1549  0008               	return
  1829  154A                     l3175:	
  1830  154A  0834               	movf	(pow@y+2)^(0+128),w
  1831  154B  0433               	iorwf	(pow@y+1)^(0+128),w
  1832  154C  0432               	iorwf	pow@y^(0+128),w
  1833  154D  1D03               	skipz
  1834  154E  2D56               	goto	l3181
  1835  154F  3000               	movlw	0
  1836  1550  00AF               	movwf	?_pow^(0+128)
  1837  1551  3080               	movlw	128
  1838  1552  00B0               	movwf	(?_pow+1)^(0+128)
  1839  1553  303F               	movlw	63
  1840  1554  00B1               	movwf	(?_pow+2)^(0+128)
  1841  1555  0008               	return
  1842  1556                     l3181:	
  1843  1556  082F               	movf	pow@x^(0+128),w
  1844  1557  00F0               	movwf	___ftge@ff1
  1845  1558  0830               	movf	(pow@x+1)^(0+128),w
  1846  1559  00F1               	movwf	___ftge@ff1+1
  1847  155A  0831               	movf	(pow@x+2)^(0+128),w
  1848  155B  00F2               	movwf	___ftge@ff1+2
  1849  155C  3000               	movlw	0
  1850  155D  00F3               	movwf	___ftge@ff2
  1851  155E  3000               	movlw	0
  1852  155F  00F4               	movwf	___ftge@ff2+1
  1853  1560  3000               	movlw	0
  1854  1561  00F5               	movwf	___ftge@ff2+2
  1855  1562  160A  158A  23C4  160A  118A  	fcall	___ftge
  1856  1567  1803               	btfsc	3,0
  1857  1568  2DDA               	goto	l3193
  1858  1569  1683               	bsf	3,5	;RP0=1, select bank1
  1859  156A  1303               	bcf	3,6	;RP1=0, select bank1
  1860  156B  0832               	movf	pow@y^(0+128),w
  1861  156C  1283               	bcf	3,5	;RP0=0, select bank0
  1862  156D  1303               	bcf	3,6	;RP1=0, select bank0
  1863  156E  00C9               	movwf	___fttol@f1
  1864  156F  1683               	bsf	3,5	;RP0=1, select bank1
  1865  1570  1303               	bcf	3,6	;RP1=0, select bank1
  1866  1571  0833               	movf	(pow@y+1)^(0+128),w
  1867  1572  1283               	bcf	3,5	;RP0=0, select bank0
  1868  1573  1303               	bcf	3,6	;RP1=0, select bank0
  1869  1574  00CA               	movwf	___fttol@f1+1
  1870  1575  1683               	bsf	3,5	;RP0=1, select bank1
  1871  1576  1303               	bcf	3,6	;RP1=0, select bank1
  1872  1577  0834               	movf	(pow@y+2)^(0+128),w
  1873  1578  1283               	bcf	3,5	;RP0=0, select bank0
  1874  1579  1303               	bcf	3,6	;RP1=0, select bank0
  1875  157A  00CB               	movwf	___fttol@f1+2
  1876  157B  160A  158A  2640  160A  118A  	fcall	___fttol
  1877  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1878  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1879  1582  084C               	movf	?___fttol+3,w
  1880  1583  1683               	bsf	3,5	;RP0=1, select bank1
  1881  1584  1303               	bcf	3,6	;RP1=0, select bank1
  1882  1585  00BF               	movwf	(pow@yi+3)^(0+128)
  1883  1586  1283               	bcf	3,5	;RP0=0, select bank0
  1884  1587  1303               	bcf	3,6	;RP1=0, select bank0
  1885  1588  084B               	movf	?___fttol+2,w
  1886  1589  1683               	bsf	3,5	;RP0=1, select bank1
  1887  158A  1303               	bcf	3,6	;RP1=0, select bank1
  1888  158B  00BE               	movwf	(pow@yi+2)^(0+128)
  1889  158C  1283               	bcf	3,5	;RP0=0, select bank0
  1890  158D  1303               	bcf	3,6	;RP1=0, select bank0
  1891  158E  084A               	movf	?___fttol+1,w
  1892  158F  1683               	bsf	3,5	;RP0=1, select bank1
  1893  1590  1303               	bcf	3,6	;RP1=0, select bank1
  1894  1591  00BD               	movwf	(pow@yi+1)^(0+128)
  1895  1592  1283               	bcf	3,5	;RP0=0, select bank0
  1896  1593  1303               	bcf	3,6	;RP1=0, select bank0
  1897  1594  0849               	movf	?___fttol,w
  1898  1595  1683               	bsf	3,5	;RP0=1, select bank1
  1899  1596  1303               	bcf	3,6	;RP1=0, select bank1
  1900  1597  00BC               	movwf	pow@yi^(0+128)
  1901  1598  083F               	movf	(pow@yi+3)^(0+128),w
  1902  1599  00FB               	movwf	___lltoft@c+3
  1903  159A  083E               	movf	(pow@yi+2)^(0+128),w
  1904  159B  00FA               	movwf	___lltoft@c+2
  1905  159C  083D               	movf	(pow@yi+1)^(0+128),w
  1906  159D  00F9               	movwf	___lltoft@c+1
  1907  159E  083C               	movf	pow@yi^(0+128),w
  1908  159F  00F8               	movwf	___lltoft@c
  1909  15A0  160A  158A  227C  160A  118A  	fcall	___lltoft
  1910  15A5  1683               	bsf	3,5	;RP0=1, select bank1
  1911  15A6  1303               	bcf	3,6	;RP1=0, select bank1
  1912  15A7  0834               	movf	(pow@y+2)^(0+128),w
  1913  15A8  067A               	xorwf	?___lltoft+2,w
  1914  15A9  1D03               	skipz
  1915  15AA  2DB1               	goto	u4375
  1916  15AB  0833               	movf	(pow@y+1)^(0+128),w
  1917  15AC  0679               	xorwf	?___lltoft+1,w
  1918  15AD  1D03               	skipz
  1919  15AE  2DB1               	goto	u4375
  1920  15AF  0832               	movf	pow@y^(0+128),w
  1921  15B0  0678               	xorwf	?___lltoft,w
  1922  15B1                     u4375:	
  1923  15B1  1903               	skipnz
  1924  15B2  2DBE               	goto	l3189
  1925  15B3  3021               	movlw	33
  1926  15B4  00DE               	movwf	_errno^(0+128)
  1927  15B5  3000               	movlw	0
  1928  15B6  00DF               	movwf	(_errno^(0+128)+1)
  1929  15B7  3000               	movlw	0
  1930  15B8  00AF               	movwf	?_pow^(0+128)
  1931  15B9  3000               	movlw	0
  1932  15BA  00B0               	movwf	(?_pow+1)^(0+128)
  1933  15BB  3000               	movlw	0
  1934  15BC  00B1               	movwf	(?_pow+2)^(0+128)
  1935  15BD  0008               	return
  1936  15BE                     l3189:	
  1937  15BE  083C               	movf	pow@yi^(0+128),w
  1938  15BF  3901               	andlw	1
  1939  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  1940  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  1941  15C2  00EF               	movwf	??_pow
  1942  15C3  086F               	movf	??_pow,w
  1943  15C4  1683               	bsf	3,5	;RP0=1, select bank1
  1944  15C5  1303               	bcf	3,6	;RP1=0, select bank1
  1945  15C6  00BB               	movwf	pow@sign^(0+128)
  1946  15C7  082F               	movf	pow@x^(0+128),w
  1947  15C8  00F0               	movwf	___ftneg@f1
  1948  15C9  0830               	movf	(pow@x+1)^(0+128),w
  1949  15CA  00F1               	movwf	___ftneg@f1+1
  1950  15CB  0831               	movf	(pow@x+2)^(0+128),w
  1951  15CC  00F2               	movwf	___ftneg@f1+2
  1952  15CD  160A  158A  2195  160A  118A  	fcall	___ftneg
  1953  15D2  0870               	movf	?___ftneg,w
  1954  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  1955  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  1956  15D5  00AF               	movwf	pow@x^(0+128)
  1957  15D6  0871               	movf	?___ftneg+1,w
  1958  15D7  00B0               	movwf	(pow@x+1)^(0+128)
  1959  15D8  0872               	movf	?___ftneg+2,w
  1960  15D9  00B1               	movwf	(pow@x+2)^(0+128)
  1961  15DA                     l3193:	
  1962  15DA  1683               	bsf	3,5	;RP0=1, select bank1
  1963  15DB  1303               	bcf	3,6	;RP1=0, select bank1
  1964  15DC  082F               	movf	pow@x^(0+128),w
  1965  15DD  1283               	bcf	3,5	;RP0=0, select bank0
  1966  15DE  1303               	bcf	3,6	;RP1=0, select bank0
  1967  15DF  00E7               	movwf	log@x
  1968  15E0  1683               	bsf	3,5	;RP0=1, select bank1
  1969  15E1  1303               	bcf	3,6	;RP1=0, select bank1
  1970  15E2  0830               	movf	(pow@x+1)^(0+128),w
  1971  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  1972  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  1973  15E5  00E8               	movwf	log@x+1
  1974  15E6  1683               	bsf	3,5	;RP0=1, select bank1
  1975  15E7  1303               	bcf	3,6	;RP1=0, select bank1
  1976  15E8  0831               	movf	(pow@x+2)^(0+128),w
  1977  15E9  1283               	bcf	3,5	;RP0=0, select bank0
  1978  15EA  1303               	bcf	3,6	;RP1=0, select bank0
  1979  15EB  00E9               	movwf	log@x+2
  1980  15EC  160A  118A  231E  160A  118A  	fcall	_log
  1981  15F1  1283               	bcf	3,5	;RP0=0, select bank0
  1982  15F2  1303               	bcf	3,6	;RP1=0, select bank0
  1983  15F3  0867               	movf	?_log,w
  1984  15F4  1683               	bsf	3,5	;RP0=1, select bank1
  1985  15F5  1303               	bcf	3,6	;RP1=0, select bank1
  1986  15F6  00B5               	movwf	_pow$692^(0+128)
  1987  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  1988  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  1989  15F9  0868               	movf	?_log+1,w
  1990  15FA  1683               	bsf	3,5	;RP0=1, select bank1
  1991  15FB  1303               	bcf	3,6	;RP1=0, select bank1
  1992  15FC  00B6               	movwf	(_pow$692+1)^(0+128)
  1993  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  1994  15FE  1303               	bcf	3,6	;RP1=0, select bank0
  1995  15FF  0869               	movf	?_log+2,w
  1996  1600  1683               	bsf	3,5	;RP0=1, select bank1
  1997  1601  1303               	bcf	3,6	;RP1=0, select bank1
  1998  1602  00B7               	movwf	(_pow$692+2)^(0+128)
  1999  1603  0832               	movf	pow@y^(0+128),w
  2000  1604  1283               	bcf	3,5	;RP0=0, select bank0
  2001  1605  1303               	bcf	3,6	;RP1=0, select bank0
  2002  1606  00B0               	movwf	___ftmul@f1
  2003  1607  1683               	bsf	3,5	;RP0=1, select bank1
  2004  1608  1303               	bcf	3,6	;RP1=0, select bank1
  2005  1609  0833               	movf	(pow@y+1)^(0+128),w
  2006  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2007  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2008  160C  00B1               	movwf	___ftmul@f1+1
  2009  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2010  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2011  160F  0834               	movf	(pow@y+2)^(0+128),w
  2012  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2013  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2014  1612  00B2               	movwf	___ftmul@f1+2
  2015  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2016  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2017  1615  0835               	movf	_pow$692^(0+128),w
  2018  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2019  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2020  1618  00B3               	movwf	___ftmul@f2
  2021  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2022  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2023  161B  0836               	movf	(_pow$692+1)^(0+128),w
  2024  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2025  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2026  161E  00B4               	movwf	___ftmul@f2+1
  2027  161F  1683               	bsf	3,5	;RP0=1, select bank1
  2028  1620  1303               	bcf	3,6	;RP1=0, select bank1
  2029  1621  0837               	movf	(_pow$692+2)^(0+128),w
  2030  1622  1283               	bcf	3,5	;RP0=0, select bank0
  2031  1623  1303               	bcf	3,6	;RP1=0, select bank0
  2032  1624  00B5               	movwf	___ftmul@f2+2
  2033  1625  120A  118A  200D  160A  118A  	fcall	___ftmul
  2034  162A  1283               	bcf	3,5	;RP0=0, select bank0
  2035  162B  1303               	bcf	3,6	;RP1=0, select bank0
  2036  162C  0830               	movf	?___ftmul,w
  2037  162D  1683               	bsf	3,5	;RP0=1, select bank1
  2038  162E  1303               	bcf	3,6	;RP1=0, select bank1
  2039  162F  00B8               	movwf	_pow$693^(0+128)
  2040  1630  1283               	bcf	3,5	;RP0=0, select bank0
  2041  1631  1303               	bcf	3,6	;RP1=0, select bank0
  2042  1632  0831               	movf	?___ftmul+1,w
  2043  1633  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1634  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1635  00B9               	movwf	(_pow$693+1)^(0+128)
  2046  1636  1283               	bcf	3,5	;RP0=0, select bank0
  2047  1637  1303               	bcf	3,6	;RP1=0, select bank0
  2048  1638  0832               	movf	?___ftmul+2,w
  2049  1639  1683               	bsf	3,5	;RP0=1, select bank1
  2050  163A  1303               	bcf	3,6	;RP1=0, select bank1
  2051  163B  00BA               	movwf	(_pow$693+2)^(0+128)
  2052  163C  0838               	movf	_pow$693^(0+128),w
  2053  163D  00A3               	movwf	exp@x^(0+128)
  2054  163E  0839               	movf	(_pow$693+1)^(0+128),w
  2055  163F  00A4               	movwf	(exp@x+1)^(0+128)
  2056  1640  083A               	movf	(_pow$693+2)^(0+128),w
  2057  1641  00A5               	movwf	(exp@x+2)^(0+128)
  2058  1642  120A  158A  2131  160A  118A  	fcall	_exp
  2059  1647  1683               	bsf	3,5	;RP0=1, select bank1
  2060  1648  1303               	bcf	3,6	;RP1=0, select bank1
  2061  1649  0823               	movf	?_exp^(0+128),w
  2062  164A  00AF               	movwf	pow@x^(0+128)
  2063  164B  0824               	movf	(?_exp+1)^(0+128),w
  2064  164C  00B0               	movwf	(pow@x+1)^(0+128)
  2065  164D  0825               	movf	(?_exp+2)^(0+128),w
  2066  164E  00B1               	movwf	(pow@x+2)^(0+128)
  2067  164F  083B               	movf	pow@sign^(0+128),w
  2068  1650  1903               	btfsc	3,2
  2069  1651  0008               	return
  2070  1652  082F               	movf	pow@x^(0+128),w
  2071  1653  00F0               	movwf	___ftneg@f1
  2072  1654  0830               	movf	(pow@x+1)^(0+128),w
  2073  1655  00F1               	movwf	___ftneg@f1+1
  2074  1656  0831               	movf	(pow@x+2)^(0+128),w
  2075  1657  00F2               	movwf	___ftneg@f1+2
  2076  1658  160A  158A  2195   	fcall	___ftneg
  2077  165B  0870               	movf	?___ftneg,w
  2078  165C  1683               	bsf	3,5	;RP0=1, select bank1
  2079  165D  1303               	bcf	3,6	;RP1=0, select bank1
  2080  165E  00AF               	movwf	?_pow^(0+128)
  2081  165F  0871               	movf	?___ftneg+1,w
  2082  1660  00B0               	movwf	(?_pow+1)^(0+128)
  2083  1661  0872               	movf	?___ftneg+2,w
  2084  1662  00B1               	movwf	(?_pow+2)^(0+128)
  2085  1663  0008               	return
  2086  1664                     __end_of_pow:	
  2087                           
  2088                           	psect	text2
  2089  131E                     __ptext2:	
  2090 ;; *************** function _log *****************
  2091 ;; Defined at:
  2092 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  x               3   71[BANK0 ] unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  exponent        2   75[BANK0 ] int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  3   71[BANK0 ] int 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       3       0       0       0
  2107 ;;      Locals:         0       2       0       0       0
  2108 ;;      Temps:          0       1       0       0       0
  2109 ;;      Totals:         0       6       0       0       0
  2110 ;;Total ram usage:        6 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    3
  2113 ;; This function calls:
  2114 ;;		___awtoft
  2115 ;;		___ftadd
  2116 ;;		___ftge
  2117 ;;		___ftmul
  2118 ;;		_eval_poly
  2119 ;;		_frexp
  2120 ;; This function is called by:
  2121 ;;		_pow
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _log
  2127  131E                     _log:	
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2131  131E  1283               	bcf	3,5	;RP0=0, select bank0
  2132  131F  1303               	bcf	3,6	;RP1=0, select bank0
  2133  1320  0867               	movf	log@x,w
  2134  1321  00F0               	movwf	___ftge@ff1
  2135  1322  0868               	movf	log@x+1,w
  2136  1323  00F1               	movwf	___ftge@ff1+1
  2137  1324  0869               	movf	log@x+2,w
  2138  1325  00F2               	movwf	___ftge@ff1+2
  2139  1326  3000               	movlw	0
  2140  1327  00F3               	movwf	___ftge@ff2
  2141  1328  3000               	movlw	0
  2142  1329  00F4               	movwf	___ftge@ff2+1
  2143  132A  3000               	movlw	0
  2144  132B  00F5               	movwf	___ftge@ff2+2
  2145  132C  160A  158A  23C4  160A  118A  	fcall	___ftge
  2146  1331  1803               	btfsc	3,0
  2147  1332  2B42               	goto	l3095
  2148  1333  3021               	movlw	33
  2149  1334  1683               	bsf	3,5	;RP0=1, select bank1
  2150  1335  1303               	bcf	3,6	;RP1=0, select bank1
  2151  1336  00DE               	movwf	_errno^(0+128)
  2152  1337  3000               	movlw	0
  2153  1338  00DF               	movwf	(_errno^(0+128)+1)
  2154  1339  3000               	movlw	0
  2155  133A  1283               	bcf	3,5	;RP0=0, select bank0
  2156  133B  1303               	bcf	3,6	;RP1=0, select bank0
  2157  133C  00E7               	movwf	?_log
  2158  133D  3000               	movlw	0
  2159  133E  00E8               	movwf	?_log+1
  2160  133F  3000               	movlw	0
  2161  1340  00E9               	movwf	?_log+2
  2162  1341  0008               	return
  2163  1342                     l3095:	
  2164  1342  1283               	bcf	3,5	;RP0=0, select bank0
  2165  1343  1303               	bcf	3,6	;RP1=0, select bank0
  2166  1344  0869               	movf	log@x+2,w
  2167  1345  0468               	iorwf	log@x+1,w
  2168  1346  0467               	iorwf	log@x,w
  2169  1347  1D03               	skipz
  2170  1348  2B58               	goto	l3101
  2171  1349  3022               	movlw	34
  2172  134A  1683               	bsf	3,5	;RP0=1, select bank1
  2173  134B  1303               	bcf	3,6	;RP1=0, select bank1
  2174  134C  00DE               	movwf	_errno^(0+128)
  2175  134D  3000               	movlw	0
  2176  134E  00DF               	movwf	(_errno^(0+128)+1)
  2177  134F  3000               	movlw	0
  2178  1350  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1351  1303               	bcf	3,6	;RP1=0, select bank0
  2180  1352  00E7               	movwf	?_log
  2181  1353  3000               	movlw	0
  2182  1354  00E8               	movwf	?_log+1
  2183  1355  3000               	movlw	0
  2184  1356  00E9               	movwf	?_log+2
  2185  1357  0008               	return
  2186  1358                     l3101:	
  2187  1358  3000               	movlw	0
  2188  1359  00D0               	movwf	___ftadd@f1
  2189  135A  3080               	movlw	128
  2190  135B  00D1               	movwf	___ftadd@f1+1
  2191  135C  30BF               	movlw	191
  2192  135D  00D2               	movwf	___ftadd@f1+2
  2193  135E  3000               	movlw	0
  2194  135F  00B0               	movwf	___ftmul@f1
  2195  1360  3000               	movlw	0
  2196  1361  00B1               	movwf	___ftmul@f1+1
  2197  1362  3040               	movlw	64
  2198  1363  00B2               	movwf	___ftmul@f1+2
  2199  1364  306B               	movlw	log@exponent& (0+255)
  2200  1365  00EA               	movwf	??_log
  2201  1366  086A               	movf	??_log,w
  2202  1367  00F3               	movwf	frexp@eptr
  2203  1368  0867               	movf	log@x,w
  2204  1369  00F0               	movwf	frexp@value
  2205  136A  0868               	movf	log@x+1,w
  2206  136B  00F1               	movwf	frexp@value+1
  2207  136C  0869               	movf	log@x+2,w
  2208  136D  00F2               	movwf	frexp@value+2
  2209  136E  160A  158A  22A7  160A  118A  	fcall	_frexp
  2210  1373  0870               	movf	?_frexp,w
  2211  1374  1283               	bcf	3,5	;RP0=0, select bank0
  2212  1375  1303               	bcf	3,6	;RP1=0, select bank0
  2213  1376  00B3               	movwf	___ftmul@f2
  2214  1377  0871               	movf	?_frexp+1,w
  2215  1378  00B4               	movwf	___ftmul@f2+1
  2216  1379  0872               	movf	?_frexp+2,w
  2217  137A  00B5               	movwf	___ftmul@f2+2
  2218  137B  120A  118A  200D  160A  118A  	fcall	___ftmul
  2219  1380  1283               	bcf	3,5	;RP0=0, select bank0
  2220  1381  1303               	bcf	3,6	;RP1=0, select bank0
  2221  1382  0830               	movf	?___ftmul,w
  2222  1383  00D3               	movwf	___ftadd@f2
  2223  1384  0831               	movf	?___ftmul+1,w
  2224  1385  00D4               	movwf	___ftadd@f2+1
  2225  1386  0832               	movf	?___ftmul+2,w
  2226  1387  00D5               	movwf	___ftadd@f2+2
  2227  1388  120A  158A  2028  160A  118A  	fcall	___ftadd
  2228  138D  1283               	bcf	3,5	;RP0=0, select bank0
  2229  138E  1303               	bcf	3,6	;RP1=0, select bank0
  2230  138F  0850               	movf	?___ftadd,w
  2231  1390  00E7               	movwf	log@x
  2232  1391  0851               	movf	?___ftadd+1,w
  2233  1392  00E8               	movwf	log@x+1
  2234  1393  0852               	movf	?___ftadd+2,w
  2235  1394  00E9               	movwf	log@x+2
  2236  1395  30FF               	movlw	255
  2237  1396  07EB               	addwf	log@exponent,f
  2238  1397  1803               	skipnc
  2239  1398  0AEC               	incf	log@exponent+1,f
  2240  1399  30FF               	movlw	255
  2241  139A  07EC               	addwf	log@exponent+1,f
  2242  139B  0867               	movf	log@x,w
  2243  139C  00DD               	movwf	eval_poly@x
  2244  139D  0868               	movf	log@x+1,w
  2245  139E  00DE               	movwf	eval_poly@x+1
  2246  139F  0869               	movf	log@x+2,w
  2247  13A0  00DF               	movwf	eval_poly@x+2
  2248  13A1  3095               	movlw	(log@coeff-__stringbase)& (0+255)
  2249  13A2  00EA               	movwf	??_log
  2250  13A3  086A               	movf	??_log,w
  2251  13A4  00E0               	movwf	eval_poly@d
  2252  13A5  3008               	movlw	8
  2253  13A6  00E1               	movwf	eval_poly@n
  2254  13A7  3000               	movlw	0
  2255  13A8  00E2               	movwf	eval_poly@n+1
  2256  13A9  160A  158A  2544  160A  118A  	fcall	_eval_poly
  2257  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  2258  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  2259  13B0  085D               	movf	?_eval_poly,w
  2260  13B1  00E7               	movwf	log@x
  2261  13B2  085E               	movf	?_eval_poly+1,w
  2262  13B3  00E8               	movwf	log@x+1
  2263  13B4  085F               	movf	?_eval_poly+2,w
  2264  13B5  00E9               	movwf	log@x+2
  2265  13B6  0867               	movf	log@x,w
  2266  13B7  00D0               	movwf	___ftadd@f1
  2267  13B8  0868               	movf	log@x+1,w
  2268  13B9  00D1               	movwf	___ftadd@f1+1
  2269  13BA  0869               	movf	log@x+2,w
  2270  13BB  00D2               	movwf	___ftadd@f1+2
  2271  13BC  3072               	movlw	114
  2272  13BD  00B0               	movwf	___ftmul@f1
  2273  13BE  3031               	movlw	49
  2274  13BF  00B1               	movwf	___ftmul@f1+1
  2275  13C0  303F               	movlw	63
  2276  13C1  00B2               	movwf	___ftmul@f1+2
  2277  13C2  086C               	movf	log@exponent+1,w
  2278  13C3  01F9               	clrf	___awtoft@c+1
  2279  13C4  07F9               	addwf	___awtoft@c+1,f
  2280  13C5  086B               	movf	log@exponent,w
  2281  13C6  01F8               	clrf	___awtoft@c
  2282  13C7  07F8               	addwf	___awtoft@c,f
  2283  13C8  160A  118A  20BB  160A  118A  	fcall	___awtoft
  2284  13CD  0878               	movf	?___awtoft,w
  2285  13CE  1283               	bcf	3,5	;RP0=0, select bank0
  2286  13CF  1303               	bcf	3,6	;RP1=0, select bank0
  2287  13D0  00B3               	movwf	___ftmul@f2
  2288  13D1  0879               	movf	?___awtoft+1,w
  2289  13D2  00B4               	movwf	___ftmul@f2+1
  2290  13D3  087A               	movf	?___awtoft+2,w
  2291  13D4  00B5               	movwf	___ftmul@f2+2
  2292  13D5  120A  118A  200D  160A  118A  	fcall	___ftmul
  2293  13DA  1283               	bcf	3,5	;RP0=0, select bank0
  2294  13DB  1303               	bcf	3,6	;RP1=0, select bank0
  2295  13DC  0830               	movf	?___ftmul,w
  2296  13DD  00D3               	movwf	___ftadd@f2
  2297  13DE  0831               	movf	?___ftmul+1,w
  2298  13DF  00D4               	movwf	___ftadd@f2+1
  2299  13E0  0832               	movf	?___ftmul+2,w
  2300  13E1  00D5               	movwf	___ftadd@f2+2
  2301  13E2  120A  158A  2028   	fcall	___ftadd
  2302  13E5  1283               	bcf	3,5	;RP0=0, select bank0
  2303  13E6  1303               	bcf	3,6	;RP1=0, select bank0
  2304  13E7  0850               	movf	?___ftadd,w
  2305  13E8  00E7               	movwf	?_log
  2306  13E9  0851               	movf	?___ftadd+1,w
  2307  13EA  00E8               	movwf	?_log+1
  2308  13EB  0852               	movf	?___ftadd+2,w
  2309  13EC  00E9               	movwf	?_log+2
  2310  13ED  0008               	return
  2311  13EE                     __end_of_log:	
  2312                           
  2313                           	psect	text3
  2314  0931                     __ptext3:	
  2315 ;; *************** function _exp *****************
  2316 ;; Defined at:
  2317 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\exp.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  x               3    3[BANK1 ] int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  exponent        2   12[BANK1 ] int 
  2322 ;;  sign            1   14[BANK1 ] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  3    3[BANK1 ] unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       0       3       0       0
  2333 ;;      Locals:         0       0       9       0       0
  2334 ;;      Temps:          0       1       0       0       0
  2335 ;;      Totals:         0       1      12       0       0
  2336 ;;Total ram usage:       13 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    3
  2339 ;; This function calls:
  2340 ;;		___awtoft
  2341 ;;		___ftdiv
  2342 ;;		___ftge
  2343 ;;		___ftmul
  2344 ;;		___ftneg
  2345 ;;		___ftsub
  2346 ;;		___fttol
  2347 ;;		_eval_poly
  2348 ;;		_floor
  2349 ;;		_ldexp
  2350 ;; This function is called by:
  2351 ;;		_pow
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _exp
  2357  0931                     _exp:	
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2361  0931  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0932  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0933  0825               	movf	(exp@x+2)^(0+128),w
  2364  0934  0424               	iorwf	(exp@x+1)^(0+128),w
  2365  0935  0423               	iorwf	exp@x^(0+128),w
  2366  0936  1D03               	skipz
  2367  0937  293F               	goto	l3117
  2368  0938  3000               	movlw	0
  2369  0939  00A3               	movwf	?_exp^(0+128)
  2370  093A  3080               	movlw	128
  2371  093B  00A4               	movwf	(?_exp+1)^(0+128)
  2372  093C  303F               	movlw	63
  2373  093D  00A5               	movwf	(?_exp+2)^(0+128)
  2374  093E  0008               	return
  2375  093F                     l3117:	
  2376  093F  3072               	movlw	114
  2377  0940  00F0               	movwf	___ftge@ff1
  2378  0941  3031               	movlw	49
  2379  0942  00F1               	movwf	___ftge@ff1+1
  2380  0943  3044               	movlw	68
  2381  0944  00F2               	movwf	___ftge@ff1+2
  2382  0945  0823               	movf	exp@x^(0+128),w
  2383  0946  00F3               	movwf	___ftge@ff2
  2384  0947  0824               	movf	(exp@x+1)^(0+128),w
  2385  0948  00F4               	movwf	___ftge@ff2+1
  2386  0949  0825               	movf	(exp@x+2)^(0+128),w
  2387  094A  00F5               	movwf	___ftge@ff2+2
  2388  094B  160A  158A  23C4  120A  158A  	fcall	___ftge
  2389  0950  1803               	btfsc	3,0
  2390  0951  295F               	goto	l3127
  2391  0952  3022               	movlw	34
  2392  0953  1683               	bsf	3,5	;RP0=1, select bank1
  2393  0954  1303               	bcf	3,6	;RP1=0, select bank1
  2394  0955  00DE               	movwf	_errno^(0+128)
  2395  0956  3000               	movlw	0
  2396  0957  00DF               	movwf	(_errno^(0+128)+1)
  2397  0958  30FF               	movlw	255
  2398  0959  00A3               	movwf	?_exp^(0+128)
  2399  095A  307F               	movlw	127
  2400  095B  00A4               	movwf	(?_exp+1)^(0+128)
  2401  095C  307F               	movlw	127
  2402  095D  00A5               	movwf	(?_exp+2)^(0+128)
  2403  095E  0008               	return
  2404  095F                     l3127:	
  2405  095F  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0960  1303               	bcf	3,6	;RP1=0, select bank1
  2407  0961  0823               	movf	exp@x^(0+128),w
  2408  0962  00F0               	movwf	___ftge@ff1
  2409  0963  0824               	movf	(exp@x+1)^(0+128),w
  2410  0964  00F1               	movwf	___ftge@ff1+1
  2411  0965  0825               	movf	(exp@x+2)^(0+128),w
  2412  0966  00F2               	movwf	___ftge@ff1+2
  2413  0967  3049               	movlw	73
  2414  0968  00F3               	movwf	___ftge@ff2
  2415  0969  303A               	movlw	58
  2416  096A  00F4               	movwf	___ftge@ff2+1
  2417  096B  30C4               	movlw	196
  2418  096C  00F5               	movwf	___ftge@ff2+2
  2419  096D  160A  158A  23C4  120A  158A  	fcall	___ftge
  2420  0972  1803               	btfsc	3,0
  2421  0973  2981               	goto	l3133
  2422  0974  3022               	movlw	34
  2423  0975  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0976  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0977  00DE               	movwf	_errno^(0+128)
  2426  0978  3000               	movlw	0
  2427  0979  00DF               	movwf	(_errno^(0+128)+1)
  2428  097A  3000               	movlw	0
  2429  097B  00A3               	movwf	?_exp^(0+128)
  2430  097C  3000               	movlw	0
  2431  097D  00A4               	movwf	(?_exp+1)^(0+128)
  2432  097E  3000               	movlw	0
  2433  097F  00A5               	movwf	(?_exp+2)^(0+128)
  2434  0980  0008               	return
  2435  0981                     l3133:	
  2436  0981  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0982  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0983  0823               	movf	exp@x^(0+128),w
  2439  0984  00F0               	movwf	___ftge@ff1
  2440  0985  0824               	movf	(exp@x+1)^(0+128),w
  2441  0986  00F1               	movwf	___ftge@ff1+1
  2442  0987  0825               	movf	(exp@x+2)^(0+128),w
  2443  0988  00F2               	movwf	___ftge@ff1+2
  2444  0989  3000               	movlw	0
  2445  098A  00F3               	movwf	___ftge@ff2
  2446  098B  3000               	movlw	0
  2447  098C  00F4               	movwf	___ftge@ff2+1
  2448  098D  3000               	movlw	0
  2449  098E  00F5               	movwf	___ftge@ff2+2
  2450  098F  160A  158A  23C4  120A  158A  	fcall	___ftge
  2451  0994  3000               	movlw	0
  2452  0995  1C03               	btfss	3,0
  2453  0996  3001               	movlw	1
  2454  0997  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0998  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0999  00EE               	movwf	??_exp
  2457  099A  086E               	movf	??_exp,w
  2458  099B  1683               	bsf	3,5	;RP0=1, select bank1
  2459  099C  1303               	bcf	3,6	;RP1=0, select bank1
  2460  099D  00AE               	movwf	exp@sign^(0+128)
  2461  099E  082E               	movf	exp@sign^(0+128),w
  2462  099F  1903               	btfsc	3,2
  2463  09A0  29B4               	goto	l3139
  2464  09A1  0823               	movf	exp@x^(0+128),w
  2465  09A2  00F0               	movwf	___ftneg@f1
  2466  09A3  0824               	movf	(exp@x+1)^(0+128),w
  2467  09A4  00F1               	movwf	___ftneg@f1+1
  2468  09A5  0825               	movf	(exp@x+2)^(0+128),w
  2469  09A6  00F2               	movwf	___ftneg@f1+2
  2470  09A7  160A  158A  2195  120A  158A  	fcall	___ftneg
  2471  09AC  0870               	movf	?___ftneg,w
  2472  09AD  1683               	bsf	3,5	;RP0=1, select bank1
  2473  09AE  1303               	bcf	3,6	;RP1=0, select bank1
  2474  09AF  00A3               	movwf	exp@x^(0+128)
  2475  09B0  0871               	movf	?___ftneg+1,w
  2476  09B1  00A4               	movwf	(exp@x+1)^(0+128)
  2477  09B2  0872               	movf	?___ftneg+2,w
  2478  09B3  00A5               	movwf	(exp@x+2)^(0+128)
  2479  09B4                     l3139:	
  2480  09B4  30AA               	movlw	170
  2481  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  2482  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  2483  09B7  00B0               	movwf	___ftmul@f1
  2484  09B8  30B8               	movlw	184
  2485  09B9  00B1               	movwf	___ftmul@f1+1
  2486  09BA  303F               	movlw	63
  2487  09BB  00B2               	movwf	___ftmul@f1+2
  2488  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  2489  09BD  1303               	bcf	3,6	;RP1=0, select bank1
  2490  09BE  0823               	movf	exp@x^(0+128),w
  2491  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  2492  09C0  1303               	bcf	3,6	;RP1=0, select bank0
  2493  09C1  00B3               	movwf	___ftmul@f2
  2494  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  2495  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  2496  09C4  0824               	movf	(exp@x+1)^(0+128),w
  2497  09C5  1283               	bcf	3,5	;RP0=0, select bank0
  2498  09C6  1303               	bcf	3,6	;RP1=0, select bank0
  2499  09C7  00B4               	movwf	___ftmul@f2+1
  2500  09C8  1683               	bsf	3,5	;RP0=1, select bank1
  2501  09C9  1303               	bcf	3,6	;RP1=0, select bank1
  2502  09CA  0825               	movf	(exp@x+2)^(0+128),w
  2503  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  2504  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  2505  09CD  00B5               	movwf	___ftmul@f2+2
  2506  09CE  120A  118A  200D  120A  158A  	fcall	___ftmul
  2507  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  2508  09D4  1303               	bcf	3,6	;RP1=0, select bank0
  2509  09D5  0830               	movf	?___ftmul,w
  2510  09D6  1683               	bsf	3,5	;RP0=1, select bank1
  2511  09D7  1303               	bcf	3,6	;RP1=0, select bank1
  2512  09D8  00A3               	movwf	exp@x^(0+128)
  2513  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  2514  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  2515  09DB  0831               	movf	?___ftmul+1,w
  2516  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  2517  09DD  1303               	bcf	3,6	;RP1=0, select bank1
  2518  09DE  00A4               	movwf	(exp@x+1)^(0+128)
  2519  09DF  1283               	bcf	3,5	;RP0=0, select bank0
  2520  09E0  1303               	bcf	3,6	;RP1=0, select bank0
  2521  09E1  0832               	movf	?___ftmul+2,w
  2522  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  2523  09E3  1303               	bcf	3,6	;RP1=0, select bank1
  2524  09E4  00A5               	movwf	(exp@x+2)^(0+128)
  2525  09E5  0823               	movf	exp@x^(0+128),w
  2526  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  2527  09E7  1303               	bcf	3,6	;RP1=0, select bank0
  2528  09E8  00DF               	movwf	floor@x
  2529  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  2530  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  2531  09EB  0824               	movf	(exp@x+1)^(0+128),w
  2532  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  2533  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  2534  09EE  00E0               	movwf	floor@x+1
  2535  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  2536  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  2537  09F1  0825               	movf	(exp@x+2)^(0+128),w
  2538  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  2539  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  2540  09F4  00E1               	movwf	floor@x+2
  2541  09F5  160A  158A  26CE  120A  158A  	fcall	_floor
  2542  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  2543  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  2544  09FC  085F               	movf	?_floor,w
  2545  09FD  1683               	bsf	3,5	;RP0=1, select bank1
  2546  09FE  1303               	bcf	3,6	;RP1=0, select bank1
  2547  09FF  00A6               	movwf	_exp$694^(0+128)
  2548  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0A02  0860               	movf	?_floor+1,w
  2551  0A03  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0A04  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0A05  00A7               	movwf	(_exp$694+1)^(0+128)
  2554  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0A08  0861               	movf	?_floor+2,w
  2557  0A09  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0A0A  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0A0B  00A8               	movwf	(_exp$694+2)^(0+128)
  2560  0A0C  0826               	movf	_exp$694^(0+128),w
  2561  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0A0F  00C9               	movwf	___fttol@f1
  2564  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  2565  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  2566  0A12  0827               	movf	(_exp$694+1)^(0+128),w
  2567  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0A15  00CA               	movwf	___fttol@f1+1
  2570  0A16  1683               	bsf	3,5	;RP0=1, select bank1
  2571  0A17  1303               	bcf	3,6	;RP1=0, select bank1
  2572  0A18  0828               	movf	(_exp$694+2)^(0+128),w
  2573  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0A1B  00CB               	movwf	___fttol@f1+2
  2576  0A1C  160A  158A  2640  120A  158A  	fcall	___fttol
  2577  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  2579  0A23  084A               	movf	?___fttol+1,w
  2580  0A24  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0A25  1303               	bcf	3,6	;RP1=0, select bank1
  2582  0A26  01AD               	clrf	(exp@exponent+1)^(0+128)
  2583  0A27  07AD               	addwf	(exp@exponent+1)^(0+128),f
  2584  0A28  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0A29  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0A2A  0849               	movf	?___fttol,w
  2587  0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  2588  0A2C  1303               	bcf	3,6	;RP1=0, select bank1
  2589  0A2D  01AC               	clrf	exp@exponent^(0+128)
  2590  0A2E  07AC               	addwf	exp@exponent^(0+128),f
  2591  0A2F  082D               	movf	(exp@exponent+1)^(0+128),w
  2592  0A30  01F9               	clrf	___awtoft@c+1
  2593  0A31  07F9               	addwf	___awtoft@c+1,f
  2594  0A32  082C               	movf	exp@exponent^(0+128),w
  2595  0A33  01F8               	clrf	___awtoft@c
  2596  0A34  07F8               	addwf	___awtoft@c,f
  2597  0A35  160A  118A  20BB  120A  158A  	fcall	___awtoft
  2598  0A3A  0878               	movf	?___awtoft,w
  2599  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0A3D  00DD               	movwf	___ftsub@f2
  2602  0A3E  0879               	movf	?___awtoft+1,w
  2603  0A3F  00DE               	movwf	___ftsub@f2+1
  2604  0A40  087A               	movf	?___awtoft+2,w
  2605  0A41  00DF               	movwf	___ftsub@f2+2
  2606  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0A44  0823               	movf	exp@x^(0+128),w
  2609  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0A47  00E0               	movwf	___ftsub@f1
  2612  0A48  1683               	bsf	3,5	;RP0=1, select bank1
  2613  0A49  1303               	bcf	3,6	;RP1=0, select bank1
  2614  0A4A  0824               	movf	(exp@x+1)^(0+128),w
  2615  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0A4D  00E1               	movwf	___ftsub@f1+1
  2618  0A4E  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0A4F  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0A50  0825               	movf	(exp@x+2)^(0+128),w
  2621  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0A53  00E2               	movwf	___ftsub@f1+2
  2624  0A54  160A  158A  21F7  120A  158A  	fcall	___ftsub
  2625  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0A5B  085D               	movf	?___ftsub,w
  2628  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0A5E  00A3               	movwf	exp@x^(0+128)
  2631  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0A61  085E               	movf	?___ftsub+1,w
  2634  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0A64  00A4               	movwf	(exp@x+1)^(0+128)
  2637  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0A67  085F               	movf	?___ftsub+2,w
  2640  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0A6A  00A5               	movwf	(exp@x+2)^(0+128)
  2643  0A6B  0823               	movf	exp@x^(0+128),w
  2644  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0A6E  00DD               	movwf	eval_poly@x
  2647  0A6F  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0A70  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0A71  0824               	movf	(exp@x+1)^(0+128),w
  2650  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0A74  00DE               	movwf	eval_poly@x+1
  2653  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0A76  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0A77  0825               	movf	(exp@x+2)^(0+128),w
  2656  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0A7A  00DF               	movwf	eval_poly@x+2
  2659  0A7B  3077               	movlw	(exp@coeff-__stringbase)& (0+255)
  2660  0A7C  00EE               	movwf	??_exp
  2661  0A7D  086E               	movf	??_exp,w
  2662  0A7E  00E0               	movwf	eval_poly@d
  2663  0A7F  3009               	movlw	9
  2664  0A80  00E1               	movwf	eval_poly@n
  2665  0A81  3000               	movlw	0
  2666  0A82  00E2               	movwf	eval_poly@n+1
  2667  0A83  160A  158A  2544  120A  158A  	fcall	_eval_poly
  2668  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0A8A  085D               	movf	?_eval_poly,w
  2671  0A8B  00E7               	movwf	ldexp@value
  2672  0A8C  085E               	movf	?_eval_poly+1,w
  2673  0A8D  00E8               	movwf	ldexp@value+1
  2674  0A8E  085F               	movf	?_eval_poly+2,w
  2675  0A8F  00E9               	movwf	ldexp@value+2
  2676  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0A91  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0A92  082D               	movf	(exp@exponent+1)^(0+128),w
  2679  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0A95  01EB               	clrf	ldexp@newexp+1
  2682  0A96  07EB               	addwf	ldexp@newexp+1,f
  2683  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0A98  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0A99  082C               	movf	exp@exponent^(0+128),w
  2686  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0A9B  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0A9C  01EA               	clrf	ldexp@newexp
  2689  0A9D  07EA               	addwf	ldexp@newexp,f
  2690  0A9E  160A  158A  2767  120A  158A  	fcall	_ldexp
  2691  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0AA5  0867               	movf	?_ldexp,w
  2694  0AA6  1683               	bsf	3,5	;RP0=1, select bank1
  2695  0AA7  1303               	bcf	3,6	;RP1=0, select bank1
  2696  0AA8  00A3               	movwf	exp@x^(0+128)
  2697  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  2698  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0AAB  0868               	movf	?_ldexp+1,w
  2700  0AAC  1683               	bsf	3,5	;RP0=1, select bank1
  2701  0AAD  1303               	bcf	3,6	;RP1=0, select bank1
  2702  0AAE  00A4               	movwf	(exp@x+1)^(0+128)
  2703  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0AB1  0869               	movf	?_ldexp+2,w
  2706  0AB2  1683               	bsf	3,5	;RP0=1, select bank1
  2707  0AB3  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0AB4  00A5               	movwf	(exp@x+2)^(0+128)
  2709  0AB5  082E               	movf	exp@sign^(0+128),w
  2710  0AB6  1903               	btfsc	3,2
  2711  0AB7  0008               	return
  2712  0AB8  30FF               	movlw	255
  2713  0AB9  00A9               	movwf	_exp$475^(0+128)
  2714  0ABA  307F               	movlw	127
  2715  0ABB  00AA               	movwf	(_exp$475+1)^(0+128)
  2716  0ABC  307F               	movlw	127
  2717  0ABD  00AB               	movwf	(_exp$475+2)^(0+128)
  2718  0ABE  0825               	movf	(exp@x+2)^(0+128),w
  2719  0ABF  062B               	xorwf	(_exp$475+2)^(0+128),w
  2720  0AC0  1D03               	skipz
  2721  0AC1  2AC8               	goto	u4325
  2722  0AC2  0824               	movf	(exp@x+1)^(0+128),w
  2723  0AC3  062A               	xorwf	(_exp$475+1)^(0+128),w
  2724  0AC4  1D03               	skipz
  2725  0AC5  2AC8               	goto	u4325
  2726  0AC6  0823               	movf	exp@x^(0+128),w
  2727  0AC7  0629               	xorwf	_exp$475^(0+128),w
  2728  0AC8                     u4325:	
  2729  0AC8  1D03               	skipz
  2730  0AC9  2AD1               	goto	l3161
  2731  0ACA  3000               	movlw	0
  2732  0ACB  00A3               	movwf	?_exp^(0+128)
  2733  0ACC  3000               	movlw	0
  2734  0ACD  00A4               	movwf	(?_exp+1)^(0+128)
  2735  0ACE  3000               	movlw	0
  2736  0ACF  00A5               	movwf	(?_exp+2)^(0+128)
  2737  0AD0  0008               	return
  2738  0AD1                     l3161:	
  2739  0AD1  0823               	movf	exp@x^(0+128),w
  2740  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0AD4  00A0               	movwf	___ftdiv@f2
  2743  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0AD7  0824               	movf	(exp@x+1)^(0+128),w
  2746  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0ADA  00A1               	movwf	___ftdiv@f2+1
  2749  0ADB  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0ADC  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0ADD  0825               	movf	(exp@x+2)^(0+128),w
  2752  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0AE0  00A2               	movwf	___ftdiv@f2+2
  2755  0AE1  3000               	movlw	0
  2756  0AE2  00A3               	movwf	___ftdiv@f1
  2757  0AE3  3080               	movlw	128
  2758  0AE4  00A4               	movwf	___ftdiv@f1+1
  2759  0AE5  303F               	movlw	63
  2760  0AE6  00A5               	movwf	___ftdiv@f1+2
  2761  0AE7  160A  118A  20DC   	fcall	___ftdiv
  2762  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0AEC  0820               	movf	?___ftdiv,w
  2765  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0AEF  00A3               	movwf	?_exp^(0+128)
  2768  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0AF2  0821               	movf	?___ftdiv+1,w
  2771  0AF3  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0AF4  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0AF5  00A4               	movwf	(?_exp+1)^(0+128)
  2774  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0AF8  0822               	movf	?___ftdiv+2,w
  2777  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0AFB  00A5               	movwf	(?_exp+2)^(0+128)
  2780  0AFC  0008               	return
  2781  0AFD                     __end_of_exp:	
  2782                           
  2783                           	psect	text4
  2784  1F67                     __ptext4:	
  2785 ;; *************** function _ldexp *****************
  2786 ;; Defined at:
  2787 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  value           3   71[BANK0 ] unsigned char 
  2790 ;;  newexp          2   74[BANK0 ] int 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  3   71[BANK0 ] int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       5       0       0       0
  2803 ;;      Locals:         0       0       3       0       0
  2804 ;;      Temps:          0       2       0       0       0
  2805 ;;      Totals:         0       7       3       0       0
  2806 ;;Total ram usage:       10 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    1
  2809 ;; This function calls:
  2810 ;;		___ftge
  2811 ;;		___ftneg
  2812 ;; This function is called by:
  2813 ;;		_exp
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           
  2818                           ;psect for function _ldexp
  2819  1F67                     _ldexp:	
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2823  1F67  1283               	bcf	3,5	;RP0=0, select bank0
  2824  1F68  1303               	bcf	3,6	;RP1=0, select bank0
  2825  1F69  0869               	movf	ldexp@value+2,w
  2826  1F6A  0468               	iorwf	ldexp@value+1,w
  2827  1F6B  0467               	iorwf	ldexp@value,w
  2828  1F6C  1D03               	skipz
  2829  1F6D  2F75               	goto	l2825
  2830  1F6E  3000               	movlw	0
  2831  1F6F  00E7               	movwf	?_ldexp
  2832  1F70  3000               	movlw	0
  2833  1F71  00E8               	movwf	?_ldexp+1
  2834  1F72  3000               	movlw	0
  2835  1F73  00E9               	movwf	?_ldexp+2
  2836  1F74  0008               	return
  2837  1F75                     l2825:	
  2838  1F75  0869               	movf	ldexp@value+2,w
  2839  1F76  397F               	andlw	127
  2840  1F77  00EC               	movwf	??_ldexp
  2841  1F78  01ED               	clrf	??_ldexp+1
  2842  1F79  1003               	clrc
  2843  1F7A  0DEC               	rlf	??_ldexp,f
  2844  1F7B  0DED               	rlf	??_ldexp+1,f
  2845  1F7C  086C               	movf	??_ldexp,w
  2846  1F7D  07EA               	addwf	ldexp@newexp,f
  2847  1F7E  1803               	skipnc
  2848  1F7F  0AEB               	incf	ldexp@newexp+1,f
  2849  1F80  086D               	movf	??_ldexp+1,w
  2850  1F81  07EB               	addwf	ldexp@newexp+1,f
  2851  1F82  0D68               	rlf	ldexp@value+1,w
  2852  1F83  0D68               	rlf	ldexp@value+1,w
  2853  1F84  3901               	andlw	1
  2854  1F85  00EC               	movwf	??_ldexp
  2855  1F86  01ED               	clrf	??_ldexp+1
  2856  1F87  086C               	movf	??_ldexp,w
  2857  1F88  07EA               	addwf	ldexp@newexp,f
  2858  1F89  1803               	skipnc
  2859  1F8A  0AEB               	incf	ldexp@newexp+1,f
  2860  1F8B  086D               	movf	??_ldexp+1,w
  2861  1F8C  07EB               	addwf	ldexp@newexp+1,f
  2862  1F8D  1FEB               	btfss	ldexp@newexp+1,7
  2863  1F8E  2F9E               	goto	l2835
  2864  1F8F  3022               	movlw	34
  2865  1F90  1683               	bsf	3,5	;RP0=1, select bank1
  2866  1F91  1303               	bcf	3,6	;RP1=0, select bank1
  2867  1F92  00DE               	movwf	_errno^(0+128)
  2868  1F93  3000               	movlw	0
  2869  1F94  00DF               	movwf	(_errno^(0+128)+1)
  2870  1F95  3000               	movlw	0
  2871  1F96  1283               	bcf	3,5	;RP0=0, select bank0
  2872  1F97  1303               	bcf	3,6	;RP1=0, select bank0
  2873  1F98  00E7               	movwf	?_ldexp
  2874  1F99  3000               	movlw	0
  2875  1F9A  00E8               	movwf	?_ldexp+1
  2876  1F9B  3000               	movlw	0
  2877  1F9C  00E9               	movwf	?_ldexp+2
  2878  1F9D  0008               	return
  2879  1F9E                     l2835:	
  2880  1F9E  086B               	movf	ldexp@newexp+1,w
  2881  1F9F  3A80               	xorlw	128
  2882  1FA0  00FF               	movwf	127
  2883  1FA1  3081               	movlw	129
  2884  1FA2  027F               	subwf	127,w
  2885  1FA3  1D03               	skipz
  2886  1FA4  2FA7               	goto	u3845
  2887  1FA5  3000               	movlw	0
  2888  1FA6  026A               	subwf	ldexp@newexp,w
  2889  1FA7                     u3845:	
  2890  1FA7  1C03               	skipc
  2891  1FA8  2FE7               	goto	l2859
  2892  1FA9  3022               	movlw	34
  2893  1FAA  1683               	bsf	3,5	;RP0=1, select bank1
  2894  1FAB  1303               	bcf	3,6	;RP1=0, select bank1
  2895  1FAC  00DE               	movwf	_errno^(0+128)
  2896  1FAD  3000               	movlw	0
  2897  1FAE  00DF               	movwf	(_errno^(0+128)+1)
  2898  1FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2899  1FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2900  1FB1  0867               	movf	ldexp@value,w
  2901  1FB2  00F0               	movwf	___ftge@ff1
  2902  1FB3  0868               	movf	ldexp@value+1,w
  2903  1FB4  00F1               	movwf	___ftge@ff1+1
  2904  1FB5  0869               	movf	ldexp@value+2,w
  2905  1FB6  00F2               	movwf	___ftge@ff1+2
  2906  1FB7  3000               	movlw	0
  2907  1FB8  00F3               	movwf	___ftge@ff2
  2908  1FB9  3000               	movlw	0
  2909  1FBA  00F4               	movwf	___ftge@ff2+1
  2910  1FBB  3000               	movlw	0
  2911  1FBC  00F5               	movwf	___ftge@ff2+2
  2912  1FBD  160A  158A  23C4  160A  158A  	fcall	___ftge
  2913  1FC2  1803               	btfsc	3,0
  2914  1FC3  2FDE               	goto	l2855
  2915  1FC4  30FF               	movlw	255
  2916  1FC5  1683               	bsf	3,5	;RP0=1, select bank1
  2917  1FC6  1303               	bcf	3,6	;RP1=0, select bank1
  2918  1FC7  00A0               	movwf	_ldexp$512^(0+128)
  2919  1FC8  307F               	movlw	127
  2920  1FC9  00A1               	movwf	(_ldexp$512+1)^(0+128)
  2921  1FCA  307F               	movlw	127
  2922  1FCB  00A2               	movwf	(_ldexp$512+2)^(0+128)
  2923  1FCC  0820               	movf	_ldexp$512^(0+128),w
  2924  1FCD  00F0               	movwf	___ftneg@f1
  2925  1FCE  0821               	movf	(_ldexp$512+1)^(0+128),w
  2926  1FCF  00F1               	movwf	___ftneg@f1+1
  2927  1FD0  0822               	movf	(_ldexp$512+2)^(0+128),w
  2928  1FD1  00F2               	movwf	___ftneg@f1+2
  2929  1FD2  160A  158A  2195   	fcall	___ftneg
  2930  1FD5  0870               	movf	?___ftneg,w
  2931  1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  2932  1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  2933  1FD8  00E7               	movwf	?_ldexp
  2934  1FD9  0871               	movf	?___ftneg+1,w
  2935  1FDA  00E8               	movwf	?_ldexp+1
  2936  1FDB  0872               	movf	?___ftneg+2,w
  2937  1FDC  00E9               	movwf	?_ldexp+2
  2938  1FDD  0008               	return
  2939  1FDE                     l2855:	
  2940  1FDE  30FF               	movlw	255
  2941  1FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2942  1FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2943  1FE1  00E7               	movwf	?_ldexp
  2944  1FE2  307F               	movlw	127
  2945  1FE3  00E8               	movwf	?_ldexp+1
  2946  1FE4  307F               	movlw	127
  2947  1FE5  00E9               	movwf	?_ldexp+2
  2948  1FE6  0008               	return
  2949  1FE7                     l2859:	
  2950  1FE7  1283               	bcf	3,5	;RP0=0, select bank0
  2951  1FE8  1303               	bcf	3,6	;RP1=0, select bank0
  2952  1FE9  086B               	movf	ldexp@newexp+1,w
  2953  1FEA  00ED               	movwf	??_ldexp+1
  2954  1FEB  086A               	movf	ldexp@newexp,w
  2955  1FEC  00EC               	movwf	??_ldexp
  2956  1FED  0D6D               	rlf	??_ldexp+1,w
  2957  1FEE  0CED               	rrf	??_ldexp+1,f
  2958  1FEF  0CEC               	rrf	??_ldexp,f
  2959  1FF0  0869               	movf	ldexp@value+2,w
  2960  1FF1  066C               	xorwf	??_ldexp,w
  2961  1FF2  3980               	andlw	-128
  2962  1FF3  066C               	xorwf	??_ldexp,w
  2963  1FF4  00E9               	movwf	ldexp@value+2
  2964  1FF5  086A               	movf	ldexp@newexp,w
  2965  1FF6  3901               	andlw	1
  2966  1FF7  00EC               	movwf	??_ldexp
  2967  1FF8  0CEC               	rrf	??_ldexp,f
  2968  1FF9  0CEC               	rrf	??_ldexp,f
  2969  1FFA  0868               	movf	ldexp@value+1,w
  2970  1FFB  066C               	xorwf	??_ldexp,w
  2971  1FFC  397F               	andlw	-129
  2972  1FFD  066C               	xorwf	??_ldexp,w
  2973  1FFE  00E8               	movwf	ldexp@value+1
  2974  1FFF  0008               	return
  2975  2000                     __end_of_ldexp:	
  2976                           
  2977                           	psect	text5
  2978  1ECE                     __ptext5:	
  2979 ;; *************** function _floor *****************
  2980 ;; Defined at:
  2981 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\floor.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  x               3   63[BANK0 ] int 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  i               3   67[BANK0 ] int 
  2986 ;;  expon           2   70[BANK0 ] int 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  3   63[BANK0 ] int 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       3       0       0       0
  2997 ;;      Locals:         0       5       0       0       0
  2998 ;;      Temps:          0       1       0       0       0
  2999 ;;      Totals:         0       9       0       0       0
  3000 ;;Total ram usage:        9 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		___altoft
  3005 ;;		___ftadd
  3006 ;;		___ftge
  3007 ;;		___fttol
  3008 ;;		_frexp
  3009 ;; This function is called by:
  3010 ;;		_exp
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _floor
  3016  1ECE                     _floor:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3020  1ECE  1283               	bcf	3,5	;RP0=0, select bank0
  3021  1ECF  1303               	bcf	3,6	;RP1=0, select bank0
  3022  1ED0  085F               	movf	floor@x,w
  3023  1ED1  00F0               	movwf	frexp@value
  3024  1ED2  0860               	movf	floor@x+1,w
  3025  1ED3  00F1               	movwf	frexp@value+1
  3026  1ED4  0861               	movf	floor@x+2,w
  3027  1ED5  00F2               	movwf	frexp@value+2
  3028  1ED6  3066               	movlw	floor@expon& (0+255)
  3029  1ED7  00E2               	movwf	??_floor
  3030  1ED8  0862               	movf	??_floor,w
  3031  1ED9  00F3               	movwf	frexp@eptr
  3032  1EDA  160A  158A  22A7  160A  158A  	fcall	_frexp
  3033  1EDF  1283               	bcf	3,5	;RP0=0, select bank0
  3034  1EE0  1303               	bcf	3,6	;RP1=0, select bank0
  3035  1EE1  1FE7               	btfss	floor@expon+1,7
  3036  1EE2  2F08               	goto	l2795
  3037  1EE3  085F               	movf	floor@x,w
  3038  1EE4  00F0               	movwf	___ftge@ff1
  3039  1EE5  0860               	movf	floor@x+1,w
  3040  1EE6  00F1               	movwf	___ftge@ff1+1
  3041  1EE7  0861               	movf	floor@x+2,w
  3042  1EE8  00F2               	movwf	___ftge@ff1+2
  3043  1EE9  3000               	movlw	0
  3044  1EEA  00F3               	movwf	___ftge@ff2
  3045  1EEB  3000               	movlw	0
  3046  1EEC  00F4               	movwf	___ftge@ff2+1
  3047  1EED  3000               	movlw	0
  3048  1EEE  00F5               	movwf	___ftge@ff2+2
  3049  1EEF  160A  158A  23C4  160A  158A  	fcall	___ftge
  3050  1EF4  1803               	btfsc	3,0
  3051  1EF5  2EFF               	goto	l2791
  3052  1EF6  3000               	movlw	0
  3053  1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3054  1EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3055  1EF9  00DF               	movwf	?_floor
  3056  1EFA  3080               	movlw	128
  3057  1EFB  00E0               	movwf	?_floor+1
  3058  1EFC  30BF               	movlw	191
  3059  1EFD  00E1               	movwf	?_floor+2
  3060  1EFE  0008               	return
  3061  1EFF                     l2791:	
  3062  1EFF  3000               	movlw	0
  3063  1F00  1283               	bcf	3,5	;RP0=0, select bank0
  3064  1F01  1303               	bcf	3,6	;RP1=0, select bank0
  3065  1F02  00DF               	movwf	?_floor
  3066  1F03  3000               	movlw	0
  3067  1F04  00E0               	movwf	?_floor+1
  3068  1F05  3000               	movlw	0
  3069  1F06  00E1               	movwf	?_floor+2
  3070  1F07  0008               	return
  3071  1F08                     l2795:	
  3072  1F08  3000               	movlw	0
  3073  1F09  0267               	subwf	floor@expon+1,w
  3074  1F0A  3015               	movlw	21
  3075  1F0B  1903               	skipnz
  3076  1F0C  0266               	subwf	floor@expon,w
  3077  1F0D  1803               	btfsc	3,0
  3078  1F0E  0008               	return
  3079  1F0F  085F               	movf	floor@x,w
  3080  1F10  00C9               	movwf	___fttol@f1
  3081  1F11  0860               	movf	floor@x+1,w
  3082  1F12  00CA               	movwf	___fttol@f1+1
  3083  1F13  0861               	movf	floor@x+2,w
  3084  1F14  00CB               	movwf	___fttol@f1+2
  3085  1F15  160A  158A  2640  160A  158A  	fcall	___fttol
  3086  1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  3087  1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  3088  1F1C  084C               	movf	?___fttol+3,w
  3089  1F1D  00DA               	movwf	___altoft@c+3
  3090  1F1E  084B               	movf	?___fttol+2,w
  3091  1F1F  00D9               	movwf	___altoft@c+2
  3092  1F20  084A               	movf	?___fttol+1,w
  3093  1F21  00D8               	movwf	___altoft@c+1
  3094  1F22  0849               	movf	?___fttol,w
  3095  1F23  00D7               	movwf	___altoft@c
  3096  1F24  160A  158A  22E7  160A  158A  	fcall	___altoft
  3097  1F29  1283               	bcf	3,5	;RP0=0, select bank0
  3098  1F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3099  1F2B  0857               	movf	?___altoft,w
  3100  1F2C  00E3               	movwf	floor@i
  3101  1F2D  0858               	movf	?___altoft+1,w
  3102  1F2E  00E4               	movwf	floor@i+1
  3103  1F2F  0859               	movf	?___altoft+2,w
  3104  1F30  00E5               	movwf	floor@i+2
  3105  1F31  085F               	movf	floor@x,w
  3106  1F32  00F0               	movwf	___ftge@ff1
  3107  1F33  0860               	movf	floor@x+1,w
  3108  1F34  00F1               	movwf	___ftge@ff1+1
  3109  1F35  0861               	movf	floor@x+2,w
  3110  1F36  00F2               	movwf	___ftge@ff1+2
  3111  1F37  0863               	movf	floor@i,w
  3112  1F38  00F3               	movwf	___ftge@ff2
  3113  1F39  0864               	movf	floor@i+1,w
  3114  1F3A  00F4               	movwf	___ftge@ff2+1
  3115  1F3B  0865               	movf	floor@i+2,w
  3116  1F3C  00F5               	movwf	___ftge@ff2+2
  3117  1F3D  160A  158A  23C4  160A  158A  	fcall	___ftge
  3118  1F42  1803               	btfsc	3,0
  3119  1F43  2F5E               	goto	l2805
  3120  1F44  3000               	movlw	0
  3121  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  3122  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  3123  1F47  00D0               	movwf	___ftadd@f1
  3124  1F48  3080               	movlw	128
  3125  1F49  00D1               	movwf	___ftadd@f1+1
  3126  1F4A  30BF               	movlw	191
  3127  1F4B  00D2               	movwf	___ftadd@f1+2
  3128  1F4C  0863               	movf	floor@i,w
  3129  1F4D  00D3               	movwf	___ftadd@f2
  3130  1F4E  0864               	movf	floor@i+1,w
  3131  1F4F  00D4               	movwf	___ftadd@f2+1
  3132  1F50  0865               	movf	floor@i+2,w
  3133  1F51  00D5               	movwf	___ftadd@f2+2
  3134  1F52  120A  158A  2028   	fcall	___ftadd
  3135  1F55  1283               	bcf	3,5	;RP0=0, select bank0
  3136  1F56  1303               	bcf	3,6	;RP1=0, select bank0
  3137  1F57  0850               	movf	?___ftadd,w
  3138  1F58  00DF               	movwf	?_floor
  3139  1F59  0851               	movf	?___ftadd+1,w
  3140  1F5A  00E0               	movwf	?_floor+1
  3141  1F5B  0852               	movf	?___ftadd+2,w
  3142  1F5C  00E1               	movwf	?_floor+2
  3143  1F5D  0008               	return
  3144  1F5E                     l2805:	
  3145  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3146  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3147  1F60  0863               	movf	floor@i,w
  3148  1F61  00DF               	movwf	?_floor
  3149  1F62  0864               	movf	floor@i+1,w
  3150  1F63  00E0               	movwf	?_floor+1
  3151  1F64  0865               	movf	floor@i+2,w
  3152  1F65  00E1               	movwf	?_floor+2
  3153  1F66  0008               	return
  3154  1F67                     __end_of_floor:	
  3155                           
  3156                           	psect	text6
  3157  1AA7                     __ptext6:	
  3158 ;; *************** function _frexp *****************
  3159 ;; Defined at:
  3160 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  value           3    0[COMMON] int 
  3163 ;;  eptr            1    3[COMMON] PTR int 
  3164 ;;		 -> log@exponent(2), floor@expon(2), 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  3    0[COMMON] PTR int 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         4       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0
  3178 ;;      Temps:          2       0       0       0       0
  3179 ;;      Totals:         6       0       0       0       0
  3180 ;;Total ram usage:        6 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_floor
  3186 ;;		_log
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           
  3191                           ;psect for function _frexp
  3192  1AA7                     _frexp:	
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  3196  1AA7  0872               	movf	frexp@value+2,w
  3197  1AA8  0471               	iorwf	frexp@value+1,w
  3198  1AA9  0470               	iorwf	frexp@value,w
  3199  1AAA  1D03               	skipz
  3200  1AAB  2AB9               	goto	l2453
  3201  1AAC  0873               	movf	frexp@eptr,w
  3202  1AAD  0084               	movwf	4
  3203  1AAE  1383               	bcf	3,7	;select IRP bank0
  3204  1AAF  0180               	clrf	0
  3205  1AB0  0A84               	incf	4,f
  3206  1AB1  0180               	clrf	0
  3207  1AB2  3000               	movlw	0
  3208  1AB3  00F0               	movwf	?_frexp
  3209  1AB4  3000               	movlw	0
  3210  1AB5  00F1               	movwf	?_frexp+1
  3211  1AB6  3000               	movlw	0
  3212  1AB7  00F2               	movwf	?_frexp+2
  3213  1AB8  0008               	return
  3214  1AB9                     l2453:	
  3215  1AB9  0872               	movf	frexp@value+2,w
  3216  1ABA  397F               	andlw	127
  3217  1ABB  00F4               	movwf	??_frexp
  3218  1ABC  01F5               	clrf	??_frexp+1
  3219  1ABD  1003               	clrc
  3220  1ABE  0DF4               	rlf	??_frexp,f
  3221  1ABF  0DF5               	rlf	??_frexp+1,f
  3222  1AC0  0873               	movf	frexp@eptr,w
  3223  1AC1  0084               	movwf	4
  3224  1AC2  0874               	movf	??_frexp,w
  3225  1AC3  1383               	bcf	3,7	;select IRP bank0
  3226  1AC4  0080               	movwf	0
  3227  1AC5  0A84               	incf	4,f
  3228  1AC6  0875               	movf	??_frexp+1,w
  3229  1AC7  0080               	movwf	0
  3230  1AC8  0D71               	rlf	frexp@value+1,w
  3231  1AC9  0D71               	rlf	frexp@value+1,w
  3232  1ACA  3901               	andlw	1
  3233  1ACB  00F4               	movwf	??_frexp
  3234  1ACC  01F5               	clrf	??_frexp+1
  3235  1ACD  0873               	movf	frexp@eptr,w
  3236  1ACE  0084               	movwf	4
  3237  1ACF  0874               	movf	??_frexp,w
  3238  1AD0  0480               	iorwf	0,f
  3239  1AD1  0A84               	incf	4,f
  3240  1AD2  0875               	movf	??_frexp+1,w
  3241  1AD3  0480               	iorwf	0,f
  3242  1AD4  0873               	movf	frexp@eptr,w
  3243  1AD5  0084               	movwf	4
  3244  1AD6  3082               	movlw	130
  3245  1AD7  0780               	addwf	0,f
  3246  1AD8  0F84               	incfsz	4,f
  3247  1AD9  0800               	movf	0,w
  3248  1ADA  1803               	skipnc
  3249  1ADB  0A00               	incf	0,w
  3250  1ADC  00FF               	movwf	127
  3251  1ADD  30FF               	movlw	255
  3252  1ADE  077F               	addwf	127,w
  3253  1ADF  0080               	movwf	0
  3254  1AE0  0384               	decf	4,f
  3255  1AE1  0872               	movf	frexp@value+2,w
  3256  1AE2  3980               	andlw	-128
  3257  1AE3  383F               	iorlw	63
  3258  1AE4  00F2               	movwf	frexp@value+2
  3259  1AE5  13F1               	bcf	frexp@value+1,7
  3260  1AE6  0008               	return
  3261  1AE7                     __end_of_frexp:	
  3262                           
  3263                           	psect	text7
  3264  1AE7                     __ptext7:	
  3265 ;; *************** function ___altoft *****************
  3266 ;; Defined at:
  3267 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\altoft.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  c               4   55[BANK0 ] long 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  sign            1   62[BANK0 ] unsigned char 
  3272 ;;  exp             1   61[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  3   55[BANK0 ] float 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       4       0       0       0
  3283 ;;      Locals:         0       2       0       0       0
  3284 ;;      Temps:          0       2       0       0       0
  3285 ;;      Totals:         0       8       0       0       0
  3286 ;;Total ram usage:        8 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		___ftpack
  3291 ;; This function is called by:
  3292 ;;		_floor
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function ___altoft
  3298  1AE7                     ___altoft:	
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  3302  1AE7  1283               	bcf	3,5	;RP0=0, select bank0
  3303  1AE8  1303               	bcf	3,6	;RP1=0, select bank0
  3304  1AE9  01DE               	clrf	___altoft@sign
  3305  1AEA  308E               	movlw	142
  3306  1AEB  00DB               	movwf	??___altoft
  3307  1AEC  085B               	movf	??___altoft,w
  3308  1AED  00DD               	movwf	___altoft@exp
  3309  1AEE  1FDA               	btfss	___altoft@c+3,7
  3310  1AEF  2AFD               	goto	l2163
  3311  1AF0  09D7               	comf	___altoft@c,f
  3312  1AF1  09D8               	comf	___altoft@c+1,f
  3313  1AF2  09D9               	comf	___altoft@c+2,f
  3314  1AF3  09DA               	comf	___altoft@c+3,f
  3315  1AF4  0AD7               	incf	___altoft@c,f
  3316  1AF5  1903               	skipnz
  3317  1AF6  0AD8               	incf	___altoft@c+1,f
  3318  1AF7  1903               	skipnz
  3319  1AF8  0AD9               	incf	___altoft@c+2,f
  3320  1AF9  1903               	skipnz
  3321  1AFA  0ADA               	incf	___altoft@c+3,f
  3322  1AFB  01DE               	clrf	___altoft@sign
  3323  1AFC  0ADE               	incf	___altoft@sign,f
  3324  1AFD                     l2163:	
  3325  1AFD  30FF               	movlw	255
  3326  1AFE  055A               	andwf	___altoft@c+3,w
  3327  1AFF  1903               	btfsc	3,2
  3328  1B00  2B0F               	goto	l2165
  3329  1B01  3001               	movlw	1
  3330  1B02                     u2375:	
  3331  1B02  1003               	clrc
  3332  1B03  0CDA               	rrf	___altoft@c+3,f
  3333  1B04  0CD9               	rrf	___altoft@c+2,f
  3334  1B05  0CD8               	rrf	___altoft@c+1,f
  3335  1B06  0CD7               	rrf	___altoft@c,f
  3336  1B07  3EFF               	addlw	-1
  3337  1B08  1D03               	skipz
  3338  1B09  2B02               	goto	u2375
  3339  1B0A  3001               	movlw	1
  3340  1B0B  00DB               	movwf	??___altoft
  3341  1B0C  085B               	movf	??___altoft,w
  3342  1B0D  07DD               	addwf	___altoft@exp,f
  3343  1B0E  2AFD               	goto	l2163
  3344  1B0F                     l2165:	
  3345  1B0F  0857               	movf	___altoft@c,w
  3346  1B10  00F0               	movwf	___ftpack@arg
  3347  1B11  0858               	movf	___altoft@c+1,w
  3348  1B12  00F1               	movwf	___ftpack@arg+1
  3349  1B13  0859               	movf	___altoft@c+2,w
  3350  1B14  00F2               	movwf	___ftpack@arg+2
  3351  1B15  085D               	movf	___altoft@exp,w
  3352  1B16  00DB               	movwf	??___altoft
  3353  1B17  085B               	movf	??___altoft,w
  3354  1B18  00F3               	movwf	___ftpack@exp
  3355  1B19  085E               	movf	___altoft@sign,w
  3356  1B1A  00DC               	movwf	??___altoft+1
  3357  1B1B  085C               	movf	??___altoft+1,w
  3358  1B1C  00F4               	movwf	___ftpack@sign
  3359  1B1D  160A  158A  24DC   	fcall	___ftpack
  3360  1B20  0870               	movf	?___ftpack,w
  3361  1B21  1283               	bcf	3,5	;RP0=0, select bank0
  3362  1B22  1303               	bcf	3,6	;RP1=0, select bank0
  3363  1B23  00D7               	movwf	?___altoft
  3364  1B24  0871               	movf	?___ftpack+1,w
  3365  1B25  00D8               	movwf	?___altoft+1
  3366  1B26  0872               	movf	?___ftpack+2,w
  3367  1B27  00D9               	movwf	?___altoft+2
  3368  1B28  0008               	return
  3369  1B29                     __end_of___altoft:	
  3370                           
  3371                           	psect	text8
  3372  1D44                     __ptext8:	
  3373 ;; *************** function _eval_poly *****************
  3374 ;; Defined at:
  3375 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  x               3   61[BANK0 ] float 
  3378 ;;  d               1   64[BANK0 ] PTR const 
  3379 ;;		 -> log@coeff(27), exp@coeff(30), 
  3380 ;;  n               2   65[BANK0 ] int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  res             3   68[BANK0 ] int 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  3   61[BANK0 ] int 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       6       0       0       0
  3393 ;;      Locals:         0       3       0       0       0
  3394 ;;      Temps:          0       1       0       0       0
  3395 ;;      Totals:         0      10       0       0       0
  3396 ;;Total ram usage:       10 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    2
  3399 ;; This function calls:
  3400 ;;		___bmul
  3401 ;;		___ftadd
  3402 ;;		___ftmul
  3403 ;; This function is called by:
  3404 ;;		_exp
  3405 ;;		_log
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _eval_poly
  3411  1D44                     _eval_poly:	
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3415  1D44  3003               	movlw	3
  3416  1D45  1283               	bcf	3,5	;RP0=0, select bank0
  3417  1D46  1303               	bcf	3,6	;RP1=0, select bank0
  3418  1D47  00E3               	movwf	??_eval_poly
  3419  1D48  0863               	movf	??_eval_poly,w
  3420  1D49  00A4               	movwf	___bmul@multiplicand
  3421  1D4A  0861               	movf	eval_poly@n,w
  3422  1D4B  160A  158A  21D0  160A  158A  	fcall	___bmul
  3423  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  3424  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  3425  1D52  0760               	addwf	eval_poly@d,w
  3426  1D53  0084               	movwf	4
  3427  1D54  160A  118A  2000  160A  158A  	fcall	stringdir
  3428  1D59  00E4               	movwf	eval_poly@res
  3429  1D5A  160A  118A  2000  160A  158A  	fcall	stringdir
  3430  1D5F  00E5               	movwf	eval_poly@res+1
  3431  1D60  160A  118A  2000  160A  158A  	fcall	stringdir
  3432  1D65                     L2:	
  3433  1D65  00E6               	movwf	eval_poly@res+2
  3434  1D66  0862               	movf	eval_poly@n+1,w
  3435  1D67  0461               	iorwf	eval_poly@n,w
  3436  1D68  1903               	btfsc	3,2
  3437  1D69  2DB6               	goto	l2815
  3438  1D6A  3003               	movlw	3
  3439  1D6B  00E3               	movwf	??_eval_poly
  3440  1D6C  0863               	movf	??_eval_poly,w
  3441  1D6D  00A4               	movwf	___bmul@multiplicand
  3442  1D6E  30FF               	movlw	255
  3443  1D6F  07E1               	addwf	eval_poly@n,f
  3444  1D70  1803               	skipnc
  3445  1D71  0AE2               	incf	eval_poly@n+1,f
  3446  1D72  30FF               	movlw	255
  3447  1D73  07E2               	addwf	eval_poly@n+1,f
  3448  1D74  0861               	movf	eval_poly@n,w
  3449  1D75  160A  158A  21D0  160A  158A  	fcall	___bmul
  3450  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  3451  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  3452  1D7C  0760               	addwf	eval_poly@d,w
  3453  1D7D  0084               	movwf	4
  3454  1D7E  160A  118A  2000  160A  158A  	fcall	stringdir
  3455  1D83  00D0               	movwf	___ftadd@f1
  3456  1D84  160A  118A  2000  160A  158A  	fcall	stringdir
  3457  1D89  00D1               	movwf	___ftadd@f1+1
  3458  1D8A  160A  118A  2000  160A  158A  	fcall	stringdir
  3459  1D8F  00D2               	movwf	___ftadd@f1+2
  3460  1D90  0864               	movf	eval_poly@res,w
  3461  1D91  00B0               	movwf	___ftmul@f1
  3462  1D92  0865               	movf	eval_poly@res+1,w
  3463  1D93  00B1               	movwf	___ftmul@f1+1
  3464  1D94  0866               	movf	eval_poly@res+2,w
  3465  1D95  00B2               	movwf	___ftmul@f1+2
  3466  1D96  085D               	movf	eval_poly@x,w
  3467  1D97  00B3               	movwf	___ftmul@f2
  3468  1D98  085E               	movf	eval_poly@x+1,w
  3469  1D99  00B4               	movwf	___ftmul@f2+1
  3470  1D9A  085F               	movf	eval_poly@x+2,w
  3471  1D9B  00B5               	movwf	___ftmul@f2+2
  3472  1D9C  120A  118A  200D  160A  158A  	fcall	___ftmul
  3473  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3474  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3475  1DA3  0830               	movf	?___ftmul,w
  3476  1DA4  00D3               	movwf	___ftadd@f2
  3477  1DA5  0831               	movf	?___ftmul+1,w
  3478  1DA6  00D4               	movwf	___ftadd@f2+1
  3479  1DA7  0832               	movf	?___ftmul+2,w
  3480  1DA8  00D5               	movwf	___ftadd@f2+2
  3481  1DA9  120A  158A  2028  160A  158A  	fcall	___ftadd
  3482  1DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3483  1DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3484  1DB0  0850               	movf	?___ftadd,w
  3485  1DB1  00E4               	movwf	eval_poly@res
  3486  1DB2  0851               	movf	?___ftadd+1,w
  3487  1DB3  00E5               	movwf	eval_poly@res+1
  3488  1DB4  0852               	movf	?___ftadd+2,w
  3489  1DB5  2D65               	goto	L2
  3490  1DB6                     l2815:	
  3491  1DB6  0864               	movf	eval_poly@res,w
  3492  1DB7  00DD               	movwf	?_eval_poly
  3493  1DB8  0865               	movf	eval_poly@res+1,w
  3494  1DB9  00DE               	movwf	?_eval_poly+1
  3495  1DBA  0866               	movf	eval_poly@res+2,w
  3496  1DBB  00DF               	movwf	?_eval_poly+2
  3497  1DBC  0008               	return
  3498  1DBD                     __end_of_eval_poly:	
  3499                           
  3500                           	psect	text9
  3501  10DC                     __ptext9:	
  3502 ;; *************** function ___ftdiv *****************
  3503 ;; Defined at:
  3504 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  f2              3    0[BANK0 ] float 
  3507 ;;  f1              3    3[BANK0 ] float 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  f3              3   11[BANK0 ] float 
  3510 ;;  sign            1   15[BANK0 ] unsigned char 
  3511 ;;  exp             1   14[BANK0 ] unsigned char 
  3512 ;;  cntr            1   10[BANK0 ] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  3    0[BANK0 ] float 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       6       0       0       0
  3523 ;;      Locals:         0       6       0       0       0
  3524 ;;      Temps:          0       4       0       0       0
  3525 ;;      Totals:         0      16       0       0       0
  3526 ;;Total ram usage:       16 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    1
  3529 ;; This function calls:
  3530 ;;		___ftpack
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;;		_exp
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           
  3538                           ;psect for function ___ftdiv
  3539  10DC                     ___ftdiv:	
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3543  10DC  1283               	bcf	3,5	;RP0=0, select bank0
  3544  10DD  1303               	bcf	3,6	;RP1=0, select bank0
  3545  10DE  0823               	movf	___ftdiv@f1,w
  3546  10DF  00A6               	movwf	??___ftdiv
  3547  10E0  0824               	movf	___ftdiv@f1+1,w
  3548  10E1  00A7               	movwf	??___ftdiv+1
  3549  10E2  0825               	movf	___ftdiv@f1+2,w
  3550  10E3  00A8               	movwf	??___ftdiv+2
  3551  10E4  1003               	clrc
  3552  10E5  0D27               	rlf	??___ftdiv+1,w
  3553  10E6  0D28               	rlf	??___ftdiv+2,w
  3554  10E7  00A9               	movwf	??___ftdiv+3
  3555  10E8  0829               	movf	??___ftdiv+3,w
  3556  10E9  00AE               	movwf	___ftdiv@exp
  3557  10EA  08AE               	movf	___ftdiv@exp,f
  3558  10EB  1D03               	skipz
  3559  10EC  28F4               	goto	l2685
  3560  10ED  3000               	movlw	0
  3561  10EE  00A0               	movwf	?___ftdiv
  3562  10EF  3000               	movlw	0
  3563  10F0  00A1               	movwf	?___ftdiv+1
  3564  10F1  3000               	movlw	0
  3565  10F2  00A2               	movwf	?___ftdiv+2
  3566  10F3  0008               	return
  3567  10F4                     l2685:	
  3568  10F4  0820               	movf	___ftdiv@f2,w
  3569  10F5  00A6               	movwf	??___ftdiv
  3570  10F6  0821               	movf	___ftdiv@f2+1,w
  3571  10F7  00A7               	movwf	??___ftdiv+1
  3572  10F8  0822               	movf	___ftdiv@f2+2,w
  3573  10F9  00A8               	movwf	??___ftdiv+2
  3574  10FA  1003               	clrc
  3575  10FB  0D27               	rlf	??___ftdiv+1,w
  3576  10FC  0D28               	rlf	??___ftdiv+2,w
  3577  10FD  00A9               	movwf	??___ftdiv+3
  3578  10FE  0829               	movf	??___ftdiv+3,w
  3579  10FF  00AF               	movwf	___ftdiv@sign
  3580  1100  08AF               	movf	___ftdiv@sign,f
  3581  1101  1D03               	skipz
  3582  1102  290A               	goto	l2691
  3583  1103  3000               	movlw	0
  3584  1104  00A0               	movwf	?___ftdiv
  3585  1105  3000               	movlw	0
  3586  1106  00A1               	movwf	?___ftdiv+1
  3587  1107  3000               	movlw	0
  3588  1108  00A2               	movwf	?___ftdiv+2
  3589  1109  0008               	return
  3590  110A                     l2691:	
  3591  110A  3000               	movlw	0
  3592  110B  00AB               	movwf	___ftdiv@f3
  3593  110C  3000               	movlw	0
  3594  110D  00AC               	movwf	___ftdiv@f3+1
  3595  110E  3000               	movlw	0
  3596  110F  00AD               	movwf	___ftdiv@f3+2
  3597  1110  3089               	movlw	137
  3598  1111  072F               	addwf	___ftdiv@sign,w
  3599  1112  00A6               	movwf	??___ftdiv
  3600  1113  0826               	movf	??___ftdiv,w
  3601  1114  02AE               	subwf	___ftdiv@exp,f
  3602  1115  0823               	movf	___ftdiv@f1,w
  3603  1116  00A6               	movwf	??___ftdiv
  3604  1117  0824               	movf	___ftdiv@f1+1,w
  3605  1118  00A7               	movwf	??___ftdiv+1
  3606  1119  0825               	movf	___ftdiv@f1+2,w
  3607  111A  00A8               	movwf	??___ftdiv+2
  3608  111B  3010               	movlw	16
  3609  111C                     u3565:	
  3610  111C  1003               	clrc
  3611  111D  0CA8               	rrf	??___ftdiv+2,f
  3612  111E  0CA7               	rrf	??___ftdiv+1,f
  3613  111F  0CA6               	rrf	??___ftdiv,f
  3614  1120  3EFF               	addlw	-1
  3615  1121  1D03               	skipz
  3616  1122  291C               	goto	u3565
  3617  1123  0826               	movf	??___ftdiv,w
  3618  1124  00A9               	movwf	??___ftdiv+3
  3619  1125  0829               	movf	??___ftdiv+3,w
  3620  1126  00AF               	movwf	___ftdiv@sign
  3621  1127  0820               	movf	___ftdiv@f2,w
  3622  1128  00A6               	movwf	??___ftdiv
  3623  1129  0821               	movf	___ftdiv@f2+1,w
  3624  112A  00A7               	movwf	??___ftdiv+1
  3625  112B  0822               	movf	___ftdiv@f2+2,w
  3626  112C  00A8               	movwf	??___ftdiv+2
  3627  112D  3010               	movlw	16
  3628  112E                     u3575:	
  3629  112E  1003               	clrc
  3630  112F  0CA8               	rrf	??___ftdiv+2,f
  3631  1130  0CA7               	rrf	??___ftdiv+1,f
  3632  1131  0CA6               	rrf	??___ftdiv,f
  3633  1132  3EFF               	addlw	-1
  3634  1133  1D03               	skipz
  3635  1134  292E               	goto	u3575
  3636  1135  0826               	movf	??___ftdiv,w
  3637  1136  00A9               	movwf	??___ftdiv+3
  3638  1137  0829               	movf	??___ftdiv+3,w
  3639  1138  06AF               	xorwf	___ftdiv@sign,f
  3640  1139  3080               	movlw	128
  3641  113A  00A6               	movwf	??___ftdiv
  3642  113B  0826               	movf	??___ftdiv,w
  3643  113C  05AF               	andwf	___ftdiv@sign,f
  3644  113D  17A4               	bsf	___ftdiv@f1+1,7
  3645  113E  30FF               	movlw	255
  3646  113F  05A3               	andwf	___ftdiv@f1,f
  3647  1140  30FF               	movlw	255
  3648  1141  05A4               	andwf	___ftdiv@f1+1,f
  3649  1142  3000               	movlw	0
  3650  1143  05A5               	andwf	___ftdiv@f1+2,f
  3651  1144  17A1               	bsf	___ftdiv@f2+1,7
  3652  1145  30FF               	movlw	255
  3653  1146  05A0               	andwf	___ftdiv@f2,f
  3654  1147  30FF               	movlw	255
  3655  1148  05A1               	andwf	___ftdiv@f2+1,f
  3656  1149  3000               	movlw	0
  3657  114A  05A2               	andwf	___ftdiv@f2+2,f
  3658  114B  3018               	movlw	24
  3659  114C  00A6               	movwf	??___ftdiv
  3660  114D  0826               	movf	??___ftdiv,w
  3661  114E  00AA               	movwf	___ftdiv@cntr
  3662  114F                     l2705:	
  3663  114F  3001               	movlw	1
  3664  1150                     u3585:	
  3665  1150  1003               	clrc
  3666  1151  0DAB               	rlf	___ftdiv@f3,f
  3667  1152  0DAC               	rlf	___ftdiv@f3+1,f
  3668  1153  0DAD               	rlf	___ftdiv@f3+2,f
  3669  1154  3EFF               	addlw	-1
  3670  1155  1D03               	skipz
  3671  1156  2950               	goto	u3585
  3672  1157  0822               	movf	___ftdiv@f2+2,w
  3673  1158  0225               	subwf	___ftdiv@f1+2,w
  3674  1159  1D03               	skipz
  3675  115A  2961               	goto	u3595
  3676  115B  0821               	movf	___ftdiv@f2+1,w
  3677  115C  0224               	subwf	___ftdiv@f1+1,w
  3678  115D  1D03               	skipz
  3679  115E  2961               	goto	u3595
  3680  115F  0820               	movf	___ftdiv@f2,w
  3681  1160  0223               	subwf	___ftdiv@f1,w
  3682  1161                     u3595:	
  3683  1161  1C03               	skipc
  3684  1162  296E               	goto	l2713
  3685  1163  0820               	movf	___ftdiv@f2,w
  3686  1164  02A3               	subwf	___ftdiv@f1,f
  3687  1165  0821               	movf	___ftdiv@f2+1,w
  3688  1166  1C03               	skipc
  3689  1167  0F21               	incfsz	___ftdiv@f2+1,w
  3690  1168  02A4               	subwf	___ftdiv@f1+1,f
  3691  1169  0822               	movf	___ftdiv@f2+2,w
  3692  116A  1C03               	skipc
  3693  116B  0A22               	incf	___ftdiv@f2+2,w
  3694  116C  02A5               	subwf	___ftdiv@f1+2,f
  3695  116D  142B               	bsf	___ftdiv@f3,0
  3696  116E                     l2713:	
  3697  116E  3001               	movlw	1
  3698  116F                     u3605:	
  3699  116F  1003               	clrc
  3700  1170  0DA3               	rlf	___ftdiv@f1,f
  3701  1171  0DA4               	rlf	___ftdiv@f1+1,f
  3702  1172  0DA5               	rlf	___ftdiv@f1+2,f
  3703  1173  3EFF               	addlw	-1
  3704  1174  1D03               	skipz
  3705  1175  296F               	goto	u3605
  3706  1176  3001               	movlw	1
  3707  1177  02AA               	subwf	___ftdiv@cntr,f
  3708  1178  1D03               	btfss	3,2
  3709  1179  294F               	goto	l2705
  3710  117A  082B               	movf	___ftdiv@f3,w
  3711  117B  00F0               	movwf	___ftpack@arg
  3712  117C  082C               	movf	___ftdiv@f3+1,w
  3713  117D  00F1               	movwf	___ftpack@arg+1
  3714  117E  082D               	movf	___ftdiv@f3+2,w
  3715  117F  00F2               	movwf	___ftpack@arg+2
  3716  1180  082E               	movf	___ftdiv@exp,w
  3717  1181  00A6               	movwf	??___ftdiv
  3718  1182  0826               	movf	??___ftdiv,w
  3719  1183  00F3               	movwf	___ftpack@exp
  3720  1184  082F               	movf	___ftdiv@sign,w
  3721  1185  00A7               	movwf	??___ftdiv+1
  3722  1186  0827               	movf	??___ftdiv+1,w
  3723  1187  00F4               	movwf	___ftpack@sign
  3724  1188  160A  158A  24DC   	fcall	___ftpack
  3725  118B  0870               	movf	?___ftpack,w
  3726  118C  1283               	bcf	3,5	;RP0=0, select bank0
  3727  118D  1303               	bcf	3,6	;RP1=0, select bank0
  3728  118E  00A0               	movwf	?___ftdiv
  3729  118F  0871               	movf	?___ftpack+1,w
  3730  1190  00A1               	movwf	?___ftdiv+1
  3731  1191  0872               	movf	?___ftpack+2,w
  3732  1192  00A2               	movwf	?___ftdiv+2
  3733  1193  0008               	return
  3734  1194                     __end_of___ftdiv:	
  3735                           
  3736                           	psect	text10
  3737  10BB                     __ptext10:	
  3738 ;; *************** function ___awtoft *****************
  3739 ;; Defined at:
  3740 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  c               2    8[COMMON] int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  sign            1   13[COMMON] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  3    8[COMMON] float 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         3       0       0       0       0
  3755 ;;      Locals:         1       0       0       0       0
  3756 ;;      Temps:          2       0       0       0       0
  3757 ;;      Totals:         6       0       0       0       0
  3758 ;;Total ram usage:        6 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    1
  3761 ;; This function calls:
  3762 ;;		___ftpack
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;;		_exp
  3766 ;;		_log
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function ___awtoft
  3772  10BB                     ___awtoft:	
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3776  10BB  01FD               	clrf	___awtoft@sign
  3777  10BC  1FF9               	btfss	___awtoft@c+1,7
  3778  10BD  28C5               	goto	l2675
  3779  10BE  09F8               	comf	___awtoft@c,f
  3780  10BF  09F9               	comf	___awtoft@c+1,f
  3781  10C0  0AF8               	incf	___awtoft@c,f
  3782  10C1  1903               	skipnz
  3783  10C2  0AF9               	incf	___awtoft@c+1,f
  3784  10C3  01FD               	clrf	___awtoft@sign
  3785  10C4  0AFD               	incf	___awtoft@sign,f
  3786  10C5                     l2675:	
  3787  10C5  0878               	movf	___awtoft@c,w
  3788  10C6  00F0               	movwf	___ftpack@arg
  3789  10C7  0879               	movf	___awtoft@c+1,w
  3790  10C8  00F1               	movwf	___ftpack@arg+1
  3791  10C9  01F2               	clrf	___ftpack@arg+2
  3792  10CA  308E               	movlw	142
  3793  10CB  00FB               	movwf	??___awtoft
  3794  10CC  087B               	movf	??___awtoft,w
  3795  10CD  00F3               	movwf	___ftpack@exp
  3796  10CE  087D               	movf	___awtoft@sign,w
  3797  10CF  00FC               	movwf	??___awtoft+1
  3798  10D0  087C               	movf	??___awtoft+1,w
  3799  10D1  00F4               	movwf	___ftpack@sign
  3800  10D2  160A  158A  24DC   	fcall	___ftpack
  3801  10D5  0870               	movf	?___ftpack,w
  3802  10D6  00F8               	movwf	?___awtoft
  3803  10D7  0871               	movf	?___ftpack+1,w
  3804  10D8  00F9               	movwf	?___awtoft+1
  3805  10D9  0872               	movf	?___ftpack+2,w
  3806  10DA  00FA               	movwf	?___awtoft+2
  3807  10DB  0008               	return
  3808  10DC                     __end_of___awtoft:	
  3809                           
  3810                           	psect	text11
  3811  199D                     __ptext11:	
  3812 ;; *************** function _init_I2C_Master *****************
  3813 ;; Defined at:
  3814 ;;		line 193 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;		None               void
  3821 ;; Registers used:
  3822 ;;		wreg, status,2
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0
  3831 ;;      Totals:         0       0       0       0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function _init_I2C_Master
  3843  199D                     _init_I2C_Master:	
  3844                           
  3845                           ;LE7-3.c: 194: TRISC3 = 1;
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _init_I2C_Master: [wreg+status,2]
  3849  199D  1683               	bsf	3,5	;RP0=1, select bank1
  3850  199E  1303               	bcf	3,6	;RP1=0, select bank1
  3851  199F  1587               	bsf	7,3	;volatile
  3852                           
  3853                           ;LE7-3.c: 195: TRISC4 = 1;
  3854  19A0  1607               	bsf	7,4	;volatile
  3855                           
  3856                           ;LE7-3.c: 196: SSPCON = 0x28;
  3857  19A1  3028               	movlw	40
  3858  19A2  1283               	bcf	3,5	;RP0=0, select bank0
  3859  19A3  1303               	bcf	3,6	;RP1=0, select bank0
  3860  19A4  0094               	movwf	20	;volatile
  3861                           
  3862                           ;LE7-3.c: 197: SSPCON2 = 0x00;
  3863  19A5  1683               	bsf	3,5	;RP0=1, select bank1
  3864  19A6  1303               	bcf	3,6	;RP1=0, select bank1
  3865  19A7  0191               	clrf	17	;volatile
  3866                           
  3867                           ;LE7-3.c: 199: SSPSTAT = 0x00;
  3868  19A8  0194               	clrf	20	;volatile
  3869                           
  3870                           ;LE7-3.c: 200: SSPADD = 0x09;
  3871  19A9  3009               	movlw	9
  3872  19AA  0093               	movwf	19	;volatile
  3873  19AB  0008               	return
  3874  19AC                     __end_of_init_I2C_Master:	
  3875                           
  3876                           	psect	text12
  3877  1A13                     __ptext12:	
  3878 ;; *************** function _initLCD *****************
  3879 ;; Defined at:
  3880 ;;		line 118 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    2
  3901 ;; This function calls:
  3902 ;;		_delay_ms
  3903 ;;		_instCtrl
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           
  3910                           ;psect for function _initLCD
  3911  1A13                     _initLCD:	
  3912                           
  3913                           ;LE7-3.c: 119: delay_ms(1);
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3917  1A13  3001               	movlw	1
  3918  1A14  00F0               	movwf	delay_ms@cnt
  3919  1A15  3000               	movlw	0
  3920  1A16  00F1               	movwf	delay_ms@cnt+1
  3921  1A17  120A  158A  2000  160A  158A  	fcall	_delay_ms
  3922                           
  3923                           ;LE7-3.c: 120: instCtrl(0x38);
  3924  1A1C  3038               	movlw	56
  3925  1A1D  160A  158A  21BE  160A  158A  	fcall	_instCtrl
  3926                           
  3927                           ;LE7-3.c: 121: instCtrl(0x01);
  3928  1A22  3001               	movlw	1
  3929  1A23  160A  158A  21BE  160A  158A  	fcall	_instCtrl
  3930                           
  3931                           ;LE7-3.c: 122: instCtrl(0x06);
  3932  1A28  3006               	movlw	6
  3933  1A29  160A  158A  21BE  160A  158A  	fcall	_instCtrl
  3934                           
  3935                           ;LE7-3.c: 123: instCtrl(0x0E);
  3936  1A2E  300E               	movlw	14
  3937  1A2F  160A  158A  21BE   	fcall	_instCtrl
  3938  1A32  0008               	return
  3939  1A33                     __end_of_initLCD:	
  3940                           
  3941                           	psect	text13
  3942  1257                     __ptext13:	
  3943 ;; *************** function _dispT *****************
  3944 ;; Defined at:
  3945 ;;		line 159 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  val             5   34[BANK1 ] unsigned char [5]
  3950 ;; Return value:  Size  Location     Type
  3951 ;;		None               void
  3952 ;; Registers used:
  3953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3959 ;;      Params:         0       0       0       0       0
  3960 ;;      Locals:         0       0       5       0       0
  3961 ;;      Temps:          0       1       0       0       0
  3962 ;;      Totals:         0       1       5       0       0
  3963 ;;Total ram usage:        6 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    4
  3966 ;; This function calls:
  3967 ;;		_dataCtrl
  3968 ;;		_instCtrl
  3969 ;;		_sprintf
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function _dispT
  3977  1257                     _dispT:	
  3978                           
  3979                           ;LE7-3.c: 160: instCtrl(0xC0);
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _dispT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3983  1257  30C0               	movlw	192
  3984  1258  160A  158A  21BE  160A  118A  	fcall	_instCtrl
  3985                           
  3986                           ;LE7-3.c: 162: dataCtrl('T');
  3987  125D  3054               	movlw	84
  3988  125E  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  3989                           
  3990                           ;LE7-3.c: 163: dataCtrl('e');
  3991  1263  3065               	movlw	101
  3992  1264  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  3993                           
  3994                           ;LE7-3.c: 164: dataCtrl('m');
  3995  1269  306D               	movlw	109
  3996  126A  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  3997                           
  3998                           ;LE7-3.c: 165: dataCtrl('p');
  3999  126F  3070               	movlw	112
  4000  1270  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4001                           
  4002                           ;LE7-3.c: 166: dataCtrl('e');
  4003  1275  3065               	movlw	101
  4004  1276  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4005                           
  4006                           ;LE7-3.c: 167: dataCtrl('r');
  4007  127B  3072               	movlw	114
  4008  127C  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4009                           
  4010                           ;LE7-3.c: 168: dataCtrl('a');
  4011  1281  3061               	movlw	97
  4012  1282  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4013                           
  4014                           ;LE7-3.c: 169: dataCtrl('t');
  4015  1287  3074               	movlw	116
  4016  1288  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4017                           
  4018                           ;LE7-3.c: 170: dataCtrl('u');
  4019  128D  3075               	movlw	117
  4020  128E  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4021                           
  4022                           ;LE7-3.c: 171: dataCtrl('r');
  4023  1293  3072               	movlw	114
  4024  1294  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4025                           
  4026                           ;LE7-3.c: 172: dataCtrl('e');
  4027  1299  3065               	movlw	101
  4028  129A  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4029                           
  4030                           ;LE7-3.c: 173: dataCtrl(':');
  4031  129F  303A               	movlw	58
  4032  12A0  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4033                           
  4034                           ;LE7-3.c: 175: char val[5];
  4035                           ;LE7-3.c: 176: val[0] = ' ';
  4036  12A5  3020               	movlw	32
  4037  12A6  1283               	bcf	3,5	;RP0=0, select bank0
  4038  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  4039  12A8  00ED               	movwf	??_dispT
  4040  12A9  086D               	movf	??_dispT,w
  4041  12AA  1683               	bsf	3,5	;RP0=1, select bank1
  4042  12AB  1303               	bcf	3,6	;RP1=0, select bank1
  4043  12AC  00C2               	movwf	dispT@val^(0+128)
  4044                           
  4045                           ;LE7-3.c: 177: val[1] = ' ';
  4046  12AD  3020               	movlw	32
  4047  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  4048  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  4049  12B0  00ED               	movwf	??_dispT
  4050  12B1  086D               	movf	??_dispT,w
  4051  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  4052  12B3  1303               	bcf	3,6	;RP1=0, select bank1
  4053  12B4  00C3               	movwf	(dispT@val^(0+128)+1)
  4054                           
  4055                           ;LE7-3.c: 178: val[2] = ' ';
  4056  12B5  3020               	movlw	32
  4057  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  4058  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  4059  12B8  00ED               	movwf	??_dispT
  4060  12B9  086D               	movf	??_dispT,w
  4061  12BA  1683               	bsf	3,5	;RP0=1, select bank1
  4062  12BB  1303               	bcf	3,6	;RP1=0, select bank1
  4063  12BC  00C4               	movwf	(dispT@val^(0+128)+2)
  4064                           
  4065                           ;LE7-3.c: 179: val[3] = ' ';
  4066  12BD  3020               	movlw	32
  4067  12BE  1283               	bcf	3,5	;RP0=0, select bank0
  4068  12BF  1303               	bcf	3,6	;RP1=0, select bank0
  4069  12C0  00ED               	movwf	??_dispT
  4070  12C1  086D               	movf	??_dispT,w
  4071  12C2  1683               	bsf	3,5	;RP0=1, select bank1
  4072  12C3  1303               	bcf	3,6	;RP1=0, select bank1
  4073  12C4  00C5               	movwf	(dispT@val^(0+128)+3)
  4074                           
  4075                           ;LE7-3.c: 180: val[4] = ' ';
  4076  12C5  3020               	movlw	32
  4077  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  4078  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  4079  12C8  00ED               	movwf	??_dispT
  4080  12C9  086D               	movf	??_dispT,w
  4081  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  4082  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  4083  12CC  00C6               	movwf	(dispT@val^(0+128)+4)
  4084                           
  4085                           ;LE7-3.c: 181: sprintf(val, "%f", T);
  4086  12CD  30B3               	movlw	(STR_2-__stringbase)& (0+255)
  4087  12CE  1283               	bcf	3,5	;RP0=0, select bank0
  4088  12CF  1303               	bcf	3,6	;RP1=0, select bank0
  4089  12D0  00ED               	movwf	??_dispT
  4090  12D1  086D               	movf	??_dispT,w
  4091  12D2  00E3               	movwf	sprintf@f
  4092  12D3  1683               	bsf	3,5	;RP0=1, select bank1
  4093  12D4  1303               	bcf	3,6	;RP1=0, select bank1
  4094  12D5  0859               	movf	_T^(0+128),w
  4095  12D6  1283               	bcf	3,5	;RP0=0, select bank0
  4096  12D7  1303               	bcf	3,6	;RP1=0, select bank0
  4097  12D8  00E4               	movwf	?_sprintf+1
  4098  12D9  1683               	bsf	3,5	;RP0=1, select bank1
  4099  12DA  1303               	bcf	3,6	;RP1=0, select bank1
  4100  12DB  085A               	movf	(_T+1)^(0+128),w
  4101  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  4102  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  4103  12DE  00E5               	movwf	?_sprintf+2
  4104  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  4105  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  4106  12E1  085B               	movf	(_T+2)^(0+128),w
  4107  12E2  1283               	bcf	3,5	;RP0=0, select bank0
  4108  12E3  1303               	bcf	3,6	;RP1=0, select bank0
  4109  12E4  00E6               	movwf	?_sprintf+3
  4110  12E5  30C2               	movlw	dispT@val& (0+255)
  4111  12E6  120A  118A  20E0  160A  118A  	fcall	_sprintf
  4112                           
  4113                           ;LE7-3.c: 183: dataCtrl(val[0]);
  4114  12EB  1683               	bsf	3,5	;RP0=1, select bank1
  4115  12EC  1303               	bcf	3,6	;RP1=0, select bank1
  4116  12ED  0842               	movf	dispT@val^(0+128),w
  4117  12EE  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4118                           
  4119                           ;LE7-3.c: 184: dataCtrl(val[1]);
  4120  12F3  1683               	bsf	3,5	;RP0=1, select bank1
  4121  12F4  1303               	bcf	3,6	;RP1=0, select bank1
  4122  12F5  0843               	movf	(dispT@val^(0+128)+1),w
  4123  12F6  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4124                           
  4125                           ;LE7-3.c: 185: dataCtrl(val[2]);
  4126  12FB  1683               	bsf	3,5	;RP0=1, select bank1
  4127  12FC  1303               	bcf	3,6	;RP1=0, select bank1
  4128  12FD  0844               	movf	(dispT@val^(0+128)+2),w
  4129  12FE  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4130                           
  4131                           ;LE7-3.c: 186: dataCtrl(val[3]);
  4132  1303  1683               	bsf	3,5	;RP0=1, select bank1
  4133  1304  1303               	bcf	3,6	;RP1=0, select bank1
  4134  1305  0845               	movf	(dispT@val^(0+128)+3),w
  4135  1306  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4136                           
  4137                           ;LE7-3.c: 187: dataCtrl(val[4]);
  4138  130B  1683               	bsf	3,5	;RP0=1, select bank1
  4139  130C  1303               	bcf	3,6	;RP1=0, select bank1
  4140  130D  0846               	movf	(dispT@val^(0+128)+4),w
  4141  130E  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4142                           
  4143                           ;LE7-3.c: 188: dataCtrl(' ');
  4144  1313  3020               	movlw	32
  4145  1314  160A  158A  21AC  160A  118A  	fcall	_dataCtrl
  4146                           
  4147                           ;LE7-3.c: 189: dataCtrl('C');
  4148  1319  3043               	movlw	67
  4149  131A  160A  158A  21AC   	fcall	_dataCtrl
  4150  131D  0008               	return
  4151  131E                     __end_of_dispT:	
  4152                           
  4153                           	psect	text14
  4154  1DBD                     __ptext14:	
  4155 ;; *************** function _dispRH *****************
  4156 ;; Defined at:
  4157 ;;		line 135 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  val             4   34[BANK1 ] unsigned char [4]
  4162 ;; Return value:  Size  Location     Type
  4163 ;;		None               void
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4171 ;;      Params:         0       0       0       0       0
  4172 ;;      Locals:         0       0       4       0       0
  4173 ;;      Temps:          0       1       0       0       0
  4174 ;;      Totals:         0       1       4       0       0
  4175 ;;Total ram usage:        5 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    4
  4178 ;; This function calls:
  4179 ;;		_dataCtrl
  4180 ;;		_instCtrl
  4181 ;;		_sprintf
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _dispRH
  4189  1DBD                     _dispRH:	
  4190                           
  4191                           ;LE7-3.c: 136: instCtrl(0x80);
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _dispRH: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4195  1DBD  3080               	movlw	128
  4196  1DBE  160A  158A  21BE  160A  158A  	fcall	_instCtrl
  4197                           
  4198                           ;LE7-3.c: 138: dataCtrl('H');
  4199  1DC3  3048               	movlw	72
  4200  1DC4  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4201                           
  4202                           ;LE7-3.c: 139: dataCtrl('u');
  4203  1DC9  3075               	movlw	117
  4204  1DCA  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4205                           
  4206                           ;LE7-3.c: 140: dataCtrl('m');
  4207  1DCF  306D               	movlw	109
  4208  1DD0  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4209                           
  4210                           ;LE7-3.c: 141: dataCtrl('i');
  4211  1DD5  3069               	movlw	105
  4212  1DD6  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4213                           
  4214                           ;LE7-3.c: 142: dataCtrl('d');
  4215  1DDB  3064               	movlw	100
  4216  1DDC  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4217                           
  4218                           ;LE7-3.c: 143: dataCtrl('i');
  4219  1DE1  3069               	movlw	105
  4220  1DE2  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4221                           
  4222                           ;LE7-3.c: 144: dataCtrl('t');
  4223  1DE7  3074               	movlw	116
  4224  1DE8  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4225                           
  4226                           ;LE7-3.c: 145: dataCtrl('y');
  4227  1DED  3079               	movlw	121
  4228  1DEE  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4229                           
  4230                           ;LE7-3.c: 146: dataCtrl(':');
  4231  1DF3  303A               	movlw	58
  4232  1DF4  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4233                           
  4234                           ;LE7-3.c: 148: char val[4];
  4235                           ;LE7-3.c: 149: val[2] = ' ';
  4236  1DF9  3020               	movlw	32
  4237  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4238  1DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4239  1DFC  00ED               	movwf	??_dispRH
  4240  1DFD  086D               	movf	??_dispRH,w
  4241  1DFE  1683               	bsf	3,5	;RP0=1, select bank1
  4242  1DFF  1303               	bcf	3,6	;RP1=0, select bank1
  4243  1E00  00C4               	movwf	(dispRH@val^(0+128)+2)
  4244                           
  4245                           ;LE7-3.c: 150: val[3] = ' ';
  4246  1E01  3020               	movlw	32
  4247  1E02  1283               	bcf	3,5	;RP0=0, select bank0
  4248  1E03  1303               	bcf	3,6	;RP1=0, select bank0
  4249  1E04  00ED               	movwf	??_dispRH
  4250  1E05  086D               	movf	??_dispRH,w
  4251  1E06  1683               	bsf	3,5	;RP0=1, select bank1
  4252  1E07  1303               	bcf	3,6	;RP1=0, select bank1
  4253  1E08  00C5               	movwf	(dispRH@val^(0+128)+3)
  4254                           
  4255                           ;LE7-3.c: 151: sprintf(val, "%d", RH);
  4256  1E09  30B0               	movlw	(STR_1-__stringbase)& (0+255)
  4257  1E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4258  1E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4259  1E0C  00ED               	movwf	??_dispRH
  4260  1E0D  086D               	movf	??_dispRH,w
  4261  1E0E  00E3               	movwf	sprintf@f
  4262  1E0F  1683               	bsf	3,5	;RP0=1, select bank1
  4263  1E10  1303               	bcf	3,6	;RP1=0, select bank1
  4264  1E11  085D               	movf	(_RH+1)^(0+128),w
  4265  1E12  1283               	bcf	3,5	;RP0=0, select bank0
  4266  1E13  1303               	bcf	3,6	;RP1=0, select bank0
  4267  1E14  01E5               	clrf	?_sprintf+2
  4268  1E15  07E5               	addwf	?_sprintf+2,f
  4269  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  4270  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  4271  1E18  085C               	movf	_RH^(0+128),w
  4272  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  4273  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4274  1E1B  01E4               	clrf	?_sprintf+1
  4275  1E1C  07E4               	addwf	?_sprintf+1,f
  4276  1E1D  30C2               	movlw	dispRH@val& (0+255)
  4277  1E1E  120A  118A  20E0  160A  158A  	fcall	_sprintf
  4278                           
  4279                           ;LE7-3.c: 153: dataCtrl(val[0]);
  4280  1E23  1683               	bsf	3,5	;RP0=1, select bank1
  4281  1E24  1303               	bcf	3,6	;RP1=0, select bank1
  4282  1E25  0842               	movf	dispRH@val^(0+128),w
  4283  1E26  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4284                           
  4285                           ;LE7-3.c: 154: dataCtrl(val[1]);
  4286  1E2B  1683               	bsf	3,5	;RP0=1, select bank1
  4287  1E2C  1303               	bcf	3,6	;RP1=0, select bank1
  4288  1E2D  0843               	movf	(dispRH@val^(0+128)+1),w
  4289  1E2E  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4290                           
  4291                           ;LE7-3.c: 155: dataCtrl(val[2]);
  4292  1E33  1683               	bsf	3,5	;RP0=1, select bank1
  4293  1E34  1303               	bcf	3,6	;RP1=0, select bank1
  4294  1E35  0844               	movf	(dispRH@val^(0+128)+2),w
  4295  1E36  160A  158A  21AC  160A  158A  	fcall	_dataCtrl
  4296                           
  4297                           ;LE7-3.c: 156: dataCtrl('%');
  4298  1E3B  3025               	movlw	37
  4299  1E3C  160A  158A  21AC   	fcall	_dataCtrl
  4300  1E3F  0008               	return
  4301  1E40                     __end_of_dispRH:	
  4302                           
  4303                           	psect	text15
  4304  00E0                     __ptext15:	
  4305 ;; *************** function _sprintf *****************
  4306 ;; Defined at:
  4307 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  sp              1    wreg     PTR unsigned char 
  4310 ;;		 -> dispT@val(5), dispRH@val(4), 
  4311 ;;  f               1   67[BANK0 ] PTR const unsigned char 
  4312 ;;		 -> STR_2(3), STR_1(3), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  4315 ;;		 -> dispT@val(5), dispRH@val(4), 
  4316 ;;  vd              4    7[BANK1 ] unsigned long 
  4317 ;;  vd              4   11[BANK1 ] unsigned long 
  4318 ;;  _val            4   23[BANK1 ] struct .
  4319 ;;  fval            3   30[BANK1 ] struct .
  4320 ;;  integ           3   18[BANK1 ] struct .
  4321 ;;  ival            3    0        struct .
  4322 ;;  exp             2   27[BANK1 ] int 
  4323 ;;  prec            2   21[BANK1 ] int 
  4324 ;;  flag            2   16[BANK1 ] unsigned short 
  4325 ;;  width           2    0        int 
  4326 ;;  c               1   33[BANK1 ] char 
  4327 ;;  ap              1   15[BANK1 ] PTR void [1]
  4328 ;;		 -> ?_sprintf(2), 
  4329 ;;  d               1    0        unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2   67[BANK0 ] int 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4339 ;;      Params:         0       4       0       0       0
  4340 ;;      Locals:         0       0      34       0       0
  4341 ;;      Temps:          0       6       0       0       0
  4342 ;;      Totals:         0      10      34       0       0
  4343 ;;Total ram usage:       44 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    3
  4346 ;; This function calls:
  4347 ;;		___awdiv
  4348 ;;		___ftadd
  4349 ;;		___ftge
  4350 ;;		___ftmul
  4351 ;;		___ftneg
  4352 ;;		___ftsub
  4353 ;;		___fttol
  4354 ;;		___lldiv
  4355 ;;		___llmod
  4356 ;;		___lltoft
  4357 ;;		___wmul
  4358 ;;		__div_to_l_
  4359 ;;		__tdiv_to_l_
  4360 ;;		_fround
  4361 ;;		_scale
  4362 ;; This function is called by:
  4363 ;;		_dispRH
  4364 ;;		_dispT
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _sprintf
  4370  00E0                     _sprintf:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4374                           ;sprintf@sp stored from wreg
  4375  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  4376  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  4377  00E2  00BD               	movwf	sprintf@sp^(0+128)
  4378                           
  4379                           ;doprnt.c: 494: va_list ap;
  4380                           ;doprnt.c: 499: signed char c;
  4381                           ;doprnt.c: 501: int width;
  4382                           ;doprnt.c: 504: int prec;
  4383                           ;doprnt.c: 508: unsigned short flag;
  4384                           ;doprnt.c: 515: char d;
  4385                           ;doprnt.c: 516: double fval, integ;
  4386                           ;doprnt.c: 517: int exp;
  4387                           ;doprnt.c: 518: double ival;
  4388                           ;doprnt.c: 519: union {
  4389                           ;doprnt.c: 520: unsigned long _val;
  4390                           ;doprnt.c: 521: struct {
  4391                           ;doprnt.c: 522: const char * _cp;
  4392                           ;doprnt.c: 523: unsigned _len;
  4393                           ;doprnt.c: 524: } _str;
  4394                           ;doprnt.c: 525: } _val;
  4395                           ;doprnt.c: 542: *ap = __va_start();
  4396  00E3  3064               	movlw	(?_sprintf+1)& (0+255)
  4397  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4398  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4399  00E6  00E7               	movwf	??_sprintf
  4400  00E7  0867               	movf	??_sprintf,w
  4401  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  4402  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  4403  00EA  00AF               	movwf	sprintf@ap^(0+128)
  4404  00EB                     l3077:	
  4405                           ;doprnt.c: 545: while(c = *f++) {
  4406                           
  4407  00EB  3001               	movlw	1
  4408  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  4409  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  4410  00EE  07E3               	addwf	sprintf@f,f
  4411  00EF  30FF               	movlw	-1
  4412  00F0  0763               	addwf	sprintf@f,w
  4413  00F1  0084               	movwf	4
  4414  00F2  160A  118A  2000  120A  118A  	fcall	stringdir
  4415  00F7  00E7               	movwf	??_sprintf
  4416  00F8  0867               	movf	??_sprintf,w
  4417  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  4418  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  4419  00FB  00C1               	movwf	sprintf@c^(0+128)
  4420  00FC  08C1               	movf	sprintf@c^(0+128),f
  4421  00FD  1903               	btfsc	3,2
  4422  00FE  2FEE               	goto	l3079
  4423                           
  4424                           ;doprnt.c: 547: if(c != '%')
  4425  00FF  0841               	movf	sprintf@c^(0+128),w
  4426  0100  3A25               	xorlw	37
  4427  0101  1903               	skipnz
  4428  0102  2917               	goto	l2893
  4429                           
  4430                           ;doprnt.c: 549: {
  4431                           ;doprnt.c: 550: ((*sp++ = (c)));
  4432  0103  0841               	movf	sprintf@c^(0+128),w
  4433  0104  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0105  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0106  00E7               	movwf	??_sprintf
  4436  0107  1683               	bsf	3,5	;RP0=1, select bank1
  4437  0108  1303               	bcf	3,6	;RP1=0, select bank1
  4438  0109  083D               	movf	sprintf@sp^(0+128),w
  4439  010A  0084               	movwf	4
  4440  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4441  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4442  010D  0867               	movf	??_sprintf,w
  4443  010E  1383               	bcf	3,7	;select IRP bank0
  4444  010F  0080               	movwf	0
  4445  0110  3001               	movlw	1
  4446  0111  00E7               	movwf	??_sprintf
  4447  0112  0867               	movf	??_sprintf,w
  4448  0113  1683               	bsf	3,5	;RP0=1, select bank1
  4449  0114  1303               	bcf	3,6	;RP1=0, select bank1
  4450  0115  07BD               	addwf	sprintf@sp^(0+128),f
  4451                           
  4452                           ;doprnt.c: 551: continue;
  4453  0116  28EB               	goto	l3077
  4454  0117                     l2893:	
  4455                           
  4456                           ;doprnt.c: 552: }
  4457                           ;doprnt.c: 557: flag = 0;
  4458  0117  01B0               	clrf	sprintf@flag^(0+128)
  4459  0118  01B1               	clrf	(sprintf@flag+1)^(0+128)
  4460                           
  4461                           ;doprnt.c: 644: switch(c = *f++) {
  4462  0119  291C               	goto	l2897
  4463  011A                     l156:	
  4464                           ;doprnt.c: 671: case 'f':
  4465                           
  4466                           ;doprnt.c: 647: goto alldone;
  4467                           
  4468                           ;doprnt.c: 646: case 0:
  4469                           
  4470                           
  4471                           ;doprnt.c: 672: flag |= 0x400;
  4472  011A  1531               	bsf	(sprintf@flag^(0+128)+1),2
  4473                           
  4474                           ;doprnt.c: 707: case 'i':
  4475                           ;doprnt.c: 708: break;
  4476                           
  4477                           ;doprnt.c: 706: case 'd':
  4478                           
  4479                           ;doprnt.c: 673: break;
  4480  011B  2938               	goto	l2899
  4481  011C                     l2897:	
  4482                           ;doprnt.c: 831: }
  4483                           
  4484                           ;doprnt.c: 822: continue;
  4485                           
  4486                           ;doprnt.c: 811: default:
  4487                           
  4488  011C  3001               	movlw	1
  4489  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4490  011E  1303               	bcf	3,6	;RP1=0, select bank0
  4491  011F  07E3               	addwf	sprintf@f,f
  4492  0120  30FF               	movlw	-1
  4493  0121  0763               	addwf	sprintf@f,w
  4494  0122  0084               	movwf	4
  4495  0123  160A  118A  2000  120A  118A  	fcall	stringdir
  4496  0128  1683               	bsf	3,5	;RP0=1, select bank1
  4497  0129  1303               	bcf	3,6	;RP1=0, select bank1
  4498  012A  00C1               	movwf	sprintf@c^(0+128)
  4499                           
  4500                           ; Switch size 1, requested type "space"
  4501                           ; Number of cases is 4, Range of values is 0 to 105
  4502                           ; switch strategies available:
  4503                           ; Name         Instructions Cycles
  4504                           ; simple_byte           13     7 (average)
  4505                           ; jumptable            260     6 (fixed)
  4506                           ;	Chosen strategy is simple_byte
  4507  012B  3A00               	xorlw	0	; case 0
  4508  012C  1903               	skipnz
  4509  012D  2FEE               	goto	l3079
  4510  012E  3A64               	xorlw	100	; case 100
  4511  012F  1903               	skipnz
  4512  0130  2938               	goto	l2899
  4513  0131  3A02               	xorlw	2	; case 102
  4514  0132  1903               	skipnz
  4515  0133  291A               	goto	l156
  4516  0134  3A0F               	xorlw	15	; case 105
  4517  0135  1903               	skipnz
  4518  0136  2938               	goto	l2899
  4519  0137  28EB               	goto	l3077
  4520  0138                     l2899:	
  4521                           
  4522                           ;doprnt.c: 834: if(flag & (0x700)) {
  4523  0138  3000               	movlw	0
  4524  0139  0530               	andwf	sprintf@flag^(0+128),w
  4525  013A  1283               	bcf	3,5	;RP0=0, select bank0
  4526  013B  1303               	bcf	3,6	;RP1=0, select bank0
  4527  013C  00E7               	movwf	??_sprintf
  4528  013D  3007               	movlw	7
  4529  013E  1683               	bsf	3,5	;RP0=1, select bank1
  4530  013F  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0140  0531               	andwf	(sprintf@flag+1)^(0+128),w
  4532  0141  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0142  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0143  00E8               	movwf	??_sprintf+1
  4535  0144  0868               	movf	??_sprintf+1,w
  4536  0145  0467               	iorwf	??_sprintf,w
  4537  0146  1903               	skipnz
  4538  0147  2EC1               	goto	l3039
  4539                           
  4540                           ;doprnt.c: 838: prec = 6;
  4541  0148  3006               	movlw	6
  4542  0149  1683               	bsf	3,5	;RP0=1, select bank1
  4543  014A  1303               	bcf	3,6	;RP1=0, select bank1
  4544  014B  00B5               	movwf	sprintf@prec^(0+128)
  4545  014C  3000               	movlw	0
  4546  014D  00B6               	movwf	(sprintf@prec^(0+128)+1)
  4547                           
  4548                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4549  014E  082F               	movf	sprintf@ap^(0+128),w
  4550  014F  0084               	movwf	4
  4551  0150  1383               	bcf	3,7	;select IRP bank0
  4552  0151  0800               	movf	0,w
  4553  0152  00BE               	movwf	sprintf@fval^(0+128)
  4554  0153  0A84               	incf	4,f
  4555  0154  0800               	movf	0,w
  4556  0155  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4557  0156  0A84               	incf	4,f
  4558  0157  0800               	movf	0,w
  4559  0158  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4560  0159  3003               	movlw	3
  4561  015A  1283               	bcf	3,5	;RP0=0, select bank0
  4562  015B  1303               	bcf	3,6	;RP1=0, select bank0
  4563  015C  00E7               	movwf	??_sprintf
  4564  015D  0867               	movf	??_sprintf,w
  4565  015E  1683               	bsf	3,5	;RP0=1, select bank1
  4566  015F  1303               	bcf	3,6	;RP1=0, select bank1
  4567  0160  07AF               	addwf	sprintf@ap^(0+128),f
  4568                           
  4569                           ;doprnt.c: 840: if(fval < 0.0) {
  4570  0161  083E               	movf	sprintf@fval^(0+128),w
  4571  0162  00F0               	movwf	___ftge@ff1
  4572  0163  083F               	movf	(sprintf@fval+1)^(0+128),w
  4573  0164  00F1               	movwf	___ftge@ff1+1
  4574  0165  0840               	movf	(sprintf@fval+2)^(0+128),w
  4575  0166  00F2               	movwf	___ftge@ff1+2
  4576  0167  3000               	movlw	0
  4577  0168  00F3               	movwf	___ftge@ff2
  4578  0169  3000               	movlw	0
  4579  016A  00F4               	movwf	___ftge@ff2+1
  4580  016B  3000               	movlw	0
  4581  016C  00F5               	movwf	___ftge@ff2+2
  4582  016D  160A  158A  23C4  120A  118A  	fcall	___ftge
  4583  0172  1803               	btfsc	3,0
  4584  0173  298D               	goto	l2913
  4585                           
  4586                           ;doprnt.c: 841: fval = -fval;
  4587  0174  1683               	bsf	3,5	;RP0=1, select bank1
  4588  0175  1303               	bcf	3,6	;RP1=0, select bank1
  4589  0176  083E               	movf	sprintf@fval^(0+128),w
  4590  0177  00F0               	movwf	___ftneg@f1
  4591  0178  083F               	movf	(sprintf@fval+1)^(0+128),w
  4592  0179  00F1               	movwf	___ftneg@f1+1
  4593  017A  0840               	movf	(sprintf@fval+2)^(0+128),w
  4594  017B  00F2               	movwf	___ftneg@f1+2
  4595  017C  160A  158A  2195  120A  118A  	fcall	___ftneg
  4596  0181  0870               	movf	?___ftneg,w
  4597  0182  1683               	bsf	3,5	;RP0=1, select bank1
  4598  0183  1303               	bcf	3,6	;RP1=0, select bank1
  4599  0184  00BE               	movwf	sprintf@fval^(0+128)
  4600  0185  0871               	movf	?___ftneg+1,w
  4601  0186  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4602  0187  0872               	movf	?___ftneg+2,w
  4603  0188  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4604                           
  4605                           ;doprnt.c: 842: flag |= 0x03;
  4606  0189  3003               	movlw	3
  4607  018A  04B0               	iorwf	sprintf@flag^(0+128),f
  4608  018B  3000               	movlw	0
  4609  018C  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  4610  018D                     l2913:	
  4611                           
  4612                           ;doprnt.c: 843: }
  4613                           ;doprnt.c: 844: exp = 0;
  4614  018D  1683               	bsf	3,5	;RP0=1, select bank1
  4615  018E  1303               	bcf	3,6	;RP1=0, select bank1
  4616  018F  01BB               	clrf	sprintf@exp^(0+128)
  4617  0190  01BC               	clrf	(sprintf@exp+1)^(0+128)
  4618                           
  4619                           ;doprnt.c: 845: if( fval!=0) {
  4620  0191  0840               	movf	(sprintf@fval+2)^(0+128),w
  4621  0192  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  4622  0193  043E               	iorwf	sprintf@fval^(0+128),w
  4623  0194  1903               	skipnz
  4624  0195  2A89               	goto	l2941
  4625                           
  4626                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4627  0196  30BE               	movlw	low sprintf@fval
  4628  0197  0084               	movwf	4
  4629  0198  1383               	bcf	3,7	;select IRP bank1
  4630  0199  0800               	movf	0,w
  4631  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4632  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4633  019C  00E7               	movwf	??_sprintf
  4634  019D  0A84               	incf	4,f
  4635  019E  0800               	movf	0,w
  4636  019F  00E8               	movwf	??_sprintf+1
  4637  01A0  0A84               	incf	4,f
  4638  01A1  0800               	movf	0,w
  4639  01A2  00E9               	movwf	??_sprintf+2
  4640  01A3  0A84               	incf	4,f
  4641  01A4  0800               	movf	0,w
  4642  01A5  00EA               	movwf	??_sprintf+3
  4643  01A6  300F               	movlw	15
  4644  01A7                     u3905:	
  4645  01A7  1003               	clrc
  4646  01A8  0CEA               	rrf	??_sprintf+3,f
  4647  01A9  0CE9               	rrf	??_sprintf+2,f
  4648  01AA  0CE8               	rrf	??_sprintf+1,f
  4649  01AB  0CE7               	rrf	??_sprintf,f
  4650  01AC  3EFF               	addlw	-1
  4651  01AD  1D03               	skipz
  4652  01AE  29A7               	goto	u3905
  4653  01AF  30FF               	movlw	255
  4654  01B0  0567               	andwf	??_sprintf,w
  4655  01B1  00EB               	movwf	??_sprintf+4
  4656  01B2  3000               	movlw	0
  4657  01B3  0568               	andwf	??_sprintf+1,w
  4658  01B4  00EC               	movwf	??_sprintf+5
  4659  01B5  086B               	movf	??_sprintf+4,w
  4660  01B6  3E82               	addlw	130
  4661  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  4662  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  4663  01B9  00BB               	movwf	sprintf@exp^(0+128)
  4664  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  4665  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  4666  01BC  086C               	movf	??_sprintf+5,w
  4667  01BD  1803               	skipnc
  4668  01BE  3E01               	addlw	1
  4669  01BF  3EFF               	addlw	255
  4670  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  4671  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  4672  01C2  00BC               	movwf	(sprintf@exp+1)^(0+128)
  4673                           
  4674                           ;doprnt.c: 847: exp--;
  4675  01C3  30FF               	movlw	255
  4676  01C4  07BB               	addwf	sprintf@exp^(0+128),f
  4677  01C5  1803               	skipnc
  4678  01C6  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  4679  01C7  30FF               	movlw	255
  4680  01C8  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  4681                           
  4682                           ;doprnt.c: 848: exp *= 3;
  4683  01C9  3003               	movlw	3
  4684  01CA  00F0               	movwf	___wmul@multiplier
  4685  01CB  3000               	movlw	0
  4686  01CC  00F1               	movwf	___wmul@multiplier+1
  4687  01CD  083C               	movf	(sprintf@exp+1)^(0+128),w
  4688  01CE  01F3               	clrf	___wmul@multiplicand+1
  4689  01CF  07F3               	addwf	___wmul@multiplicand+1,f
  4690  01D0  083B               	movf	sprintf@exp^(0+128),w
  4691  01D1  01F2               	clrf	___wmul@multiplicand
  4692  01D2  07F2               	addwf	___wmul@multiplicand,f
  4693  01D3  160A  158A  2233  120A  118A  	fcall	___wmul
  4694  01D8  0871               	movf	?___wmul+1,w
  4695  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  4696  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  4697  01DB  01BC               	clrf	(sprintf@exp+1)^(0+128)
  4698  01DC  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  4699  01DD  0870               	movf	?___wmul,w
  4700  01DE  01BB               	clrf	sprintf@exp^(0+128)
  4701  01DF  07BB               	addwf	sprintf@exp^(0+128),f
  4702                           
  4703                           ;doprnt.c: 849: exp /= 10;
  4704  01E0  300A               	movlw	10
  4705  01E1  00F7               	movwf	___awdiv@divisor
  4706  01E2  3000               	movlw	0
  4707  01E3  00F8               	movwf	___awdiv@divisor+1
  4708  01E4  083C               	movf	(sprintf@exp+1)^(0+128),w
  4709  01E5  01FA               	clrf	___awdiv@dividend+1
  4710  01E6  07FA               	addwf	___awdiv@dividend+1,f
  4711  01E7  083B               	movf	sprintf@exp^(0+128),w
  4712  01E8  01F9               	clrf	___awdiv@dividend
  4713  01E9  07F9               	addwf	___awdiv@dividend,f
  4714  01EA  160A  158A  2421  120A  118A  	fcall	___awdiv
  4715  01EF  0878               	movf	?___awdiv+1,w
  4716  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  4717  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  4718  01F2  01BC               	clrf	(sprintf@exp+1)^(0+128)
  4719  01F3  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  4720  01F4  0877               	movf	?___awdiv,w
  4721  01F5  01BB               	clrf	sprintf@exp^(0+128)
  4722  01F6  07BB               	addwf	sprintf@exp^(0+128),f
  4723                           
  4724                           ;doprnt.c: 850: if(exp < 0)
  4725  01F7  1FBC               	btfss	(sprintf@exp+1)^(0+128),7
  4726  01F8  29FF               	goto	l2929
  4727                           
  4728                           ;doprnt.c: 851: exp--;
  4729  01F9  30FF               	movlw	255
  4730  01FA  07BB               	addwf	sprintf@exp^(0+128),f
  4731  01FB  1803               	skipnc
  4732  01FC  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  4733  01FD  30FF               	movlw	255
  4734  01FE  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  4735  01FF                     l2929:	
  4736                           
  4737                           ;doprnt.c: 855: integ = scale(-exp);
  4738  01FF  033B               	decf	sprintf@exp^(0+128),w
  4739  0200  3AFF               	xorlw	255
  4740  0201  120A  158A  2561  120A  118A  	fcall	_scale
  4741  0206  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0207  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0208  0840               	movf	?_scale,w
  4744  0209  1683               	bsf	3,5	;RP0=1, select bank1
  4745  020A  1303               	bcf	3,6	;RP1=0, select bank1
  4746  020B  00B2               	movwf	sprintf@integ^(0+128)
  4747  020C  1283               	bcf	3,5	;RP0=0, select bank0
  4748  020D  1303               	bcf	3,6	;RP1=0, select bank0
  4749  020E  0841               	movf	?_scale+1,w
  4750  020F  1683               	bsf	3,5	;RP0=1, select bank1
  4751  0210  1303               	bcf	3,6	;RP1=0, select bank1
  4752  0211  00B3               	movwf	(sprintf@integ+1)^(0+128)
  4753  0212  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0213  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0214  0842               	movf	?_scale+2,w
  4756  0215  1683               	bsf	3,5	;RP0=1, select bank1
  4757  0216  1303               	bcf	3,6	;RP1=0, select bank1
  4758  0217  00B4               	movwf	(sprintf@integ+2)^(0+128)
  4759                           
  4760                           ;doprnt.c: 856: integ *= fval;
  4761  0218  083E               	movf	sprintf@fval^(0+128),w
  4762  0219  1283               	bcf	3,5	;RP0=0, select bank0
  4763  021A  1303               	bcf	3,6	;RP1=0, select bank0
  4764  021B  00B0               	movwf	___ftmul@f1
  4765  021C  1683               	bsf	3,5	;RP0=1, select bank1
  4766  021D  1303               	bcf	3,6	;RP1=0, select bank1
  4767  021E  083F               	movf	(sprintf@fval+1)^(0+128),w
  4768  021F  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0220  1303               	bcf	3,6	;RP1=0, select bank0
  4770  0221  00B1               	movwf	___ftmul@f1+1
  4771  0222  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0223  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0224  0840               	movf	(sprintf@fval+2)^(0+128),w
  4774  0225  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0226  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0227  00B2               	movwf	___ftmul@f1+2
  4777  0228  1683               	bsf	3,5	;RP0=1, select bank1
  4778  0229  1303               	bcf	3,6	;RP1=0, select bank1
  4779  022A  0832               	movf	sprintf@integ^(0+128),w
  4780  022B  1283               	bcf	3,5	;RP0=0, select bank0
  4781  022C  1303               	bcf	3,6	;RP1=0, select bank0
  4782  022D  00B3               	movwf	___ftmul@f2
  4783  022E  1683               	bsf	3,5	;RP0=1, select bank1
  4784  022F  1303               	bcf	3,6	;RP1=0, select bank1
  4785  0230  0833               	movf	(sprintf@integ+1)^(0+128),w
  4786  0231  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0232  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0233  00B4               	movwf	___ftmul@f2+1
  4789  0234  1683               	bsf	3,5	;RP0=1, select bank1
  4790  0235  1303               	bcf	3,6	;RP1=0, select bank1
  4791  0236  0834               	movf	(sprintf@integ+2)^(0+128),w
  4792  0237  1283               	bcf	3,5	;RP0=0, select bank0
  4793  0238  1303               	bcf	3,6	;RP1=0, select bank0
  4794  0239  00B5               	movwf	___ftmul@f2+2
  4795  023A  120A  118A  200D  120A  118A  	fcall	___ftmul
  4796  023F  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0240  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0241  0830               	movf	?___ftmul,w
  4799  0242  1683               	bsf	3,5	;RP0=1, select bank1
  4800  0243  1303               	bcf	3,6	;RP1=0, select bank1
  4801  0244  00B2               	movwf	sprintf@integ^(0+128)
  4802  0245  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0246  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0247  0831               	movf	?___ftmul+1,w
  4805  0248  1683               	bsf	3,5	;RP0=1, select bank1
  4806  0249  1303               	bcf	3,6	;RP1=0, select bank1
  4807  024A  00B3               	movwf	(sprintf@integ+1)^(0+128)
  4808  024B  1283               	bcf	3,5	;RP0=0, select bank0
  4809  024C  1303               	bcf	3,6	;RP1=0, select bank0
  4810  024D  0832               	movf	?___ftmul+2,w
  4811  024E  1683               	bsf	3,5	;RP0=1, select bank1
  4812  024F  1303               	bcf	3,6	;RP1=0, select bank1
  4813  0250  00B4               	movwf	(sprintf@integ+2)^(0+128)
  4814                           
  4815                           ;doprnt.c: 857: if(integ < 1.0)
  4816  0251  0832               	movf	sprintf@integ^(0+128),w
  4817  0252  00F0               	movwf	___ftge@ff1
  4818  0253  0833               	movf	(sprintf@integ+1)^(0+128),w
  4819  0254  00F1               	movwf	___ftge@ff1+1
  4820  0255  0834               	movf	(sprintf@integ+2)^(0+128),w
  4821  0256  00F2               	movwf	___ftge@ff1+2
  4822  0257  3000               	movlw	0
  4823  0258  00F3               	movwf	___ftge@ff2
  4824  0259  3080               	movlw	128
  4825  025A  00F4               	movwf	___ftge@ff2+1
  4826  025B  303F               	movlw	63
  4827  025C  00F5               	movwf	___ftge@ff2+2
  4828  025D  160A  158A  23C4  120A  118A  	fcall	___ftge
  4829  0262  1803               	btfsc	3,0
  4830  0263  2A6C               	goto	l2937
  4831                           
  4832                           ;doprnt.c: 858: exp--;
  4833  0264  30FF               	movlw	255
  4834  0265  1683               	bsf	3,5	;RP0=1, select bank1
  4835  0266  1303               	bcf	3,6	;RP1=0, select bank1
  4836  0267  07BB               	addwf	sprintf@exp^(0+128),f
  4837  0268  1803               	skipnc
  4838  0269  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  4839  026A  30FF               	movlw	255
  4840  026B  2A88               	goto	L3
  4841  026C                     l2937:	
  4842                           
  4843                           ;doprnt.c: 859: else if(integ >= 10.0)
  4844  026C  1683               	bsf	3,5	;RP0=1, select bank1
  4845  026D  1303               	bcf	3,6	;RP1=0, select bank1
  4846  026E  0832               	movf	sprintf@integ^(0+128),w
  4847  026F  00F0               	movwf	___ftge@ff1
  4848  0270  0833               	movf	(sprintf@integ+1)^(0+128),w
  4849  0271  00F1               	movwf	___ftge@ff1+1
  4850  0272  0834               	movf	(sprintf@integ+2)^(0+128),w
  4851  0273  00F2               	movwf	___ftge@ff1+2
  4852  0274  3000               	movlw	0
  4853  0275  00F3               	movwf	___ftge@ff2
  4854  0276  3020               	movlw	32
  4855  0277  00F4               	movwf	___ftge@ff2+1
  4856  0278  3041               	movlw	65
  4857  0279  00F5               	movwf	___ftge@ff2+2
  4858  027A  160A  158A  23C4  120A  118A  	fcall	___ftge
  4859  027F  1C03               	btfss	3,0
  4860  0280  2A89               	goto	l2941
  4861                           
  4862                           ;doprnt.c: 860: exp++;
  4863  0281  3001               	movlw	1
  4864  0282  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0283  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0284  07BB               	addwf	sprintf@exp^(0+128),f
  4867  0285  1803               	skipnc
  4868  0286  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  4869  0287  3000               	movlw	0
  4870  0288                     L3:	
  4871  0288  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  4872  0289                     l2941:	
  4873                           
  4874                           ;doprnt.c: 861: }
  4875                           ;doprnt.c: 1121: if(prec <= 12)
  4876  0289  1683               	bsf	3,5	;RP0=1, select bank1
  4877  028A  1303               	bcf	3,6	;RP1=0, select bank1
  4878  028B  0836               	movf	(sprintf@prec+1)^(0+128),w
  4879  028C  3A80               	xorlw	128
  4880  028D  00FF               	movwf	127
  4881  028E  3080               	movlw	128
  4882  028F  027F               	subwf	127,w
  4883  0290  1D03               	skipz
  4884  0291  2A94               	goto	u3945
  4885  0292  300D               	movlw	13
  4886  0293  0235               	subwf	sprintf@prec^(0+128),w
  4887  0294                     u3945:	
  4888  0294  1803               	skipnc
  4889  0295  2ACF               	goto	l2945
  4890                           
  4891                           ;doprnt.c: 1122: fval += fround(prec);
  4892  0296  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0297  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0298  0835               	movf	sprintf@prec^(0+128),w
  4895  0299  160A  118A  2664  120A  118A  	fcall	_fround
  4896  029E  1283               	bcf	3,5	;RP0=0, select bank0
  4897  029F  1303               	bcf	3,6	;RP1=0, select bank0
  4898  02A0  0840               	movf	?_fround,w
  4899  02A1  00D0               	movwf	___ftadd@f1
  4900  02A2  0841               	movf	?_fround+1,w
  4901  02A3  00D1               	movwf	___ftadd@f1+1
  4902  02A4  0842               	movf	?_fround+2,w
  4903  02A5  00D2               	movwf	___ftadd@f1+2
  4904  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  4905  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  4906  02A8  083E               	movf	sprintf@fval^(0+128),w
  4907  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  4908  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  4909  02AB  00D3               	movwf	___ftadd@f2
  4910  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  4911  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  4912  02AE  083F               	movf	(sprintf@fval+1)^(0+128),w
  4913  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4914  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4915  02B1  00D4               	movwf	___ftadd@f2+1
  4916  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  4917  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  4918  02B4  0840               	movf	(sprintf@fval+2)^(0+128),w
  4919  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  4920  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  4921  02B7  00D5               	movwf	___ftadd@f2+2
  4922  02B8  120A  158A  2028  120A  118A  	fcall	___ftadd
  4923  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  4924  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  4925  02BF  0850               	movf	?___ftadd,w
  4926  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  4927  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  4928  02C2  00BE               	movwf	sprintf@fval^(0+128)
  4929  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  4930  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  4931  02C5  0851               	movf	?___ftadd+1,w
  4932  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  4933  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  4934  02C8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  4935  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4936  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4937  02CB  0852               	movf	?___ftadd+2,w
  4938  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  4939  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  4940  02CE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  4941  02CF                     l2945:	
  4942                           
  4943                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4944  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  4945  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  4946  02D1  083C               	movf	(sprintf@exp+1)^(0+128),w
  4947  02D2  3A80               	xorlw	128
  4948  02D3  00FF               	movwf	127
  4949  02D4  3080               	movlw	128
  4950  02D5  027F               	subwf	127,w
  4951  02D6  1D03               	skipz
  4952  02D7  2ADA               	goto	u3955
  4953  02D8  300A               	movlw	10
  4954  02D9  023B               	subwf	sprintf@exp^(0+128),w
  4955  02DA                     u3955:	
  4956  02DA  1803               	skipnc
  4957  02DB  2B0D               	goto	l2953
  4958  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  4959  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  4960  02DE  0840               	movf	(sprintf@fval+2)^(0+128),w
  4961  02DF  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  4962  02E0  043E               	iorwf	sprintf@fval^(0+128),w
  4963  02E1  1903               	skipnz
  4964  02E2  2B6E               	goto	l2969
  4965  02E3  083E               	movf	sprintf@fval^(0+128),w
  4966  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4967  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4968  02E6  00C9               	movwf	___fttol@f1
  4969  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  4970  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  4971  02E9  083F               	movf	(sprintf@fval+1)^(0+128),w
  4972  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  4973  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  4974  02EC  00CA               	movwf	___fttol@f1+1
  4975  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  4976  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  4977  02EF  0840               	movf	(sprintf@fval+2)^(0+128),w
  4978  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  4979  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  4980  02F2  00CB               	movwf	___fttol@f1+2
  4981  02F3  160A  158A  2640  120A  118A  	fcall	___fttol
  4982  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  4983  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  4984  02FA  084C               	movf	?___fttol+3,w
  4985  02FB  044B               	iorwf	?___fttol+2,w
  4986  02FC  044A               	iorwf	?___fttol+1,w
  4987  02FD  0449               	iorwf	?___fttol,w
  4988  02FE  1D03               	skipz
  4989  02FF  2B6E               	goto	l2969
  4990  0300  1683               	bsf	3,5	;RP0=1, select bank1
  4991  0301  1303               	bcf	3,6	;RP1=0, select bank1
  4992  0302  083C               	movf	(sprintf@exp+1)^(0+128),w
  4993  0303  3A80               	xorlw	128
  4994  0304  00FF               	movwf	127
  4995  0305  3080               	movlw	128
  4996  0306  027F               	subwf	127,w
  4997  0307  1D03               	skipz
  4998  0308  2B0B               	goto	u3985
  4999  0309  3002               	movlw	2
  5000  030A  023B               	subwf	sprintf@exp^(0+128),w
  5001  030B                     u3985:	
  5002  030B  1C03               	skipc
  5003  030C  2B6E               	goto	l2969
  5004  030D                     l2953:	
  5005                           
  5006                           ;doprnt.c: 1129: if(integ < 4.294967296){
  5007  030D  1683               	bsf	3,5	;RP0=1, select bank1
  5008  030E  1303               	bcf	3,6	;RP1=0, select bank1
  5009  030F  0832               	movf	sprintf@integ^(0+128),w
  5010  0310  00F0               	movwf	___ftge@ff1
  5011  0311  0833               	movf	(sprintf@integ+1)^(0+128),w
  5012  0312  00F1               	movwf	___ftge@ff1+1
  5013  0313  0834               	movf	(sprintf@integ+2)^(0+128),w
  5014  0314  00F2               	movwf	___ftge@ff1+2
  5015  0315  3070               	movlw	112
  5016  0316  00F3               	movwf	___ftge@ff2
  5017  0317  3089               	movlw	137
  5018  0318  00F4               	movwf	___ftge@ff2+1
  5019  0319  3040               	movlw	64
  5020  031A  00F5               	movwf	___ftge@ff2+2
  5021  031B  160A  158A  23C4  120A  118A  	fcall	___ftge
  5022  0320  1803               	btfsc	3,0
  5023  0321  2B24               	goto	l2957
  5024                           
  5025                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5026  0322  30F7               	movlw	247
  5027  0323  2B25               	goto	L4
  5028  0324                     l2957:	
  5029                           ;doprnt.c: 1131: }else{
  5030                           
  5031                           
  5032                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5033  0324  30F8               	movlw	248
  5034  0325                     L4:	
  5035  0325  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0326  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0327  07BB               	addwf	sprintf@exp^(0+128),f
  5038  0328  1803               	skipnc
  5039  0329  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  5040  032A  30FF               	movlw	255
  5041  032B  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  5042                           
  5043                           ;doprnt.c: 1133: }
  5044                           ;doprnt.c: 1134: integ = scale(exp);
  5045  032C  083B               	movf	sprintf@exp^(0+128),w
  5046  032D  120A  158A  2561  120A  118A  	fcall	_scale
  5047  0332  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0333  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0334  0840               	movf	?_scale,w
  5050  0335  1683               	bsf	3,5	;RP0=1, select bank1
  5051  0336  1303               	bcf	3,6	;RP1=0, select bank1
  5052  0337  00B2               	movwf	sprintf@integ^(0+128)
  5053  0338  1283               	bcf	3,5	;RP0=0, select bank0
  5054  0339  1303               	bcf	3,6	;RP1=0, select bank0
  5055  033A  0841               	movf	?_scale+1,w
  5056  033B  1683               	bsf	3,5	;RP0=1, select bank1
  5057  033C  1303               	bcf	3,6	;RP1=0, select bank1
  5058  033D  00B3               	movwf	(sprintf@integ+1)^(0+128)
  5059  033E  1283               	bcf	3,5	;RP0=0, select bank0
  5060  033F  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0340  0842               	movf	?_scale+2,w
  5062  0341  1683               	bsf	3,5	;RP0=1, select bank1
  5063  0342  1303               	bcf	3,6	;RP1=0, select bank1
  5064  0343  00B4               	movwf	(sprintf@integ+2)^(0+128)
  5065                           
  5066                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  5067  0344  083E               	movf	sprintf@fval^(0+128),w
  5068  0345  00F0               	movwf	__tdiv_to_l_@f1
  5069  0346  083F               	movf	(sprintf@fval+1)^(0+128),w
  5070  0347  00F1               	movwf	__tdiv_to_l_@f1+1
  5071  0348  0840               	movf	(sprintf@fval+2)^(0+128),w
  5072  0349  00F2               	movwf	__tdiv_to_l_@f1+2
  5073  034A  0832               	movf	sprintf@integ^(0+128),w
  5074  034B  00F3               	movwf	__tdiv_to_l_@f2
  5075  034C  0833               	movf	(sprintf@integ+1)^(0+128),w
  5076  034D  00F4               	movwf	__tdiv_to_l_@f2+1
  5077  034E  0834               	movf	(sprintf@integ+2)^(0+128),w
  5078  034F  00F5               	movwf	__tdiv_to_l_@f2+2
  5079  0350  160A  118A  2194  120A  118A  	fcall	__tdiv_to_l_
  5080  0355  0873               	movf	?__tdiv_to_l_+3,w
  5081  0356  1683               	bsf	3,5	;RP0=1, select bank1
  5082  0357  1303               	bcf	3,6	;RP1=0, select bank1
  5083  0358  00A6               	movwf	(_sprintf$184+3)^(0+128)
  5084  0359  0872               	movf	?__tdiv_to_l_+2,w
  5085  035A  00A5               	movwf	(_sprintf$184+2)^(0+128)
  5086  035B  0871               	movf	?__tdiv_to_l_+1,w
  5087  035C  00A4               	movwf	(_sprintf$184+1)^(0+128)
  5088  035D  0870               	movf	?__tdiv_to_l_,w
  5089  035E  00A3               	movwf	_sprintf$184^(0+128)
  5090  035F  0826               	movf	(_sprintf$184+3)^(0+128),w
  5091  0360  00BA               	movwf	(sprintf@_val+3)^(0+128)
  5092  0361  0825               	movf	(_sprintf$184+2)^(0+128),w
  5093  0362  00B9               	movwf	(sprintf@_val+2)^(0+128)
  5094  0363  0824               	movf	(_sprintf$184+1)^(0+128),w
  5095  0364  00B8               	movwf	(sprintf@_val+1)^(0+128)
  5096  0365  0823               	movf	_sprintf$184^(0+128),w
  5097  0366  00B7               	movwf	sprintf@_val^(0+128)
  5098                           
  5099                           ;doprnt.c: 1138: fval = 0.0;
  5100  0367  3000               	movlw	0
  5101  0368  00BE               	movwf	sprintf@fval^(0+128)
  5102  0369  3000               	movlw	0
  5103  036A  00BF               	movwf	(sprintf@fval+1)^(0+128)
  5104  036B  3000               	movlw	0
  5105  036C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  5106                           
  5107                           ;doprnt.c: 1139: } else {
  5108  036D  2BDD               	goto	l2973
  5109  036E                     l2969:	
  5110                           
  5111                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  5112  036E  1683               	bsf	3,5	;RP0=1, select bank1
  5113  036F  1303               	bcf	3,6	;RP1=0, select bank1
  5114  0370  083E               	movf	sprintf@fval^(0+128),w
  5115  0371  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0372  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0373  00C9               	movwf	___fttol@f1
  5118  0374  1683               	bsf	3,5	;RP0=1, select bank1
  5119  0375  1303               	bcf	3,6	;RP1=0, select bank1
  5120  0376  083F               	movf	(sprintf@fval+1)^(0+128),w
  5121  0377  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0378  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0379  00CA               	movwf	___fttol@f1+1
  5124  037A  1683               	bsf	3,5	;RP0=1, select bank1
  5125  037B  1303               	bcf	3,6	;RP1=0, select bank1
  5126  037C  0840               	movf	(sprintf@fval+2)^(0+128),w
  5127  037D  1283               	bcf	3,5	;RP0=0, select bank0
  5128  037E  1303               	bcf	3,6	;RP1=0, select bank0
  5129  037F  00CB               	movwf	___fttol@f1+2
  5130  0380  160A  158A  2640  120A  118A  	fcall	___fttol
  5131  0385  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0386  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0387  084C               	movf	?___fttol+3,w
  5134  0388  1683               	bsf	3,5	;RP0=1, select bank1
  5135  0389  1303               	bcf	3,6	;RP1=0, select bank1
  5136  038A  00BA               	movwf	(sprintf@_val+3)^(0+128)
  5137  038B  1283               	bcf	3,5	;RP0=0, select bank0
  5138  038C  1303               	bcf	3,6	;RP1=0, select bank0
  5139  038D  084B               	movf	?___fttol+2,w
  5140  038E  1683               	bsf	3,5	;RP0=1, select bank1
  5141  038F  1303               	bcf	3,6	;RP1=0, select bank1
  5142  0390  00B9               	movwf	(sprintf@_val+2)^(0+128)
  5143  0391  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0392  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0393  084A               	movf	?___fttol+1,w
  5146  0394  1683               	bsf	3,5	;RP0=1, select bank1
  5147  0395  1303               	bcf	3,6	;RP1=0, select bank1
  5148  0396  00B8               	movwf	(sprintf@_val+1)^(0+128)
  5149  0397  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0398  1303               	bcf	3,6	;RP1=0, select bank0
  5151  0399  0849               	movf	?___fttol,w
  5152  039A  1683               	bsf	3,5	;RP0=1, select bank1
  5153  039B  1303               	bcf	3,6	;RP1=0, select bank1
  5154  039C  00B7               	movwf	sprintf@_val^(0+128)
  5155                           
  5156                           ;doprnt.c: 1141: fval -= (double)_val._val;
  5157  039D  083A               	movf	(sprintf@_val+3)^(0+128),w
  5158  039E  00FB               	movwf	___lltoft@c+3
  5159  039F  0839               	movf	(sprintf@_val+2)^(0+128),w
  5160  03A0  00FA               	movwf	___lltoft@c+2
  5161  03A1  0838               	movf	(sprintf@_val+1)^(0+128),w
  5162  03A2  00F9               	movwf	___lltoft@c+1
  5163  03A3  0837               	movf	sprintf@_val^(0+128),w
  5164  03A4  00F8               	movwf	___lltoft@c
  5165  03A5  160A  158A  227C  120A  118A  	fcall	___lltoft
  5166  03AA  0878               	movf	?___lltoft,w
  5167  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  5168  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  5169  03AD  00DD               	movwf	___ftsub@f2
  5170  03AE  0879               	movf	?___lltoft+1,w
  5171  03AF  00DE               	movwf	___ftsub@f2+1
  5172  03B0  087A               	movf	?___lltoft+2,w
  5173  03B1  00DF               	movwf	___ftsub@f2+2
  5174  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  5175  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  5176  03B4  083E               	movf	sprintf@fval^(0+128),w
  5177  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  5178  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  5179  03B7  00E0               	movwf	___ftsub@f1
  5180  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  5181  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  5182  03BA  083F               	movf	(sprintf@fval+1)^(0+128),w
  5183  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  5184  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  5185  03BD  00E1               	movwf	___ftsub@f1+1
  5186  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  5187  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  5188  03C0  0840               	movf	(sprintf@fval+2)^(0+128),w
  5189  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  5190  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  5191  03C3  00E2               	movwf	___ftsub@f1+2
  5192  03C4  160A  158A  21F7  120A  118A  	fcall	___ftsub
  5193  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  5194  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  5195  03CB  085D               	movf	?___ftsub,w
  5196  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  5197  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  5198  03CE  00BE               	movwf	sprintf@fval^(0+128)
  5199  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  5200  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  5201  03D1  085E               	movf	?___ftsub+1,w
  5202  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  5203  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  5204  03D4  00BF               	movwf	(sprintf@fval+1)^(0+128)
  5205  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  5206  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  5207  03D7  085F               	movf	?___ftsub+2,w
  5208  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  5209  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  5210  03DA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  5211                           
  5212                           ;doprnt.c: 1142: exp = 0;
  5213  03DB  01BB               	clrf	sprintf@exp^(0+128)
  5214  03DC  01BC               	clrf	(sprintf@exp+1)^(0+128)
  5215  03DD                     l2973:	
  5216                           
  5217                           ;doprnt.c: 1143: }
  5218                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5219  03DD  01C1               	clrf	sprintf@c^(0+128)
  5220  03DE  0AC1               	incf	sprintf@c^(0+128),f
  5221  03DF  0841               	movf	sprintf@c^(0+128),w
  5222  03E0  3A0A               	xorlw	10
  5223  03E1  1903               	btfsc	3,2
  5224  03E2  2C33               	goto	l2987
  5225  03E3                     l2979:	
  5226                           
  5227                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  5228  03E3  0841               	movf	sprintf@c^(0+128),w
  5229  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  5230  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  5231  03E6  00E7               	movwf	??_sprintf
  5232  03E7  3001               	movlw	1
  5233  03E8                     u4015:	
  5234  03E8  1003               	clrc
  5235  03E9  0DE7               	rlf	??_sprintf,f
  5236  03EA  3EFF               	addlw	-1
  5237  03EB  1D03               	skipz
  5238  03EC  2BE8               	goto	u4015
  5239  03ED  1003               	clrc
  5240  03EE  0D67               	rlf	??_sprintf,w
  5241  03EF  3E01               	addlw	low (_dpowers-__stringbase)
  5242  03F0  0084               	movwf	4
  5243  03F1  160A  118A  2000  120A  118A  	fcall	stringdir
  5244  03F6  00E8               	movwf	??_sprintf+1
  5245  03F7  160A  118A  2000  120A  118A  	fcall	stringdir
  5246  03FC  00E9               	movwf	??_sprintf+2
  5247  03FD  160A  118A  2000  120A  118A  	fcall	stringdir
  5248  0402  00EA               	movwf	??_sprintf+3
  5249  0403  160A  118A  2000  120A  118A  	fcall	stringdir
  5250  0408  00EB               	movwf	??_sprintf+4
  5251  0409  086B               	movf	??_sprintf+4,w
  5252  040A  1683               	bsf	3,5	;RP0=1, select bank1
  5253  040B  1303               	bcf	3,6	;RP1=0, select bank1
  5254  040C  023A               	subwf	(sprintf@_val+3)^(0+128),w
  5255  040D  1D03               	skipz
  5256  040E  2C25               	goto	u4025
  5257  040F  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0410  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0411  086A               	movf	??_sprintf+3,w
  5260  0412  1683               	bsf	3,5	;RP0=1, select bank1
  5261  0413  1303               	bcf	3,6	;RP1=0, select bank1
  5262  0414  0239               	subwf	(sprintf@_val+2)^(0+128),w
  5263  0415  1D03               	skipz
  5264  0416  2C25               	goto	u4025
  5265  0417  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0418  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0419  0869               	movf	??_sprintf+2,w
  5268  041A  1683               	bsf	3,5	;RP0=1, select bank1
  5269  041B  1303               	bcf	3,6	;RP1=0, select bank1
  5270  041C  0238               	subwf	(sprintf@_val+1)^(0+128),w
  5271  041D  1D03               	skipz
  5272  041E  2C25               	goto	u4025
  5273  041F  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0420  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0421  0868               	movf	??_sprintf+1,w
  5276  0422  1683               	bsf	3,5	;RP0=1, select bank1
  5277  0423  1303               	bcf	3,6	;RP1=0, select bank1
  5278  0424  0237               	subwf	sprintf@_val^(0+128),w
  5279  0425                     u4025:	
  5280  0425  1C03               	btfss	3,0
  5281  0426  2C33               	goto	l2987
  5282                           
  5283                           ;doprnt.c: 1147: break;
  5284  0427  3001               	movlw	1
  5285  0428  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0429  1303               	bcf	3,6	;RP1=0, select bank0
  5287  042A  00E7               	movwf	??_sprintf
  5288  042B  0867               	movf	??_sprintf,w
  5289  042C  1683               	bsf	3,5	;RP0=1, select bank1
  5290  042D  1303               	bcf	3,6	;RP1=0, select bank1
  5291  042E  07C1               	addwf	sprintf@c^(0+128),f
  5292  042F  0841               	movf	sprintf@c^(0+128),w
  5293  0430  3A0A               	xorlw	10
  5294  0431  1D03               	skipz
  5295  0432  2BE3               	goto	l2979
  5296  0433                     l2987:	
  5297                           
  5298                           ;doprnt.c: 1184: {
  5299                           ;doprnt.c: 1197: if(flag & 0x03)
  5300  0433  3003               	movlw	3
  5301  0434  0530               	andwf	sprintf@flag^(0+128),w
  5302  0435  1283               	bcf	3,5	;RP0=0, select bank0
  5303  0436  1303               	bcf	3,6	;RP1=0, select bank0
  5304  0437  00E7               	movwf	??_sprintf
  5305  0438  3000               	movlw	0
  5306  0439  1683               	bsf	3,5	;RP0=1, select bank1
  5307  043A  1303               	bcf	3,6	;RP1=0, select bank1
  5308  043B  0531               	andwf	(sprintf@flag+1)^(0+128),w
  5309  043C  1283               	bcf	3,5	;RP0=0, select bank0
  5310  043D  1303               	bcf	3,6	;RP1=0, select bank0
  5311  043E  00E8               	movwf	??_sprintf+1
  5312  043F  0868               	movf	??_sprintf+1,w
  5313  0440  0467               	iorwf	??_sprintf,w
  5314  0441  1903               	skipnz
  5315  0442  2C54               	goto	l183
  5316                           
  5317                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  5318  0443  302D               	movlw	45
  5319  0444                     L5:	
  5320  0444  00E7               	movwf	??_sprintf
  5321  0445  1683               	bsf	3,5	;RP0=1, select bank1
  5322  0446  1303               	bcf	3,6	;RP1=0, select bank1
  5323  0447  083D               	movf	sprintf@sp^(0+128),w
  5324  0448  0084               	movwf	4
  5325  0449  1283               	bcf	3,5	;RP0=0, select bank0
  5326  044A  1303               	bcf	3,6	;RP1=0, select bank0
  5327  044B  0867               	movf	??_sprintf,w
  5328  044C  1383               	bcf	3,7	;select IRP bank0
  5329  044D  0080               	movwf	0
  5330  044E  3001               	movlw	1
  5331  044F  00E7               	movwf	??_sprintf
  5332  0450  0867               	movf	??_sprintf,w
  5333  0451  1683               	bsf	3,5	;RP0=1, select bank1
  5334  0452  1303               	bcf	3,6	;RP1=0, select bank1
  5335  0453  07BD               	addwf	sprintf@sp^(0+128),f
  5336  0454                     l183:	
  5337  0454  30FF               	movlw	-1
  5338  0455  1283               	bcf	3,5	;RP0=0, select bank0
  5339  0456  00E7               	movwf	??_sprintf
  5340  0457  0867               	movf	??_sprintf,w
  5341  0458  1683               	bsf	3,5	;RP0=1, select bank1
  5342  0459  1303               	bcf	3,6	;RP1=0, select bank1
  5343  045A  07C1               	addwf	sprintf@c^(0+128),f
  5344  045B  0841               	movf	sprintf@c^(0+128),w
  5345  045C  3AFF               	xorlw	-1
  5346  045D  1903               	btfsc	3,2
  5347  045E  2CFB               	goto	l3005
  5348                           
  5349                           ;doprnt.c: 1209: {
  5350                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  5351                           
  5352                           ;doprnt.c: 1204: }
  5353                           ;doprnt.c: 1205: while(c--) {
  5354  045F  0841               	movf	sprintf@c^(0+128),w
  5355  0460  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0461  1303               	bcf	3,6	;RP1=0, select bank0
  5357  0462  00E7               	movwf	??_sprintf
  5358  0463  3001               	movlw	1
  5359  0464                     u4055:	
  5360  0464  1003               	clrc
  5361  0465  0DE7               	rlf	??_sprintf,f
  5362  0466  3EFF               	addlw	-1
  5363  0467  1D03               	skipz
  5364  0468  2C64               	goto	u4055
  5365  0469  1003               	clrc
  5366  046A  0D67               	rlf	??_sprintf,w
  5367  046B  3E01               	addlw	low (_dpowers-__stringbase)
  5368  046C  0084               	movwf	4
  5369  046D  160A  118A  2000  120A  118A  	fcall	stringdir
  5370  0472  00F0               	movwf	___lldiv@divisor
  5371  0473  160A  118A  2000  120A  118A  	fcall	stringdir
  5372  0478  00F1               	movwf	___lldiv@divisor+1
  5373  0479  160A  118A  2000  120A  118A  	fcall	stringdir
  5374  047E  00F2               	movwf	___lldiv@divisor+2
  5375  047F  160A  118A  2000  120A  118A  	fcall	stringdir
  5376  0484  00F3               	movwf	___lldiv@divisor+3
  5377  0485  1683               	bsf	3,5	;RP0=1, select bank1
  5378  0486  1303               	bcf	3,6	;RP1=0, select bank1
  5379  0487  083A               	movf	(sprintf@_val+3)^(0+128),w
  5380  0488  00F7               	movwf	___lldiv@dividend+3
  5381  0489  0839               	movf	(sprintf@_val+2)^(0+128),w
  5382  048A  00F6               	movwf	___lldiv@dividend+2
  5383  048B  0838               	movf	(sprintf@_val+1)^(0+128),w
  5384  048C  00F5               	movwf	___lldiv@dividend+1
  5385  048D  0837               	movf	sprintf@_val^(0+128),w
  5386  048E  00F4               	movwf	___lldiv@dividend
  5387  048F  160A  158A  247E  120A  118A  	fcall	___lldiv
  5388  0494  0873               	movf	?___lldiv+3,w
  5389  0495  1683               	bsf	3,5	;RP0=1, select bank1
  5390  0496  1303               	bcf	3,6	;RP1=0, select bank1
  5391  0497  00AA               	movwf	(sprintf@vd+3)^(0+128)
  5392  0498  0872               	movf	?___lldiv+2,w
  5393  0499  00A9               	movwf	(sprintf@vd+2)^(0+128)
  5394  049A  0871               	movf	?___lldiv+1,w
  5395  049B  00A8               	movwf	(sprintf@vd+1)^(0+128)
  5396  049C  0870               	movf	?___lldiv,w
  5397  049D  00A7               	movwf	sprintf@vd^(0+128)
  5398                           
  5399                           ;doprnt.c: 1211: vd %= 10;
  5400  049E  3000               	movlw	0
  5401  049F  1283               	bcf	3,5	;RP0=0, select bank0
  5402  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  5403  04A1  00A3               	movwf	___llmod@divisor+3
  5404  04A2  3000               	movlw	0
  5405  04A3  00A2               	movwf	___llmod@divisor+2
  5406  04A4  3000               	movlw	0
  5407  04A5  00A1               	movwf	___llmod@divisor+1
  5408  04A6  300A               	movlw	10
  5409  04A7  00A0               	movwf	___llmod@divisor
  5410  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  5411  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  5412  04AA  082A               	movf	(sprintf@vd+3)^(0+128),w
  5413  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  5414  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  5415  04AD  00A7               	movwf	___llmod@dividend+3
  5416  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  5417  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  5418  04B0  0829               	movf	(sprintf@vd+2)^(0+128),w
  5419  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  5420  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  5421  04B3  00A6               	movwf	___llmod@dividend+2
  5422  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  5423  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  5424  04B6  0828               	movf	(sprintf@vd+1)^(0+128),w
  5425  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  5426  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  5427  04B9  00A5               	movwf	___llmod@dividend+1
  5428  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  5429  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  5430  04BC  0827               	movf	sprintf@vd^(0+128),w
  5431  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  5432  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  5433  04BF  00A4               	movwf	___llmod@dividend
  5434  04C0  160A  158A  2376  120A  118A  	fcall	___llmod
  5435  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5436  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5437  04C7  0823               	movf	?___llmod+3,w
  5438  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  5439  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  5440  04CA  00AA               	movwf	(sprintf@vd+3)^(0+128)
  5441  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  5442  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  5443  04CD  0822               	movf	?___llmod+2,w
  5444  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  5445  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  5446  04D0  00A9               	movwf	(sprintf@vd+2)^(0+128)
  5447  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  5448  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  5449  04D3  0821               	movf	?___llmod+1,w
  5450  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  5451  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  5452  04D6  00A8               	movwf	(sprintf@vd+1)^(0+128)
  5453  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  5454  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  5455  04D9  0820               	movf	?___llmod,w
  5456  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  5457  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  5458  04DC  00A7               	movwf	sprintf@vd^(0+128)
  5459                           
  5460                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  5461  04DD  0827               	movf	sprintf@vd^(0+128),w
  5462  04DE  3E30               	addlw	48
  5463  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  5464  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  5465  04E1  2C44               	goto	L5
  5466  04E2                     l2999:	
  5467                           ;doprnt.c: 1213: }
  5468                           ;doprnt.c: 1215: }
  5469                           ;doprnt.c: 1216: while(exp > 0) {
  5470                           
  5471                           
  5472                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  5473  04E2  3030               	movlw	48
  5474  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  5475  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  5476  04E5  00E7               	movwf	??_sprintf
  5477  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  5478  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  5479  04E8  083D               	movf	sprintf@sp^(0+128),w
  5480  04E9  0084               	movwf	4
  5481  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  5482  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  5483  04EC  0867               	movf	??_sprintf,w
  5484  04ED  1383               	bcf	3,7	;select IRP bank0
  5485  04EE  0080               	movwf	0
  5486  04EF  3001               	movlw	1
  5487  04F0  00E7               	movwf	??_sprintf
  5488  04F1  0867               	movf	??_sprintf,w
  5489  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  5490  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  5491  04F4  07BD               	addwf	sprintf@sp^(0+128),f
  5492                           
  5493                           ;doprnt.c: 1218: exp--;
  5494  04F5  30FF               	movlw	255
  5495  04F6  07BB               	addwf	sprintf@exp^(0+128),f
  5496  04F7  1803               	skipnc
  5497  04F8  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  5498  04F9  30FF               	movlw	255
  5499  04FA  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  5500  04FB                     l3005:	
  5501  04FB  083C               	movf	(sprintf@exp+1)^(0+128),w
  5502  04FC  3A80               	xorlw	128
  5503  04FD  00FF               	movwf	127
  5504  04FE  3080               	movlw	128
  5505  04FF  027F               	subwf	127,w
  5506  0500  1D03               	skipz
  5507  0501  2D04               	goto	u4075
  5508  0502  3001               	movlw	1
  5509  0503  023B               	subwf	sprintf@exp^(0+128),w
  5510  0504                     u4075:	
  5511  0504  1803               	skipnc
  5512  0505  2CE2               	goto	l2999
  5513                           
  5514                           ;doprnt.c: 1219: }
  5515                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5516  0506  1683               	bsf	3,5	;RP0=1, select bank1
  5517  0507  1303               	bcf	3,6	;RP1=0, select bank1
  5518  0508  0836               	movf	(sprintf@prec+1)^(0+128),w
  5519  0509  3A80               	xorlw	128
  5520  050A  00FF               	movwf	127
  5521  050B  3080               	movlw	128
  5522  050C  027F               	subwf	127,w
  5523  050D  1D03               	skipz
  5524  050E  2D11               	goto	u4085
  5525  050F  3009               	movlw	9
  5526  0510  0235               	subwf	sprintf@prec^(0+128),w
  5527  0511                     u4085:	
  5528  0511  1C03               	skipc
  5529  0512  2D15               	goto	l3011
  5530                           
  5531                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5532  0513  3008               	movlw	8
  5533  0514  2D18               	goto	L6
  5534  0515                     l3011:	
  5535                           
  5536                           ;doprnt.c: 1222: else
  5537                           ;doprnt.c: 1223: c = prec;
  5538  0515  1683               	bsf	3,5	;RP0=1, select bank1
  5539  0516  1303               	bcf	3,6	;RP1=0, select bank1
  5540  0517  0835               	movf	sprintf@prec^(0+128),w
  5541  0518                     L6:	
  5542  0518  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0519  1303               	bcf	3,6	;RP1=0, select bank0
  5544  051A  00E7               	movwf	??_sprintf
  5545  051B  0867               	movf	??_sprintf,w
  5546  051C  1683               	bsf	3,5	;RP0=1, select bank1
  5547  051D  1303               	bcf	3,6	;RP1=0, select bank1
  5548  051E  00C1               	movwf	sprintf@c^(0+128)
  5549                           
  5550                           ;doprnt.c: 1224: prec -= c;
  5551  051F  0841               	movf	sprintf@c^(0+128),w
  5552  0520  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0521  1303               	bcf	3,6	;RP1=0, select bank0
  5554  0522  00E7               	movwf	??_sprintf
  5555  0523  01E8               	clrf	??_sprintf+1
  5556  0524  1BE7               	btfsc	??_sprintf,7
  5557  0525  03E8               	decf	??_sprintf+1,f
  5558  0526  0867               	movf	??_sprintf,w
  5559  0527  1683               	bsf	3,5	;RP0=1, select bank1
  5560  0528  1303               	bcf	3,6	;RP1=0, select bank1
  5561  0529  02B5               	subwf	sprintf@prec^(0+128),f
  5562  052A  1283               	bcf	3,5	;RP0=0, select bank0
  5563  052B  1303               	bcf	3,6	;RP1=0, select bank0
  5564  052C  0868               	movf	??_sprintf+1,w
  5565  052D  1683               	bsf	3,5	;RP0=1, select bank1
  5566  052E  1303               	bcf	3,6	;RP1=0, select bank1
  5567  052F  1C03               	skipc
  5568  0530  03B6               	decf	(sprintf@prec+1)^(0+128),f
  5569  0531  02B6               	subwf	(sprintf@prec+1)^(0+128),f
  5570                           
  5571                           ;doprnt.c: 1228: if(c)
  5572  0532  0841               	movf	sprintf@c^(0+128),w
  5573  0533  1903               	btfsc	3,2
  5574  0534  2D48               	goto	l3017
  5575                           
  5576                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  5577  0535  302E               	movlw	46
  5578  0536  1283               	bcf	3,5	;RP0=0, select bank0
  5579  0537  1303               	bcf	3,6	;RP1=0, select bank0
  5580  0538  00E7               	movwf	??_sprintf
  5581  0539  1683               	bsf	3,5	;RP0=1, select bank1
  5582  053A  1303               	bcf	3,6	;RP1=0, select bank1
  5583  053B  083D               	movf	sprintf@sp^(0+128),w
  5584  053C  0084               	movwf	4
  5585  053D  1283               	bcf	3,5	;RP0=0, select bank0
  5586  053E  1303               	bcf	3,6	;RP1=0, select bank0
  5587  053F  0867               	movf	??_sprintf,w
  5588  0540  1383               	bcf	3,7	;select IRP bank0
  5589  0541  0080               	movwf	0
  5590  0542  3001               	movlw	1
  5591  0543  00E7               	movwf	??_sprintf
  5592  0544  0867               	movf	??_sprintf,w
  5593  0545  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0546  1303               	bcf	3,6	;RP1=0, select bank1
  5595  0547  07BD               	addwf	sprintf@sp^(0+128),f
  5596  0548                     l3017:	
  5597                           
  5598                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  5599  0548  0841               	movf	sprintf@c^(0+128),w
  5600  0549  120A  158A  2561  120A  118A  	fcall	_scale
  5601  054E  1283               	bcf	3,5	;RP0=0, select bank0
  5602  054F  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0550  0840               	movf	?_scale,w
  5604  0551  1683               	bsf	3,5	;RP0=1, select bank1
  5605  0552  1303               	bcf	3,6	;RP1=0, select bank1
  5606  0553  00A0               	movwf	_sprintf$691^(0+128)
  5607  0554  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0555  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0556  0841               	movf	?_scale+1,w
  5610  0557  1683               	bsf	3,5	;RP0=1, select bank1
  5611  0558  1303               	bcf	3,6	;RP1=0, select bank1
  5612  0559  00A1               	movwf	(_sprintf$691+1)^(0+128)
  5613  055A  1283               	bcf	3,5	;RP0=0, select bank0
  5614  055B  1303               	bcf	3,6	;RP1=0, select bank0
  5615  055C  0842               	movf	?_scale+2,w
  5616  055D  1683               	bsf	3,5	;RP0=1, select bank1
  5617  055E  1303               	bcf	3,6	;RP1=0, select bank1
  5618  055F  00A2               	movwf	(_sprintf$691+2)^(0+128)
  5619                           
  5620                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  5621  0560  0820               	movf	_sprintf$691^(0+128),w
  5622  0561  1283               	bcf	3,5	;RP0=0, select bank0
  5623  0562  1303               	bcf	3,6	;RP1=0, select bank0
  5624  0563  00B3               	movwf	___ftmul@f2
  5625  0564  1683               	bsf	3,5	;RP0=1, select bank1
  5626  0565  1303               	bcf	3,6	;RP1=0, select bank1
  5627  0566  0821               	movf	(_sprintf$691+1)^(0+128),w
  5628  0567  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0568  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0569  00B4               	movwf	___ftmul@f2+1
  5631  056A  1683               	bsf	3,5	;RP0=1, select bank1
  5632  056B  1303               	bcf	3,6	;RP1=0, select bank1
  5633  056C  0822               	movf	(_sprintf$691+2)^(0+128),w
  5634  056D  1283               	bcf	3,5	;RP0=0, select bank0
  5635  056E  1303               	bcf	3,6	;RP1=0, select bank0
  5636  056F  00B5               	movwf	___ftmul@f2+2
  5637  0570  1683               	bsf	3,5	;RP0=1, select bank1
  5638  0571  1303               	bcf	3,6	;RP1=0, select bank1
  5639  0572  083E               	movf	sprintf@fval^(0+128),w
  5640  0573  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0574  1303               	bcf	3,6	;RP1=0, select bank0
  5642  0575  00B0               	movwf	___ftmul@f1
  5643  0576  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0577  1303               	bcf	3,6	;RP1=0, select bank1
  5645  0578  083F               	movf	(sprintf@fval+1)^(0+128),w
  5646  0579  1283               	bcf	3,5	;RP0=0, select bank0
  5647  057A  1303               	bcf	3,6	;RP1=0, select bank0
  5648  057B  00B1               	movwf	___ftmul@f1+1
  5649  057C  1683               	bsf	3,5	;RP0=1, select bank1
  5650  057D  1303               	bcf	3,6	;RP1=0, select bank1
  5651  057E  0840               	movf	(sprintf@fval+2)^(0+128),w
  5652  057F  1283               	bcf	3,5	;RP0=0, select bank0
  5653  0580  1303               	bcf	3,6	;RP1=0, select bank0
  5654  0581  00B2               	movwf	___ftmul@f1+2
  5655  0582  120A  118A  200D  120A  118A  	fcall	___ftmul
  5656  0587  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0588  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0589  0830               	movf	?___ftmul,w
  5659  058A  00C9               	movwf	___fttol@f1
  5660  058B  0831               	movf	?___ftmul+1,w
  5661  058C  00CA               	movwf	___fttol@f1+1
  5662  058D  0832               	movf	?___ftmul+2,w
  5663  058E  00CB               	movwf	___fttol@f1+2
  5664  058F  160A  158A  2640  120A  118A  	fcall	___fttol
  5665  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0596  084C               	movf	?___fttol+3,w
  5668  0597  1683               	bsf	3,5	;RP0=1, select bank1
  5669  0598  1303               	bcf	3,6	;RP1=0, select bank1
  5670  0599  00BA               	movwf	(sprintf@_val+3)^(0+128)
  5671  059A  1283               	bcf	3,5	;RP0=0, select bank0
  5672  059B  1303               	bcf	3,6	;RP1=0, select bank0
  5673  059C  084B               	movf	?___fttol+2,w
  5674  059D  1683               	bsf	3,5	;RP0=1, select bank1
  5675  059E  1303               	bcf	3,6	;RP1=0, select bank1
  5676  059F  00B9               	movwf	(sprintf@_val+2)^(0+128)
  5677  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  5678  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  5679  05A2  084A               	movf	?___fttol+1,w
  5680  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  5681  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  5682  05A5  00B8               	movwf	(sprintf@_val+1)^(0+128)
  5683  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  5684  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  5685  05A8  0849               	movf	?___fttol,w
  5686  05A9                     L7:	
  5687  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  5688  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  5689  05AB  00B7               	movwf	sprintf@_val^(0+128)
  5690  05AC  30FF               	movlw	-1
  5691  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  5692  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  5693  05AF  00E7               	movwf	??_sprintf
  5694  05B0  0867               	movf	??_sprintf,w
  5695  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  5696  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  5697  05B3  07C1               	addwf	sprintf@c^(0+128),f
  5698  05B4  0841               	movf	sprintf@c^(0+128),w
  5699  05B5  3AFF               	xorlw	-1
  5700  05B6  1903               	btfsc	3,2
  5701  05B7  2EBC               	goto	l3037
  5702                           
  5703                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  5704                           
  5705                           ;doprnt.c: 1237: while(c--) {
  5706  05B8  0841               	movf	sprintf@c^(0+128),w
  5707  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  5708  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  5709  05BB  00E7               	movwf	??_sprintf
  5710  05BC  3001               	movlw	1
  5711  05BD                     u4105:	
  5712  05BD  1003               	clrc
  5713  05BE  0DE7               	rlf	??_sprintf,f
  5714  05BF  3EFF               	addlw	-1
  5715  05C0  1D03               	skipz
  5716  05C1  2DBD               	goto	u4105
  5717  05C2  1003               	clrc
  5718  05C3  0D67               	rlf	??_sprintf,w
  5719  05C4  3E01               	addlw	low (_dpowers-__stringbase)
  5720  05C5  0084               	movwf	4
  5721  05C6  160A  118A  2000  120A  118A  	fcall	stringdir
  5722  05CB  00F0               	movwf	___lldiv@divisor
  5723  05CC  160A  118A  2000  120A  118A  	fcall	stringdir
  5724  05D1  00F1               	movwf	___lldiv@divisor+1
  5725  05D2  160A  118A  2000  120A  118A  	fcall	stringdir
  5726  05D7  00F2               	movwf	___lldiv@divisor+2
  5727  05D8  160A  118A  2000  120A  118A  	fcall	stringdir
  5728  05DD  00F3               	movwf	___lldiv@divisor+3
  5729  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  5730  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  5731  05E0  083A               	movf	(sprintf@_val+3)^(0+128),w
  5732  05E1  00F7               	movwf	___lldiv@dividend+3
  5733  05E2  0839               	movf	(sprintf@_val+2)^(0+128),w
  5734  05E3  00F6               	movwf	___lldiv@dividend+2
  5735  05E4  0838               	movf	(sprintf@_val+1)^(0+128),w
  5736  05E5  00F5               	movwf	___lldiv@dividend+1
  5737  05E6  0837               	movf	sprintf@_val^(0+128),w
  5738  05E7  00F4               	movwf	___lldiv@dividend
  5739  05E8  160A  158A  247E  120A  118A  	fcall	___lldiv
  5740  05ED  0873               	movf	?___lldiv+3,w
  5741  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  5742  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  5743  05F0  00AE               	movwf	(sprintf@vd_186+3)^(0+128)
  5744  05F1  0872               	movf	?___lldiv+2,w
  5745  05F2  00AD               	movwf	(sprintf@vd_186+2)^(0+128)
  5746  05F3  0871               	movf	?___lldiv+1,w
  5747  05F4  00AC               	movwf	(sprintf@vd_186+1)^(0+128)
  5748  05F5  0870               	movf	?___lldiv,w
  5749  05F6  00AB               	movwf	sprintf@vd_186^(0+128)
  5750                           
  5751                           ;doprnt.c: 1239: vd %= 10;
  5752  05F7  3000               	movlw	0
  5753  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  5754  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  5755  05FA  00A3               	movwf	___llmod@divisor+3
  5756  05FB  3000               	movlw	0
  5757  05FC  00A2               	movwf	___llmod@divisor+2
  5758  05FD  3000               	movlw	0
  5759  05FE  00A1               	movwf	___llmod@divisor+1
  5760  05FF  300A               	movlw	10
  5761  0600  00A0               	movwf	___llmod@divisor
  5762  0601  1683               	bsf	3,5	;RP0=1, select bank1
  5763  0602  1303               	bcf	3,6	;RP1=0, select bank1
  5764  0603  082E               	movf	(sprintf@vd_186+3)^(0+128),w
  5765  0604  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0605  1303               	bcf	3,6	;RP1=0, select bank0
  5767  0606  00A7               	movwf	___llmod@dividend+3
  5768  0607  1683               	bsf	3,5	;RP0=1, select bank1
  5769  0608  1303               	bcf	3,6	;RP1=0, select bank1
  5770  0609  082D               	movf	(sprintf@vd_186+2)^(0+128),w
  5771  060A  1283               	bcf	3,5	;RP0=0, select bank0
  5772  060B  1303               	bcf	3,6	;RP1=0, select bank0
  5773  060C  00A6               	movwf	___llmod@dividend+2
  5774  060D  1683               	bsf	3,5	;RP0=1, select bank1
  5775  060E  1303               	bcf	3,6	;RP1=0, select bank1
  5776  060F  082C               	movf	(sprintf@vd_186+1)^(0+128),w
  5777  0610  1283               	bcf	3,5	;RP0=0, select bank0
  5778  0611  1303               	bcf	3,6	;RP1=0, select bank0
  5779  0612  00A5               	movwf	___llmod@dividend+1
  5780  0613  1683               	bsf	3,5	;RP0=1, select bank1
  5781  0614  1303               	bcf	3,6	;RP1=0, select bank1
  5782  0615  082B               	movf	sprintf@vd_186^(0+128),w
  5783  0616  1283               	bcf	3,5	;RP0=0, select bank0
  5784  0617  1303               	bcf	3,6	;RP1=0, select bank0
  5785  0618  00A4               	movwf	___llmod@dividend
  5786  0619  160A  158A  2376  120A  118A  	fcall	___llmod
  5787  061E  1283               	bcf	3,5	;RP0=0, select bank0
  5788  061F  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0620  0823               	movf	?___llmod+3,w
  5790  0621  1683               	bsf	3,5	;RP0=1, select bank1
  5791  0622  1303               	bcf	3,6	;RP1=0, select bank1
  5792  0623  00AE               	movwf	(sprintf@vd_186+3)^(0+128)
  5793  0624  1283               	bcf	3,5	;RP0=0, select bank0
  5794  0625  1303               	bcf	3,6	;RP1=0, select bank0
  5795  0626  0822               	movf	?___llmod+2,w
  5796  0627  1683               	bsf	3,5	;RP0=1, select bank1
  5797  0628  1303               	bcf	3,6	;RP1=0, select bank1
  5798  0629  00AD               	movwf	(sprintf@vd_186+2)^(0+128)
  5799  062A  1283               	bcf	3,5	;RP0=0, select bank0
  5800  062B  1303               	bcf	3,6	;RP1=0, select bank0
  5801  062C  0821               	movf	?___llmod+1,w
  5802  062D  1683               	bsf	3,5	;RP0=1, select bank1
  5803  062E  1303               	bcf	3,6	;RP1=0, select bank1
  5804  062F  00AC               	movwf	(sprintf@vd_186+1)^(0+128)
  5805  0630  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0631  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0632  0820               	movf	?___llmod,w
  5808  0633  1683               	bsf	3,5	;RP0=1, select bank1
  5809  0634  1303               	bcf	3,6	;RP1=0, select bank1
  5810  0635  00AB               	movwf	sprintf@vd_186^(0+128)
  5811                           
  5812                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  5813  0636  082B               	movf	sprintf@vd_186^(0+128),w
  5814  0637  3E30               	addlw	48
  5815  0638  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0639  1303               	bcf	3,6	;RP1=0, select bank0
  5817  063A  00E7               	movwf	??_sprintf
  5818  063B  1683               	bsf	3,5	;RP0=1, select bank1
  5819  063C  1303               	bcf	3,6	;RP1=0, select bank1
  5820  063D  083D               	movf	sprintf@sp^(0+128),w
  5821  063E  0084               	movwf	4
  5822  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0641  0867               	movf	??_sprintf,w
  5825  0642  1383               	bcf	3,7	;select IRP bank0
  5826  0643  0080               	movwf	0
  5827  0644  3001               	movlw	1
  5828  0645  00E7               	movwf	??_sprintf
  5829  0646  0867               	movf	??_sprintf,w
  5830  0647  1683               	bsf	3,5	;RP0=1, select bank1
  5831  0648  1303               	bcf	3,6	;RP1=0, select bank1
  5832  0649  07BD               	addwf	sprintf@sp^(0+128),f
  5833                           
  5834                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  5835  064A  0841               	movf	sprintf@c^(0+128),w
  5836  064B  1283               	bcf	3,5	;RP0=0, select bank0
  5837  064C  1303               	bcf	3,6	;RP1=0, select bank0
  5838  064D  00E7               	movwf	??_sprintf
  5839  064E  3001               	movlw	1
  5840  064F                     u4115:	
  5841  064F  1003               	clrc
  5842  0650  0DE7               	rlf	??_sprintf,f
  5843  0651  3EFF               	addlw	-1
  5844  0652  1D03               	skipz
  5845  0653  2E4F               	goto	u4115
  5846  0654  1003               	clrc
  5847  0655  0D67               	rlf	??_sprintf,w
  5848  0656  3E01               	addlw	low (_dpowers-__stringbase)
  5849  0657  0084               	movwf	4
  5850  0658  160A  118A  2000  120A  118A  	fcall	stringdir
  5851  065D  00A0               	movwf	___llmod@divisor
  5852  065E  160A  118A  2000  120A  118A  	fcall	stringdir
  5853  0663  00A1               	movwf	___llmod@divisor+1
  5854  0664  160A  118A  2000  120A  118A  	fcall	stringdir
  5855  0669  00A2               	movwf	___llmod@divisor+2
  5856  066A  160A  118A  2000  120A  118A  	fcall	stringdir
  5857  066F  00A3               	movwf	___llmod@divisor+3
  5858  0670  1683               	bsf	3,5	;RP0=1, select bank1
  5859  0671  1303               	bcf	3,6	;RP1=0, select bank1
  5860  0672  083A               	movf	(sprintf@_val+3)^(0+128),w
  5861  0673  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0674  1303               	bcf	3,6	;RP1=0, select bank0
  5863  0675  00A7               	movwf	___llmod@dividend+3
  5864  0676  1683               	bsf	3,5	;RP0=1, select bank1
  5865  0677  1303               	bcf	3,6	;RP1=0, select bank1
  5866  0678  0839               	movf	(sprintf@_val+2)^(0+128),w
  5867  0679  1283               	bcf	3,5	;RP0=0, select bank0
  5868  067A  1303               	bcf	3,6	;RP1=0, select bank0
  5869  067B  00A6               	movwf	___llmod@dividend+2
  5870  067C  1683               	bsf	3,5	;RP0=1, select bank1
  5871  067D  1303               	bcf	3,6	;RP1=0, select bank1
  5872  067E  0838               	movf	(sprintf@_val+1)^(0+128),w
  5873  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0681  00A5               	movwf	___llmod@dividend+1
  5876  0682  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0683  1303               	bcf	3,6	;RP1=0, select bank1
  5878  0684  0837               	movf	sprintf@_val^(0+128),w
  5879  0685  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0686  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0687  00A4               	movwf	___llmod@dividend
  5882  0688  160A  158A  2376  120A  118A  	fcall	___llmod
  5883  068D  1283               	bcf	3,5	;RP0=0, select bank0
  5884  068E  1303               	bcf	3,6	;RP1=0, select bank0
  5885  068F  0823               	movf	?___llmod+3,w
  5886  0690  1683               	bsf	3,5	;RP0=1, select bank1
  5887  0691  1303               	bcf	3,6	;RP1=0, select bank1
  5888  0692  00BA               	movwf	(sprintf@_val+3)^(0+128)
  5889  0693  1283               	bcf	3,5	;RP0=0, select bank0
  5890  0694  1303               	bcf	3,6	;RP1=0, select bank0
  5891  0695  0822               	movf	?___llmod+2,w
  5892  0696  1683               	bsf	3,5	;RP0=1, select bank1
  5893  0697  1303               	bcf	3,6	;RP1=0, select bank1
  5894  0698  00B9               	movwf	(sprintf@_val+2)^(0+128)
  5895  0699  1283               	bcf	3,5	;RP0=0, select bank0
  5896  069A  1303               	bcf	3,6	;RP1=0, select bank0
  5897  069B  0821               	movf	?___llmod+1,w
  5898  069C  1683               	bsf	3,5	;RP0=1, select bank1
  5899  069D  1303               	bcf	3,6	;RP1=0, select bank1
  5900  069E  00B8               	movwf	(sprintf@_val+1)^(0+128)
  5901  069F  1283               	bcf	3,5	;RP0=0, select bank0
  5902  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  5903  06A1  0820               	movf	?___llmod,w
  5904  06A2  2DA9               	goto	L7
  5905  06A3                     l3031:	
  5906                           ;doprnt.c: 1242: }
  5907                           ;doprnt.c: 1244: while(prec) {
  5908                           
  5909                           
  5910                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  5911  06A3  3030               	movlw	48
  5912  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  5913  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  5914  06A6  00E7               	movwf	??_sprintf
  5915  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  5916  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  5917  06A9  083D               	movf	sprintf@sp^(0+128),w
  5918  06AA  0084               	movwf	4
  5919  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  5920  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  5921  06AD  0867               	movf	??_sprintf,w
  5922  06AE  1383               	bcf	3,7	;select IRP bank0
  5923  06AF  0080               	movwf	0
  5924  06B0  3001               	movlw	1
  5925  06B1  00E7               	movwf	??_sprintf
  5926  06B2  0867               	movf	??_sprintf,w
  5927  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  5928  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  5929  06B5  07BD               	addwf	sprintf@sp^(0+128),f
  5930                           
  5931                           ;doprnt.c: 1246: prec--;
  5932  06B6  30FF               	movlw	255
  5933  06B7  07B5               	addwf	sprintf@prec^(0+128),f
  5934  06B8  1803               	skipnc
  5935  06B9  0AB6               	incf	(sprintf@prec+1)^(0+128),f
  5936  06BA  30FF               	movlw	255
  5937  06BB  07B6               	addwf	(sprintf@prec+1)^(0+128),f
  5938  06BC                     l3037:	
  5939  06BC  0836               	movf	(sprintf@prec+1)^(0+128),w
  5940  06BD  0435               	iorwf	sprintf@prec^(0+128),w
  5941  06BE  1903               	btfsc	3,2
  5942  06BF  28EB               	goto	l3077
  5943  06C0  2EA3               	goto	l3031
  5944  06C1                     l3039:	
  5945                           ;doprnt.c: 1247: }
  5946                           ;doprnt.c: 1254: continue;
  5947                           
  5948                           
  5949                           ;doprnt.c: 1255: }
  5950                           ;doprnt.c: 1262: {
  5951                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5952  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  5953  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  5954  06C3  082F               	movf	sprintf@ap^(0+128),w
  5955  06C4  0084               	movwf	4
  5956  06C5  1383               	bcf	3,7	;select IRP bank0
  5957  06C6  0800               	movf	0,w
  5958  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  5959  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  5960  06C9  00E7               	movwf	??_sprintf
  5961  06CA  0A84               	incf	4,f
  5962  06CB  0800               	movf	0,w
  5963  06CC  00E8               	movwf	??_sprintf+1
  5964  06CD  0867               	movf	??_sprintf,w
  5965  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  5966  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  5967  06D0  00B7               	movwf	sprintf@_val^(0+128)
  5968  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  5969  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  5970  06D3  0868               	movf	??_sprintf+1,w
  5971  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  5972  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  5973  06D6  00B8               	movwf	(sprintf@_val+1)^(0+128)
  5974  06D7  3000               	movlw	0
  5975  06D8  1BB8               	btfsc	(sprintf@_val+1)^(0+128),7
  5976  06D9  30FF               	movlw	255
  5977  06DA  00B9               	movwf	(sprintf@_val+2)^(0+128)
  5978  06DB  00BA               	movwf	(sprintf@_val+3)^(0+128)
  5979  06DC  3002               	movlw	2
  5980  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  5981  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  5982  06DF  00E7               	movwf	??_sprintf
  5983  06E0  0867               	movf	??_sprintf,w
  5984  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  5985  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  5986  06E3  07AF               	addwf	sprintf@ap^(0+128),f
  5987                           
  5988                           ;doprnt.c: 1270: if((long)_val._val < 0) {
  5989  06E4  1FBA               	btfss	(sprintf@_val+3)^(0+128),7
  5990  06E5  2EF5               	goto	l3049
  5991                           
  5992                           ;doprnt.c: 1271: flag |= 0x03;
  5993  06E6  3003               	movlw	3
  5994  06E7  04B0               	iorwf	sprintf@flag^(0+128),f
  5995  06E8  3000               	movlw	0
  5996  06E9  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  5997                           
  5998                           ;doprnt.c: 1272: _val._val = -_val._val;
  5999  06EA  09B7               	comf	sprintf@_val^(0+128),f
  6000  06EB  09B8               	comf	(sprintf@_val+1)^(0+128),f
  6001  06EC  09B9               	comf	(sprintf@_val+2)^(0+128),f
  6002  06ED  09BA               	comf	(sprintf@_val+3)^(0+128),f
  6003  06EE  0AB7               	incf	sprintf@_val^(0+128),f
  6004  06EF  1903               	skipnz
  6005  06F0  0AB8               	incf	(sprintf@_val+1)^(0+128),f
  6006  06F1  1903               	skipnz
  6007  06F2  0AB9               	incf	(sprintf@_val+2)^(0+128),f
  6008  06F3  1903               	skipnz
  6009  06F4  0ABA               	incf	(sprintf@_val+3)^(0+128),f
  6010  06F5                     l3049:	
  6011                           
  6012                           ;doprnt.c: 1273: }
  6013                           ;doprnt.c: 1275: }
  6014                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6015  06F5  01C1               	clrf	sprintf@c^(0+128)
  6016  06F6  0AC1               	incf	sprintf@c^(0+128),f
  6017  06F7  0841               	movf	sprintf@c^(0+128),w
  6018  06F8  3A0A               	xorlw	10
  6019  06F9  1903               	btfsc	3,2
  6020  06FA  2F4B               	goto	l3061
  6021  06FB                     l3053:	
  6022                           
  6023                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  6024  06FB  0841               	movf	sprintf@c^(0+128),w
  6025  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  6026  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  6027  06FE  00E7               	movwf	??_sprintf
  6028  06FF  3001               	movlw	1
  6029  0700                     u4165:	
  6030  0700  1003               	clrc
  6031  0701  0DE7               	rlf	??_sprintf,f
  6032  0702  3EFF               	addlw	-1
  6033  0703  1D03               	skipz
  6034  0704  2F00               	goto	u4165
  6035  0705  1003               	clrc
  6036  0706  0D67               	rlf	??_sprintf,w
  6037  0707  3E01               	addlw	low (_dpowers-__stringbase)
  6038  0708  0084               	movwf	4
  6039  0709  160A  118A  2000  120A  118A  	fcall	stringdir
  6040  070E  00E8               	movwf	??_sprintf+1
  6041  070F  160A  118A  2000  120A  118A  	fcall	stringdir
  6042  0714  00E9               	movwf	??_sprintf+2
  6043  0715  160A  118A  2000  120A  118A  	fcall	stringdir
  6044  071A  00EA               	movwf	??_sprintf+3
  6045  071B  160A  118A  2000  120A  118A  	fcall	stringdir
  6046  0720  00EB               	movwf	??_sprintf+4
  6047  0721  086B               	movf	??_sprintf+4,w
  6048  0722  1683               	bsf	3,5	;RP0=1, select bank1
  6049  0723  1303               	bcf	3,6	;RP1=0, select bank1
  6050  0724  023A               	subwf	(sprintf@_val+3)^(0+128),w
  6051  0725  1D03               	skipz
  6052  0726  2F3D               	goto	u4175
  6053  0727  1283               	bcf	3,5	;RP0=0, select bank0
  6054  0728  1303               	bcf	3,6	;RP1=0, select bank0
  6055  0729  086A               	movf	??_sprintf+3,w
  6056  072A  1683               	bsf	3,5	;RP0=1, select bank1
  6057  072B  1303               	bcf	3,6	;RP1=0, select bank1
  6058  072C  0239               	subwf	(sprintf@_val+2)^(0+128),w
  6059  072D  1D03               	skipz
  6060  072E  2F3D               	goto	u4175
  6061  072F  1283               	bcf	3,5	;RP0=0, select bank0
  6062  0730  1303               	bcf	3,6	;RP1=0, select bank0
  6063  0731  0869               	movf	??_sprintf+2,w
  6064  0732  1683               	bsf	3,5	;RP0=1, select bank1
  6065  0733  1303               	bcf	3,6	;RP1=0, select bank1
  6066  0734  0238               	subwf	(sprintf@_val+1)^(0+128),w
  6067  0735  1D03               	skipz
  6068  0736  2F3D               	goto	u4175
  6069  0737  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0738  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0739  0868               	movf	??_sprintf+1,w
  6072  073A  1683               	bsf	3,5	;RP0=1, select bank1
  6073  073B  1303               	bcf	3,6	;RP1=0, select bank1
  6074  073C  0237               	subwf	sprintf@_val^(0+128),w
  6075  073D                     u4175:	
  6076  073D  1C03               	btfss	3,0
  6077  073E  2F4B               	goto	l3061
  6078                           
  6079                           ;doprnt.c: 1316: break;
  6080  073F  3001               	movlw	1
  6081  0740  1283               	bcf	3,5	;RP0=0, select bank0
  6082  0741  1303               	bcf	3,6	;RP1=0, select bank0
  6083  0742  00E7               	movwf	??_sprintf
  6084  0743  0867               	movf	??_sprintf,w
  6085  0744  1683               	bsf	3,5	;RP0=1, select bank1
  6086  0745  1303               	bcf	3,6	;RP1=0, select bank1
  6087  0746  07C1               	addwf	sprintf@c^(0+128),f
  6088  0747  0841               	movf	sprintf@c^(0+128),w
  6089  0748  3A0A               	xorlw	10
  6090  0749  1D03               	skipz
  6091  074A  2EFB               	goto	l3053
  6092  074B                     l3061:	
  6093                           
  6094                           ;doprnt.c: 1431: {
  6095                           ;doprnt.c: 1447: if(flag & 0x03)
  6096  074B  3003               	movlw	3
  6097  074C  0530               	andwf	sprintf@flag^(0+128),w
  6098  074D  1283               	bcf	3,5	;RP0=0, select bank0
  6099  074E  1303               	bcf	3,6	;RP1=0, select bank0
  6100  074F  00E7               	movwf	??_sprintf
  6101  0750  3000               	movlw	0
  6102  0751  1683               	bsf	3,5	;RP0=1, select bank1
  6103  0752  1303               	bcf	3,6	;RP1=0, select bank1
  6104  0753  0531               	andwf	(sprintf@flag+1)^(0+128),w
  6105  0754  1283               	bcf	3,5	;RP0=0, select bank0
  6106  0755  1303               	bcf	3,6	;RP1=0, select bank0
  6107  0756  00E8               	movwf	??_sprintf+1
  6108  0757  0868               	movf	??_sprintf+1,w
  6109  0758  0467               	iorwf	??_sprintf,w
  6110  0759  1903               	skipnz
  6111  075A  2F6C               	goto	l3067
  6112                           
  6113                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  6114  075B  302D               	movlw	45
  6115  075C  00E7               	movwf	??_sprintf
  6116  075D  1683               	bsf	3,5	;RP0=1, select bank1
  6117  075E  1303               	bcf	3,6	;RP1=0, select bank1
  6118  075F  083D               	movf	sprintf@sp^(0+128),w
  6119  0760  0084               	movwf	4
  6120  0761  1283               	bcf	3,5	;RP0=0, select bank0
  6121  0762  1303               	bcf	3,6	;RP1=0, select bank0
  6122  0763  0867               	movf	??_sprintf,w
  6123  0764  1383               	bcf	3,7	;select IRP bank0
  6124  0765  0080               	movwf	0
  6125  0766  3001               	movlw	1
  6126  0767  00E7               	movwf	??_sprintf
  6127  0768  0867               	movf	??_sprintf,w
  6128  0769  1683               	bsf	3,5	;RP0=1, select bank1
  6129  076A  1303               	bcf	3,6	;RP1=0, select bank1
  6130  076B  07BD               	addwf	sprintf@sp^(0+128),f
  6131  076C                     l3067:	
  6132                           
  6133                           ;doprnt.c: 1478: }
  6134                           ;doprnt.c: 1481: prec = c;
  6135  076C  1683               	bsf	3,5	;RP0=1, select bank1
  6136  076D  1303               	bcf	3,6	;RP1=0, select bank1
  6137  076E  0841               	movf	sprintf@c^(0+128),w
  6138  076F  00B5               	movwf	sprintf@prec^(0+128)
  6139  0770  01B6               	clrf	(sprintf@prec+1)^(0+128)
  6140  0771  1BB5               	btfsc	sprintf@prec^(0+128),7
  6141  0772  03B6               	decf	(sprintf@prec+1)^(0+128),f
  6142  0773                     l3075:	
  6143                           ;doprnt.c: 1483: while(prec--) {
  6144                           
  6145  0773  30FF               	movlw	255
  6146  0774  07B5               	addwf	sprintf@prec^(0+128),f
  6147  0775  1803               	skipnc
  6148  0776  0AB6               	incf	(sprintf@prec+1)^(0+128),f
  6149  0777  30FF               	movlw	255
  6150  0778  07B6               	addwf	(sprintf@prec+1)^(0+128),f
  6151  0779  30FF               	movlw	255
  6152  077A  0636               	xorwf	(sprintf@prec+1)^(0+128),w
  6153  077B  1D03               	skipz
  6154  077C  2F7F               	goto	u4215
  6155  077D  30FF               	movlw	255
  6156  077E  0635               	xorwf	sprintf@prec^(0+128),w
  6157  077F                     u4215:	
  6158  077F  1903               	btfsc	3,2
  6159  0780  28EB               	goto	l3077
  6160                           
  6161                           ;doprnt.c: 1487: {
  6162                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  6163  0781  3000               	movlw	0
  6164  0782  1283               	bcf	3,5	;RP0=0, select bank0
  6165  0783  1303               	bcf	3,6	;RP1=0, select bank0
  6166  0784  00A3               	movwf	___llmod@divisor+3
  6167  0785  3000               	movlw	0
  6168  0786  00A2               	movwf	___llmod@divisor+2
  6169  0787  3000               	movlw	0
  6170  0788  00A1               	movwf	___llmod@divisor+1
  6171  0789  300A               	movlw	10
  6172  078A  00A0               	movwf	___llmod@divisor
  6173  078B  1683               	bsf	3,5	;RP0=1, select bank1
  6174  078C  1303               	bcf	3,6	;RP1=0, select bank1
  6175  078D  0835               	movf	sprintf@prec^(0+128),w
  6176  078E  1283               	bcf	3,5	;RP0=0, select bank0
  6177  078F  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0790  00E7               	movwf	??_sprintf
  6179  0791  3001               	movlw	1
  6180  0792                     u4205:	
  6181  0792  1003               	clrc
  6182  0793  0DE7               	rlf	??_sprintf,f
  6183  0794  3EFF               	addlw	-1
  6184  0795  1D03               	skipz
  6185  0796  2F92               	goto	u4205
  6186  0797  1003               	clrc
  6187  0798  0D67               	rlf	??_sprintf,w
  6188  0799  3E01               	addlw	low (_dpowers-__stringbase)
  6189  079A  0084               	movwf	4
  6190  079B  160A  118A  2000  120A  118A  	fcall	stringdir
  6191  07A0  00F0               	movwf	___lldiv@divisor
  6192  07A1  160A  118A  2000  120A  118A  	fcall	stringdir
  6193  07A6  00F1               	movwf	___lldiv@divisor+1
  6194  07A7  160A  118A  2000  120A  118A  	fcall	stringdir
  6195  07AC  00F2               	movwf	___lldiv@divisor+2
  6196  07AD  160A  118A  2000  120A  118A  	fcall	stringdir
  6197  07B2  00F3               	movwf	___lldiv@divisor+3
  6198  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  6199  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  6200  07B5  083A               	movf	(sprintf@_val+3)^(0+128),w
  6201  07B6  00F7               	movwf	___lldiv@dividend+3
  6202  07B7  0839               	movf	(sprintf@_val+2)^(0+128),w
  6203  07B8  00F6               	movwf	___lldiv@dividend+2
  6204  07B9  0838               	movf	(sprintf@_val+1)^(0+128),w
  6205  07BA  00F5               	movwf	___lldiv@dividend+1
  6206  07BB  0837               	movf	sprintf@_val^(0+128),w
  6207  07BC  00F4               	movwf	___lldiv@dividend
  6208  07BD  160A  158A  247E  120A  118A  	fcall	___lldiv
  6209  07C2  0873               	movf	?___lldiv+3,w
  6210  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6211  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6212  07C5  00A7               	movwf	___llmod@dividend+3
  6213  07C6  0872               	movf	?___lldiv+2,w
  6214  07C7  00A6               	movwf	___llmod@dividend+2
  6215  07C8  0871               	movf	?___lldiv+1,w
  6216  07C9  00A5               	movwf	___llmod@dividend+1
  6217  07CA  0870               	movf	?___lldiv,w
  6218  07CB  00A4               	movwf	___llmod@dividend
  6219  07CC  160A  158A  2376  120A  118A  	fcall	___llmod
  6220  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  6221  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  6222  07D3  0820               	movf	?___llmod,w
  6223  07D4  3E30               	addlw	48
  6224  07D5  00E8               	movwf	??_sprintf+1
  6225  07D6  0868               	movf	??_sprintf+1,w
  6226  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  6227  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  6228  07D9  00C1               	movwf	sprintf@c^(0+128)
  6229                           
  6230                           ;doprnt.c: 1532: }
  6231                           ;doprnt.c: 1533: ((*sp++ = (c)));
  6232  07DA  0841               	movf	sprintf@c^(0+128),w
  6233  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  6234  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  6235  07DD  00E7               	movwf	??_sprintf
  6236  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  6237  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  6238  07E0  083D               	movf	sprintf@sp^(0+128),w
  6239  07E1  0084               	movwf	4
  6240  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  6241  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  6242  07E4  0867               	movf	??_sprintf,w
  6243  07E5  1383               	bcf	3,7	;select IRP bank0
  6244  07E6  0080               	movwf	0
  6245  07E7  3001               	movlw	1
  6246  07E8  00E7               	movwf	??_sprintf
  6247  07E9  0867               	movf	??_sprintf,w
  6248  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  6249  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  6250  07EC  07BD               	addwf	sprintf@sp^(0+128),f
  6251  07ED  2F73               	goto	l3075
  6252  07EE                     l3079:	
  6253                           ;doprnt.c: 1534: }
  6254                           ;doprnt.c: 1542: }
  6255                           ;doprnt.c: 1544: alldone:
  6256                           
  6257                           
  6258                           ;doprnt.c: 1547: *sp = 0;
  6259  07EE  083D               	movf	sprintf@sp^(0+128),w
  6260  07EF  0084               	movwf	4
  6261  07F0  1383               	bcf	3,7	;select IRP bank0
  6262  07F1  0180               	clrf	0
  6263  07F2  0008               	return
  6264  07F3                     __end_of_sprintf:	
  6265                           ;doprnt.c: 1549: return 0;
  6266                           ;	Return value of _sprintf is never used
  6267                           
  6268                           
  6269                           	psect	text16
  6270  0D61                     __ptext16:	
  6271 ;; *************** function _scale *****************
  6272 ;; Defined at:
  6273 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  scl             1    wreg     char 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  scl             1   40[BANK0 ] char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  3   32[BANK0 ] char 
  6280 ;; Registers used:
  6281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6287 ;;      Params:         0       3       0       0       0
  6288 ;;      Locals:         0       4       0       0       0
  6289 ;;      Temps:          0       2       0       0       0
  6290 ;;      Totals:         0       9       0       0       0
  6291 ;;Total ram usage:        9 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    2
  6294 ;; This function calls:
  6295 ;;		___awdiv
  6296 ;;		___awmod
  6297 ;;		___bmul
  6298 ;;		___ftmul
  6299 ;; This function is called by:
  6300 ;;		_sprintf
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _scale
  6306  0D61                     _scale:	
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6310                           ;scale@scl stored from wreg
  6311  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0D63  00C8               	movwf	scale@scl
  6314                           
  6315                           ;doprnt.c: 428: if(scl < 0) {
  6316  0D64  1FC8               	btfss	scale@scl,7
  6317  0D65  2EB4               	goto	l2529
  6318                           
  6319                           ;doprnt.c: 429: scl = -scl;
  6320  0D66  09C8               	comf	scale@scl,f
  6321  0D67  0AC8               	incf	scale@scl,f
  6322                           
  6323                           ;doprnt.c: 430: if(scl>=110)
  6324  0D68  0848               	movf	scale@scl,w
  6325  0D69  3A80               	xorlw	128
  6326  0D6A  3E12               	addlw	-238
  6327  0D6B  1C03               	skipc
  6328  0D6C  2E27               	goto	l2519
  6329                           
  6330                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6331  0D6D  3003               	movlw	3
  6332  0D6E  00C3               	movwf	??_scale
  6333  0D6F  0843               	movf	??_scale,w
  6334  0D70  00A4               	movwf	___bmul@multiplicand
  6335  0D71  300A               	movlw	10
  6336  0D72  00F7               	movwf	___awdiv@divisor
  6337  0D73  3000               	movlw	0
  6338  0D74  00F8               	movwf	___awdiv@divisor+1
  6339  0D75  0848               	movf	scale@scl,w
  6340  0D76  00F2               	movwf	___awmod@dividend
  6341  0D77  01F3               	clrf	___awmod@dividend+1
  6342  0D78  1BF2               	btfsc	___awmod@dividend,7
  6343  0D79  03F3               	decf	___awmod@dividend+1,f
  6344  0D7A  3064               	movlw	100
  6345  0D7B  00F0               	movwf	___awmod@divisor
  6346  0D7C  3000               	movlw	0
  6347  0D7D  00F1               	movwf	___awmod@divisor+1
  6348  0D7E  160A  158A  2329  120A  158A  	fcall	___awmod
  6349  0D83  0871               	movf	?___awmod+1,w
  6350  0D84  01FA               	clrf	___awdiv@dividend+1
  6351  0D85  07FA               	addwf	___awdiv@dividend+1,f
  6352  0D86  0870               	movf	?___awmod,w
  6353  0D87  01F9               	clrf	___awdiv@dividend
  6354  0D88  07F9               	addwf	___awdiv@dividend,f
  6355  0D89  160A  158A  2421  120A  158A  	fcall	___awdiv
  6356  0D8E  0877               	movf	?___awdiv,w
  6357  0D8F  3E09               	addlw	9
  6358  0D90  160A  158A  21D0  120A  158A  	fcall	___bmul
  6359  0D95  3E29               	addlw	low (__npowers_-__stringbase)
  6360  0D96  0084               	movwf	4
  6361  0D97  160A  118A  2000  120A  158A  	fcall	stringdir
  6362  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  6364  0D9E  00B0               	movwf	___ftmul@f1
  6365  0D9F  160A  118A  2000  120A  158A  	fcall	stringdir
  6366  0DA4  00B1               	movwf	___ftmul@f1+1
  6367  0DA5  160A  118A  2000  120A  158A  	fcall	stringdir
  6368  0DAA  00B2               	movwf	___ftmul@f1+2
  6369  0DAB  3003               	movlw	3
  6370  0DAC  00C4               	movwf	??_scale+1
  6371  0DAD  0844               	movf	??_scale+1,w
  6372  0DAE  00A4               	movwf	___bmul@multiplicand
  6373  0DAF  3064               	movlw	100
  6374  0DB0  00F7               	movwf	___awdiv@divisor
  6375  0DB1  3000               	movlw	0
  6376  0DB2  00F8               	movwf	___awdiv@divisor+1
  6377  0DB3  0848               	movf	scale@scl,w
  6378  0DB4  00F9               	movwf	___awdiv@dividend
  6379  0DB5  01FA               	clrf	___awdiv@dividend+1
  6380  0DB6  1BF9               	btfsc	___awdiv@dividend,7
  6381  0DB7  03FA               	decf	___awdiv@dividend+1,f
  6382  0DB8  160A  158A  2421  120A  158A  	fcall	___awdiv
  6383  0DBD  0877               	movf	?___awdiv,w
  6384  0DBE  3E12               	addlw	18
  6385  0DBF  160A  158A  21D0  120A  158A  	fcall	___bmul
  6386  0DC4  3E29               	addlw	low (__npowers_-__stringbase)
  6387  0DC5  0084               	movwf	4
  6388  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  6389  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0DCD  00B3               	movwf	___ftmul@f2
  6392  0DCE  160A  118A  2000  120A  158A  	fcall	stringdir
  6393  0DD3  00B4               	movwf	___ftmul@f2+1
  6394  0DD4  160A  118A  2000  120A  158A  	fcall	stringdir
  6395  0DD9  00B5               	movwf	___ftmul@f2+2
  6396  0DDA  120A  118A  200D  120A  158A  	fcall	___ftmul
  6397  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  6398  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  6399  0DE1  0830               	movf	?___ftmul,w
  6400  0DE2  00C5               	movwf	_scale$690
  6401  0DE3  0831               	movf	?___ftmul+1,w
  6402  0DE4  00C6               	movwf	_scale$690+1
  6403  0DE5  0832               	movf	?___ftmul+2,w
  6404  0DE6  00C7               	movwf	_scale$690+2
  6405                           
  6406                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6407  0DE7  3003               	movlw	3
  6408  0DE8  00C3               	movwf	??_scale
  6409  0DE9  0843               	movf	??_scale,w
  6410  0DEA  00A4               	movwf	___bmul@multiplicand
  6411  0DEB  0848               	movf	scale@scl,w
  6412  0DEC  00F2               	movwf	___awmod@dividend
  6413  0DED  01F3               	clrf	___awmod@dividend+1
  6414  0DEE  1BF2               	btfsc	___awmod@dividend,7
  6415  0DEF  03F3               	decf	___awmod@dividend+1,f
  6416  0DF0  300A               	movlw	10
  6417  0DF1  00F0               	movwf	___awmod@divisor
  6418  0DF2  3000               	movlw	0
  6419  0DF3  00F1               	movwf	___awmod@divisor+1
  6420  0DF4  160A  158A  2329  120A  158A  	fcall	___awmod
  6421  0DF9  0870               	movf	?___awmod,w
  6422  0DFA  160A  158A  21D0  120A  158A  	fcall	___bmul
  6423  0DFF  3E29               	addlw	low (__npowers_-__stringbase)
  6424  0E00  0084               	movwf	4
  6425  0E01  160A  118A  2000  120A  158A  	fcall	stringdir
  6426  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  6427  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  6428  0E08  00B0               	movwf	___ftmul@f1
  6429  0E09  160A  118A  2000  120A  158A  	fcall	stringdir
  6430  0E0E  00B1               	movwf	___ftmul@f1+1
  6431  0E0F  160A  118A  2000  120A  158A  	fcall	stringdir
  6432  0E14  00B2               	movwf	___ftmul@f1+2
  6433  0E15  0845               	movf	_scale$690,w
  6434  0E16  00B3               	movwf	___ftmul@f2
  6435  0E17  0846               	movf	_scale$690+1,w
  6436  0E18  00B4               	movwf	___ftmul@f2+1
  6437  0E19  0847               	movf	_scale$690+2,w
  6438  0E1A  00B5               	movwf	___ftmul@f2+2
  6439  0E1B  120A  118A  200D   	fcall	___ftmul
  6440  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  6442  0E20  0830               	movf	?___ftmul,w
  6443  0E21  00C0               	movwf	?_scale
  6444  0E22  0831               	movf	?___ftmul+1,w
  6445  0E23  00C1               	movwf	?_scale+1
  6446  0E24  0832               	movf	?___ftmul+2,w
  6447  0E25  00C2               	movwf	?_scale+2
  6448  0E26  0008               	return
  6449  0E27                     l2519:	
  6450                           
  6451                           ;doprnt.c: 432: else if(scl > 10)
  6452  0E27  0848               	movf	scale@scl,w
  6453  0E28  3A80               	xorlw	128
  6454  0E29  3E75               	addlw	-139
  6455  0E2A  1C03               	skipc
  6456  0E2B  2E95               	goto	l2525
  6457                           
  6458                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6459  0E2C  3003               	movlw	3
  6460  0E2D  00C3               	movwf	??_scale
  6461  0E2E  0843               	movf	??_scale,w
  6462  0E2F  00A4               	movwf	___bmul@multiplicand
  6463  0E30  0848               	movf	scale@scl,w
  6464  0E31  00F2               	movwf	___awmod@dividend
  6465  0E32  01F3               	clrf	___awmod@dividend+1
  6466  0E33  1BF2               	btfsc	___awmod@dividend,7
  6467  0E34  03F3               	decf	___awmod@dividend+1,f
  6468  0E35  300A               	movlw	10
  6469  0E36  00F0               	movwf	___awmod@divisor
  6470  0E37  3000               	movlw	0
  6471  0E38  00F1               	movwf	___awmod@divisor+1
  6472  0E39  160A  158A  2329  120A  158A  	fcall	___awmod
  6473  0E3E  0870               	movf	?___awmod,w
  6474  0E3F  160A  158A  21D0  120A  158A  	fcall	___bmul
  6475  0E44  3E29               	addlw	low (__npowers_-__stringbase)
  6476  0E45  0084               	movwf	4
  6477  0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  6478  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0E4D  00B0               	movwf	___ftmul@f1
  6481  0E4E  160A  118A  2000  120A  158A  	fcall	stringdir
  6482  0E53  00B1               	movwf	___ftmul@f1+1
  6483  0E54  160A  118A  2000  120A  158A  	fcall	stringdir
  6484  0E59  00B2               	movwf	___ftmul@f1+2
  6485  0E5A  3003               	movlw	3
  6486  0E5B  00C4               	movwf	??_scale+1
  6487  0E5C  0844               	movf	??_scale+1,w
  6488  0E5D  00A4               	movwf	___bmul@multiplicand
  6489  0E5E  300A               	movlw	10
  6490  0E5F  00F7               	movwf	___awdiv@divisor
  6491  0E60  3000               	movlw	0
  6492  0E61  00F8               	movwf	___awdiv@divisor+1
  6493  0E62  0848               	movf	scale@scl,w
  6494  0E63  00F9               	movwf	___awdiv@dividend
  6495  0E64  01FA               	clrf	___awdiv@dividend+1
  6496  0E65  1BF9               	btfsc	___awdiv@dividend,7
  6497  0E66  03FA               	decf	___awdiv@dividend+1,f
  6498  0E67  160A  158A  2421  120A  158A  	fcall	___awdiv
  6499  0E6C  0877               	movf	?___awdiv,w
  6500  0E6D  3E09               	addlw	9
  6501  0E6E  160A  158A  21D0  120A  158A  	fcall	___bmul
  6502  0E73  3E29               	addlw	low (__npowers_-__stringbase)
  6503  0E74  0084               	movwf	4
  6504  0E75  160A  118A  2000  120A  158A  	fcall	stringdir
  6505  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  6506  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  6507  0E7C  00B3               	movwf	___ftmul@f2
  6508  0E7D  160A  118A  2000  120A  158A  	fcall	stringdir
  6509  0E82  00B4               	movwf	___ftmul@f2+1
  6510  0E83  160A  118A  2000  120A  158A  	fcall	stringdir
  6511  0E88  00B5               	movwf	___ftmul@f2+2
  6512  0E89  120A  118A  200D   	fcall	___ftmul
  6513  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  6515  0E8E  0830               	movf	?___ftmul,w
  6516  0E8F  00C0               	movwf	?_scale
  6517  0E90  0831               	movf	?___ftmul+1,w
  6518  0E91  00C1               	movwf	?_scale+1
  6519  0E92  0832               	movf	?___ftmul+2,w
  6520  0E93  00C2               	movwf	?_scale+2
  6521  0E94  0008               	return
  6522  0E95                     l2525:	
  6523                           
  6524                           ;doprnt.c: 434: return _npowers_[scl];
  6525  0E95  3003               	movlw	3
  6526  0E96  00C3               	movwf	??_scale
  6527  0E97  0843               	movf	??_scale,w
  6528  0E98  00A4               	movwf	___bmul@multiplicand
  6529  0E99  0848               	movf	scale@scl,w
  6530  0E9A  160A  158A  21D0  120A  158A  	fcall	___bmul
  6531  0E9F  3E29               	addlw	low (__npowers_-__stringbase)
  6532  0EA0  0084               	movwf	4
  6533  0EA1  160A  118A  2000  120A  158A  	fcall	stringdir
  6534  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  6535  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  6536  0EA8  00C0               	movwf	?_scale
  6537  0EA9  160A  118A  2000  120A  158A  	fcall	stringdir
  6538  0EAE  00C1               	movwf	?_scale+1
  6539  0EAF  160A  118A  2000   	fcall	stringdir
  6540  0EB2  00C2               	movwf	?_scale+2
  6541  0EB3  0008               	return
  6542  0EB4                     l2529:	
  6543                           
  6544                           ;doprnt.c: 435: }
  6545                           ;doprnt.c: 436: if(scl>=110)
  6546  0EB4  0848               	movf	scale@scl,w
  6547  0EB5  3A80               	xorlw	128
  6548  0EB6  3E12               	addlw	-238
  6549  0EB7  1C03               	skipc
  6550  0EB8  2F73               	goto	l2537
  6551                           
  6552                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6553  0EB9  3003               	movlw	3
  6554  0EBA  00C3               	movwf	??_scale
  6555  0EBB  0843               	movf	??_scale,w
  6556  0EBC  00A4               	movwf	___bmul@multiplicand
  6557  0EBD  300A               	movlw	10
  6558  0EBE  00F7               	movwf	___awdiv@divisor
  6559  0EBF  3000               	movlw	0
  6560  0EC0  00F8               	movwf	___awdiv@divisor+1
  6561  0EC1  0848               	movf	scale@scl,w
  6562  0EC2  00F2               	movwf	___awmod@dividend
  6563  0EC3  01F3               	clrf	___awmod@dividend+1
  6564  0EC4  1BF2               	btfsc	___awmod@dividend,7
  6565  0EC5  03F3               	decf	___awmod@dividend+1,f
  6566  0EC6  3064               	movlw	100
  6567  0EC7  00F0               	movwf	___awmod@divisor
  6568  0EC8  3000               	movlw	0
  6569  0EC9  00F1               	movwf	___awmod@divisor+1
  6570  0ECA  160A  158A  2329  120A  158A  	fcall	___awmod
  6571  0ECF  0871               	movf	?___awmod+1,w
  6572  0ED0  01FA               	clrf	___awdiv@dividend+1
  6573  0ED1  07FA               	addwf	___awdiv@dividend+1,f
  6574  0ED2  0870               	movf	?___awmod,w
  6575  0ED3  01F9               	clrf	___awdiv@dividend
  6576  0ED4  07F9               	addwf	___awdiv@dividend,f
  6577  0ED5  160A  158A  2421  120A  158A  	fcall	___awdiv
  6578  0EDA  0877               	movf	?___awdiv,w
  6579  0EDB  3E09               	addlw	9
  6580  0EDC  160A  158A  21D0  120A  158A  	fcall	___bmul
  6581  0EE1  3E50               	addlw	low (__powers_-__stringbase)
  6582  0EE2  0084               	movwf	4
  6583  0EE3  160A  118A  2000  120A  158A  	fcall	stringdir
  6584  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  6585  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  6586  0EEA  00B0               	movwf	___ftmul@f1
  6587  0EEB  160A  118A  2000  120A  158A  	fcall	stringdir
  6588  0EF0  00B1               	movwf	___ftmul@f1+1
  6589  0EF1  160A  118A  2000  120A  158A  	fcall	stringdir
  6590  0EF6  00B2               	movwf	___ftmul@f1+2
  6591  0EF7  3003               	movlw	3
  6592  0EF8  00C4               	movwf	??_scale+1
  6593  0EF9  0844               	movf	??_scale+1,w
  6594  0EFA  00A4               	movwf	___bmul@multiplicand
  6595  0EFB  3064               	movlw	100
  6596  0EFC  00F7               	movwf	___awdiv@divisor
  6597  0EFD  3000               	movlw	0
  6598  0EFE  00F8               	movwf	___awdiv@divisor+1
  6599  0EFF  0848               	movf	scale@scl,w
  6600  0F00  00F9               	movwf	___awdiv@dividend
  6601  0F01  01FA               	clrf	___awdiv@dividend+1
  6602  0F02  1BF9               	btfsc	___awdiv@dividend,7
  6603  0F03  03FA               	decf	___awdiv@dividend+1,f
  6604  0F04  160A  158A  2421  120A  158A  	fcall	___awdiv
  6605  0F09  0877               	movf	?___awdiv,w
  6606  0F0A  3E12               	addlw	18
  6607  0F0B  160A  158A  21D0  120A  158A  	fcall	___bmul
  6608  0F10  3E50               	addlw	low (__powers_-__stringbase)
  6609  0F11  0084               	movwf	4
  6610  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  6611  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  6612  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  6613  0F19  00B3               	movwf	___ftmul@f2
  6614  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  6615  0F1F  00B4               	movwf	___ftmul@f2+1
  6616  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  6617  0F25  00B5               	movwf	___ftmul@f2+2
  6618  0F26  120A  118A  200D  120A  158A  	fcall	___ftmul
  6619  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  6620  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  6621  0F2D  0830               	movf	?___ftmul,w
  6622  0F2E  00C5               	movwf	_scale$690
  6623  0F2F  0831               	movf	?___ftmul+1,w
  6624  0F30  00C6               	movwf	_scale$690+1
  6625  0F31  0832               	movf	?___ftmul+2,w
  6626  0F32  00C7               	movwf	_scale$690+2
  6627                           
  6628                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6629  0F33  3003               	movlw	3
  6630  0F34  00C3               	movwf	??_scale
  6631  0F35  0843               	movf	??_scale,w
  6632  0F36  00A4               	movwf	___bmul@multiplicand
  6633  0F37  0848               	movf	scale@scl,w
  6634  0F38  00F2               	movwf	___awmod@dividend
  6635  0F39  01F3               	clrf	___awmod@dividend+1
  6636  0F3A  1BF2               	btfsc	___awmod@dividend,7
  6637  0F3B  03F3               	decf	___awmod@dividend+1,f
  6638  0F3C  300A               	movlw	10
  6639  0F3D  00F0               	movwf	___awmod@divisor
  6640  0F3E  3000               	movlw	0
  6641  0F3F  00F1               	movwf	___awmod@divisor+1
  6642  0F40  160A  158A  2329  120A  158A  	fcall	___awmod
  6643  0F45  0870               	movf	?___awmod,w
  6644  0F46  160A  158A  21D0  120A  158A  	fcall	___bmul
  6645  0F4B  3E50               	addlw	low (__powers_-__stringbase)
  6646  0F4C  0084               	movwf	4
  6647  0F4D  160A  118A  2000  120A  158A  	fcall	stringdir
  6648  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  6649  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  6650  0F54  00B0               	movwf	___ftmul@f1
  6651  0F55  160A  118A  2000  120A  158A  	fcall	stringdir
  6652  0F5A  00B1               	movwf	___ftmul@f1+1
  6653  0F5B  160A  118A  2000  120A  158A  	fcall	stringdir
  6654  0F60  00B2               	movwf	___ftmul@f1+2
  6655  0F61  0845               	movf	_scale$690,w
  6656  0F62  00B3               	movwf	___ftmul@f2
  6657  0F63  0846               	movf	_scale$690+1,w
  6658  0F64  00B4               	movwf	___ftmul@f2+1
  6659  0F65  0847               	movf	_scale$690+2,w
  6660  0F66  00B5               	movwf	___ftmul@f2+2
  6661  0F67  120A  118A  200D   	fcall	___ftmul
  6662  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  6663  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  6664  0F6C  0830               	movf	?___ftmul,w
  6665  0F6D  00C0               	movwf	?_scale
  6666  0F6E  0831               	movf	?___ftmul+1,w
  6667  0F6F  00C1               	movwf	?_scale+1
  6668  0F70  0832               	movf	?___ftmul+2,w
  6669  0F71  00C2               	movwf	?_scale+2
  6670  0F72  0008               	return
  6671  0F73                     l2537:	
  6672                           
  6673                           ;doprnt.c: 438: else if(scl > 10)
  6674  0F73  0848               	movf	scale@scl,w
  6675  0F74  3A80               	xorlw	128
  6676  0F75  3E75               	addlw	-139
  6677  0F76  1C03               	skipc
  6678  0F77  2FE1               	goto	l2543
  6679                           
  6680                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6681  0F78  3003               	movlw	3
  6682  0F79  00C3               	movwf	??_scale
  6683  0F7A  0843               	movf	??_scale,w
  6684  0F7B  00A4               	movwf	___bmul@multiplicand
  6685  0F7C  0848               	movf	scale@scl,w
  6686  0F7D  00F2               	movwf	___awmod@dividend
  6687  0F7E  01F3               	clrf	___awmod@dividend+1
  6688  0F7F  1BF2               	btfsc	___awmod@dividend,7
  6689  0F80  03F3               	decf	___awmod@dividend+1,f
  6690  0F81  300A               	movlw	10
  6691  0F82  00F0               	movwf	___awmod@divisor
  6692  0F83  3000               	movlw	0
  6693  0F84  00F1               	movwf	___awmod@divisor+1
  6694  0F85  160A  158A  2329  120A  158A  	fcall	___awmod
  6695  0F8A  0870               	movf	?___awmod,w
  6696  0F8B  160A  158A  21D0  120A  158A  	fcall	___bmul
  6697  0F90  3E50               	addlw	low (__powers_-__stringbase)
  6698  0F91  0084               	movwf	4
  6699  0F92  160A  118A  2000  120A  158A  	fcall	stringdir
  6700  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  6701  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  6702  0F99  00B0               	movwf	___ftmul@f1
  6703  0F9A  160A  118A  2000  120A  158A  	fcall	stringdir
  6704  0F9F  00B1               	movwf	___ftmul@f1+1
  6705  0FA0  160A  118A  2000  120A  158A  	fcall	stringdir
  6706  0FA5  00B2               	movwf	___ftmul@f1+2
  6707  0FA6  3003               	movlw	3
  6708  0FA7  00C4               	movwf	??_scale+1
  6709  0FA8  0844               	movf	??_scale+1,w
  6710  0FA9  00A4               	movwf	___bmul@multiplicand
  6711  0FAA  300A               	movlw	10
  6712  0FAB  00F7               	movwf	___awdiv@divisor
  6713  0FAC  3000               	movlw	0
  6714  0FAD  00F8               	movwf	___awdiv@divisor+1
  6715  0FAE  0848               	movf	scale@scl,w
  6716  0FAF  00F9               	movwf	___awdiv@dividend
  6717  0FB0  01FA               	clrf	___awdiv@dividend+1
  6718  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  6719  0FB2  03FA               	decf	___awdiv@dividend+1,f
  6720  0FB3  160A  158A  2421  120A  158A  	fcall	___awdiv
  6721  0FB8  0877               	movf	?___awdiv,w
  6722  0FB9  3E09               	addlw	9
  6723  0FBA  160A  158A  21D0  120A  158A  	fcall	___bmul
  6724  0FBF  3E50               	addlw	low (__powers_-__stringbase)
  6725  0FC0  0084               	movwf	4
  6726  0FC1  160A  118A  2000  120A  158A  	fcall	stringdir
  6727  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  6728  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  6729  0FC8  00B3               	movwf	___ftmul@f2
  6730  0FC9  160A  118A  2000  120A  158A  	fcall	stringdir
  6731  0FCE  00B4               	movwf	___ftmul@f2+1
  6732  0FCF  160A  118A  2000  120A  158A  	fcall	stringdir
  6733  0FD4  00B5               	movwf	___ftmul@f2+2
  6734  0FD5  120A  118A  200D   	fcall	___ftmul
  6735  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  6736  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  6737  0FDA  0830               	movf	?___ftmul,w
  6738  0FDB  00C0               	movwf	?_scale
  6739  0FDC  0831               	movf	?___ftmul+1,w
  6740  0FDD  00C1               	movwf	?_scale+1
  6741  0FDE  0832               	movf	?___ftmul+2,w
  6742  0FDF  00C2               	movwf	?_scale+2
  6743  0FE0  0008               	return
  6744  0FE1                     l2543:	
  6745                           
  6746                           ;doprnt.c: 440: return _powers_[scl];
  6747  0FE1  3003               	movlw	3
  6748  0FE2  00C3               	movwf	??_scale
  6749  0FE3  0843               	movf	??_scale,w
  6750  0FE4  00A4               	movwf	___bmul@multiplicand
  6751  0FE5  0848               	movf	scale@scl,w
  6752  0FE6  160A  158A  21D0  120A  158A  	fcall	___bmul
  6753  0FEB  3E50               	addlw	low (__powers_-__stringbase)
  6754  0FEC  0084               	movwf	4
  6755  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  6756  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0FF4  00C0               	movwf	?_scale
  6759  0FF5  160A  118A  2000  120A  158A  	fcall	stringdir
  6760  0FFA  00C1               	movwf	?_scale+1
  6761  0FFB  160A  118A  2000   	fcall	stringdir
  6762  0FFE  00C2               	movwf	?_scale+2
  6763  0FFF  0008               	return
  6764  1000                     __end_of_scale:	
  6765                           
  6766                           	psect	text17
  6767  1664                     __ptext17:	
  6768 ;; *************** function _fround *****************
  6769 ;; Defined at:
  6770 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  prec            1    wreg     unsigned char 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  prec            1   47[BANK0 ] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  3   32[BANK0 ] unsigned char 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6784 ;;      Params:         0       3       0       0       0
  6785 ;;      Locals:         0       7       0       0       0
  6786 ;;      Temps:          0       6       0       0       0
  6787 ;;      Totals:         0      16       0       0       0
  6788 ;;Total ram usage:       16 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    2
  6791 ;; This function calls:
  6792 ;;		___awdiv
  6793 ;;		___awmod
  6794 ;;		___bmul
  6795 ;;		___ftmul
  6796 ;; This function is called by:
  6797 ;;		_sprintf
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           
  6802                           ;psect for function _fround
  6803  1664                     _fround:	
  6804                           
  6805                           ;incstack = 0
  6806                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6807                           ;fround@prec stored from wreg
  6808  1664  1283               	bcf	3,5	;RP0=0, select bank0
  6809  1665  1303               	bcf	3,6	;RP1=0, select bank0
  6810  1666  00CF               	movwf	fround@prec
  6811                           
  6812                           ;doprnt.c: 413: if(prec>=110)
  6813  1667  306E               	movlw	110
  6814  1668  024F               	subwf	fround@prec,w
  6815  1669  1C03               	skipc
  6816  166A  2F44               	goto	l2495
  6817                           
  6818                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6819  166B  3003               	movlw	3
  6820  166C  00C3               	movwf	??_fround
  6821  166D  0843               	movf	??_fround,w
  6822  166E  00A4               	movwf	___bmul@multiplicand
  6823  166F  300A               	movlw	10
  6824  1670  00F7               	movwf	___awdiv@divisor
  6825  1671  3000               	movlw	0
  6826  1672  00F8               	movwf	___awdiv@divisor+1
  6827  1673  084F               	movf	fround@prec,w
  6828  1674  00C4               	movwf	??_fround+1
  6829  1675  01C5               	clrf	??_fround+2
  6830  1676  0844               	movf	??_fround+1,w
  6831  1677  00F2               	movwf	___awmod@dividend
  6832  1678  0845               	movf	??_fround+2,w
  6833  1679  00F3               	movwf	___awmod@dividend+1
  6834  167A  3064               	movlw	100
  6835  167B  00F0               	movwf	___awmod@divisor
  6836  167C  3000               	movlw	0
  6837  167D  00F1               	movwf	___awmod@divisor+1
  6838  167E  160A  158A  2329  160A  118A  	fcall	___awmod
  6839  1683  0871               	movf	?___awmod+1,w
  6840  1684  01FA               	clrf	___awdiv@dividend+1
  6841  1685  07FA               	addwf	___awdiv@dividend+1,f
  6842  1686  0870               	movf	?___awmod,w
  6843  1687  01F9               	clrf	___awdiv@dividend
  6844  1688  07F9               	addwf	___awdiv@dividend,f
  6845  1689  160A  158A  2421  160A  118A  	fcall	___awdiv
  6846  168E  0877               	movf	?___awdiv,w
  6847  168F  3E09               	addlw	9
  6848  1690  160A  158A  21D0  160A  118A  	fcall	___bmul
  6849  1695  3E29               	addlw	low (__npowers_-__stringbase)
  6850  1696  0084               	movwf	4
  6851  1697  160A  118A  2000  160A  118A  	fcall	stringdir
  6852  169C  1283               	bcf	3,5	;RP0=0, select bank0
  6853  169D  1303               	bcf	3,6	;RP1=0, select bank0
  6854  169E  00B0               	movwf	___ftmul@f1
  6855  169F  160A  118A  2000  160A  118A  	fcall	stringdir
  6856  16A4  00B1               	movwf	___ftmul@f1+1
  6857  16A5  160A  118A  2000  160A  118A  	fcall	stringdir
  6858  16AA  00B2               	movwf	___ftmul@f1+2
  6859  16AB  3003               	movlw	3
  6860  16AC  00C6               	movwf	??_fround+3
  6861  16AD  0846               	movf	??_fround+3,w
  6862  16AE  00A4               	movwf	___bmul@multiplicand
  6863  16AF  3064               	movlw	100
  6864  16B0  00F7               	movwf	___awdiv@divisor
  6865  16B1  3000               	movlw	0
  6866  16B2  00F8               	movwf	___awdiv@divisor+1
  6867  16B3  084F               	movf	fround@prec,w
  6868  16B4  00C7               	movwf	??_fround+4
  6869  16B5  01C8               	clrf	??_fround+5
  6870  16B6  0847               	movf	??_fround+4,w
  6871  16B7  00F9               	movwf	___awdiv@dividend
  6872  16B8  0848               	movf	??_fround+5,w
  6873  16B9  00FA               	movwf	___awdiv@dividend+1
  6874  16BA  160A  158A  2421  160A  118A  	fcall	___awdiv
  6875  16BF  0877               	movf	?___awdiv,w
  6876  16C0  3E12               	addlw	18
  6877  16C1  160A  158A  21D0  160A  118A  	fcall	___bmul
  6878  16C6  3E29               	addlw	low (__npowers_-__stringbase)
  6879  16C7  0084               	movwf	4
  6880  16C8  160A  118A  2000  160A  118A  	fcall	stringdir
  6881  16CD  1283               	bcf	3,5	;RP0=0, select bank0
  6882  16CE  1303               	bcf	3,6	;RP1=0, select bank0
  6883  16CF  00B3               	movwf	___ftmul@f2
  6884  16D0  160A  118A  2000  160A  118A  	fcall	stringdir
  6885  16D5  00B4               	movwf	___ftmul@f2+1
  6886  16D6  160A  118A  2000  160A  118A  	fcall	stringdir
  6887  16DB  00B5               	movwf	___ftmul@f2+2
  6888  16DC  120A  118A  200D  160A  118A  	fcall	___ftmul
  6889  16E1  1283               	bcf	3,5	;RP0=0, select bank0
  6890  16E2  1303               	bcf	3,6	;RP1=0, select bank0
  6891  16E3  0830               	movf	?___ftmul,w
  6892  16E4  00CC               	movwf	_fround$688
  6893  16E5  0831               	movf	?___ftmul+1,w
  6894  16E6  00CD               	movwf	_fround$688+1
  6895  16E7  0832               	movf	?___ftmul+2,w
  6896  16E8  00CE               	movwf	_fround$688+2
  6897                           
  6898                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6899  16E9  3003               	movlw	3
  6900  16EA  00C3               	movwf	??_fround
  6901  16EB  0843               	movf	??_fround,w
  6902  16EC  00A4               	movwf	___bmul@multiplicand
  6903  16ED  084F               	movf	fround@prec,w
  6904  16EE  00C4               	movwf	??_fround+1
  6905  16EF  01C5               	clrf	??_fround+2
  6906  16F0  0844               	movf	??_fround+1,w
  6907  16F1  00F2               	movwf	___awmod@dividend
  6908  16F2  0845               	movf	??_fround+2,w
  6909  16F3  00F3               	movwf	___awmod@dividend+1
  6910  16F4  300A               	movlw	10
  6911  16F5  00F0               	movwf	___awmod@divisor
  6912  16F6  3000               	movlw	0
  6913  16F7  00F1               	movwf	___awmod@divisor+1
  6914  16F8  160A  158A  2329  160A  118A  	fcall	___awmod
  6915  16FD  0870               	movf	?___awmod,w
  6916  16FE  160A  158A  21D0  160A  118A  	fcall	___bmul
  6917  1703  3E29               	addlw	low (__npowers_-__stringbase)
  6918  1704  0084               	movwf	4
  6919  1705  160A  118A  2000  160A  118A  	fcall	stringdir
  6920  170A  1283               	bcf	3,5	;RP0=0, select bank0
  6921  170B  1303               	bcf	3,6	;RP1=0, select bank0
  6922  170C  00B0               	movwf	___ftmul@f1
  6923  170D  160A  118A  2000  160A  118A  	fcall	stringdir
  6924  1712  00B1               	movwf	___ftmul@f1+1
  6925  1713  160A  118A  2000  160A  118A  	fcall	stringdir
  6926  1718  00B2               	movwf	___ftmul@f1+2
  6927  1719  084C               	movf	_fround$688,w
  6928  171A  00B3               	movwf	___ftmul@f2
  6929  171B  084D               	movf	_fround$688+1,w
  6930  171C  00B4               	movwf	___ftmul@f2+1
  6931  171D  084E               	movf	_fround$688+2,w
  6932  171E  00B5               	movwf	___ftmul@f2+2
  6933  171F  120A  118A  200D  160A  118A  	fcall	___ftmul
  6934  1724  1283               	bcf	3,5	;RP0=0, select bank0
  6935  1725  1303               	bcf	3,6	;RP1=0, select bank0
  6936  1726  0830               	movf	?___ftmul,w
  6937  1727  00C9               	movwf	_fround$689
  6938  1728  0831               	movf	?___ftmul+1,w
  6939  1729  00CA               	movwf	_fround$689+1
  6940  172A  0832               	movf	?___ftmul+2,w
  6941  172B  00CB               	movwf	_fround$689+2
  6942                           
  6943                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6944  172C  3000               	movlw	0
  6945  172D  00B0               	movwf	___ftmul@f1
  6946  172E  3000               	movlw	0
  6947  172F  00B1               	movwf	___ftmul@f1+1
  6948  1730  303F               	movlw	63
  6949  1731  00B2               	movwf	___ftmul@f1+2
  6950  1732  0849               	movf	_fround$689,w
  6951  1733  00B3               	movwf	___ftmul@f2
  6952  1734  084A               	movf	_fround$689+1,w
  6953  1735  00B4               	movwf	___ftmul@f2+1
  6954  1736  084B               	movf	_fround$689+2,w
  6955  1737  00B5               	movwf	___ftmul@f2+2
  6956  1738  120A  118A  200D   	fcall	___ftmul
  6957  173B  1283               	bcf	3,5	;RP0=0, select bank0
  6958  173C  1303               	bcf	3,6	;RP1=0, select bank0
  6959  173D  0830               	movf	?___ftmul,w
  6960  173E  00C0               	movwf	?_fround
  6961  173F  0831               	movf	?___ftmul+1,w
  6962  1740  00C1               	movwf	?_fround+1
  6963  1741  0832               	movf	?___ftmul+2,w
  6964  1742  00C2               	movwf	?_fround+2
  6965  1743  0008               	return
  6966  1744                     l2495:	
  6967                           
  6968                           ;doprnt.c: 415: else if(prec > 10)
  6969  1744  300B               	movlw	11
  6970  1745  024F               	subwf	fround@prec,w
  6971  1746  1C03               	skipc
  6972  1747  2FCE               	goto	l2503
  6973                           
  6974                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6975  1748  3003               	movlw	3
  6976  1749  00C3               	movwf	??_fround
  6977  174A  0843               	movf	??_fround,w
  6978  174B  00A4               	movwf	___bmul@multiplicand
  6979  174C  084F               	movf	fround@prec,w
  6980  174D  00C4               	movwf	??_fround+1
  6981  174E  01C5               	clrf	??_fround+2
  6982  174F  0844               	movf	??_fround+1,w
  6983  1750  00F2               	movwf	___awmod@dividend
  6984  1751  0845               	movf	??_fround+2,w
  6985  1752  00F3               	movwf	___awmod@dividend+1
  6986  1753  300A               	movlw	10
  6987  1754  00F0               	movwf	___awmod@divisor
  6988  1755  3000               	movlw	0
  6989  1756  00F1               	movwf	___awmod@divisor+1
  6990  1757  160A  158A  2329  160A  118A  	fcall	___awmod
  6991  175C  0870               	movf	?___awmod,w
  6992  175D  160A  158A  21D0  160A  118A  	fcall	___bmul
  6993  1762  3E29               	addlw	low (__npowers_-__stringbase)
  6994  1763  0084               	movwf	4
  6995  1764  160A  118A  2000  160A  118A  	fcall	stringdir
  6996  1769  1283               	bcf	3,5	;RP0=0, select bank0
  6997  176A  1303               	bcf	3,6	;RP1=0, select bank0
  6998  176B  00B0               	movwf	___ftmul@f1
  6999  176C  160A  118A  2000  160A  118A  	fcall	stringdir
  7000  1771  00B1               	movwf	___ftmul@f1+1
  7001  1772  160A  118A  2000  160A  118A  	fcall	stringdir
  7002  1777  00B2               	movwf	___ftmul@f1+2
  7003  1778  3003               	movlw	3
  7004  1779  00C6               	movwf	??_fround+3
  7005  177A  0846               	movf	??_fround+3,w
  7006  177B  00A4               	movwf	___bmul@multiplicand
  7007  177C  300A               	movlw	10
  7008  177D  00F7               	movwf	___awdiv@divisor
  7009  177E  3000               	movlw	0
  7010  177F  00F8               	movwf	___awdiv@divisor+1
  7011  1780  084F               	movf	fround@prec,w
  7012  1781  00C7               	movwf	??_fround+4
  7013  1782  01C8               	clrf	??_fround+5
  7014  1783  0847               	movf	??_fround+4,w
  7015  1784  00F9               	movwf	___awdiv@dividend
  7016  1785  0848               	movf	??_fround+5,w
  7017  1786  00FA               	movwf	___awdiv@dividend+1
  7018  1787  160A  158A  2421  160A  118A  	fcall	___awdiv
  7019  178C  0877               	movf	?___awdiv,w
  7020  178D  3E09               	addlw	9
  7021  178E  160A  158A  21D0  160A  118A  	fcall	___bmul
  7022  1793  3E29               	addlw	low (__npowers_-__stringbase)
  7023  1794  0084               	movwf	4
  7024  1795  160A  118A  2000  160A  118A  	fcall	stringdir
  7025  179A  1283               	bcf	3,5	;RP0=0, select bank0
  7026  179B  1303               	bcf	3,6	;RP1=0, select bank0
  7027  179C  00B3               	movwf	___ftmul@f2
  7028  179D  160A  118A  2000  160A  118A  	fcall	stringdir
  7029  17A2  00B4               	movwf	___ftmul@f2+1
  7030  17A3  160A  118A  2000  160A  118A  	fcall	stringdir
  7031  17A8  00B5               	movwf	___ftmul@f2+2
  7032  17A9  120A  118A  200D  160A  118A  	fcall	___ftmul
  7033  17AE  1283               	bcf	3,5	;RP0=0, select bank0
  7034  17AF  1303               	bcf	3,6	;RP1=0, select bank0
  7035  17B0  0830               	movf	?___ftmul,w
  7036  17B1  00CC               	movwf	_fround$688
  7037  17B2  0831               	movf	?___ftmul+1,w
  7038  17B3  00CD               	movwf	_fround$688+1
  7039  17B4  0832               	movf	?___ftmul+2,w
  7040  17B5  00CE               	movwf	_fround$688+2
  7041                           
  7042                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7043  17B6  3000               	movlw	0
  7044  17B7  00B0               	movwf	___ftmul@f1
  7045  17B8  3000               	movlw	0
  7046  17B9  00B1               	movwf	___ftmul@f1+1
  7047  17BA  303F               	movlw	63
  7048  17BB  00B2               	movwf	___ftmul@f1+2
  7049  17BC  084C               	movf	_fround$688,w
  7050  17BD  00B3               	movwf	___ftmul@f2
  7051  17BE  084D               	movf	_fround$688+1,w
  7052  17BF  00B4               	movwf	___ftmul@f2+1
  7053  17C0  084E               	movf	_fround$688+2,w
  7054  17C1  00B5               	movwf	___ftmul@f2+2
  7055  17C2  120A  118A  200D   	fcall	___ftmul
  7056  17C5  1283               	bcf	3,5	;RP0=0, select bank0
  7057  17C6  1303               	bcf	3,6	;RP1=0, select bank0
  7058  17C7  0830               	movf	?___ftmul,w
  7059  17C8  00C0               	movwf	?_fround
  7060  17C9  0831               	movf	?___ftmul+1,w
  7061  17CA  00C1               	movwf	?_fround+1
  7062  17CB  0832               	movf	?___ftmul+2,w
  7063  17CC  00C2               	movwf	?_fround+2
  7064  17CD  0008               	return
  7065  17CE                     l2503:	
  7066                           
  7067                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7068  17CE  3000               	movlw	0
  7069  17CF  00B0               	movwf	___ftmul@f1
  7070  17D0  3000               	movlw	0
  7071  17D1  00B1               	movwf	___ftmul@f1+1
  7072  17D2  303F               	movlw	63
  7073  17D3  00B2               	movwf	___ftmul@f1+2
  7074  17D4  3003               	movlw	3
  7075  17D5  00C3               	movwf	??_fround
  7076  17D6  0843               	movf	??_fround,w
  7077  17D7  00A4               	movwf	___bmul@multiplicand
  7078  17D8  084F               	movf	fround@prec,w
  7079  17D9  160A  158A  21D0  160A  118A  	fcall	___bmul
  7080  17DE  3E29               	addlw	low (__npowers_-__stringbase)
  7081  17DF  0084               	movwf	4
  7082  17E0  160A  118A  2000  160A  118A  	fcall	stringdir
  7083  17E5  1283               	bcf	3,5	;RP0=0, select bank0
  7084  17E6  1303               	bcf	3,6	;RP1=0, select bank0
  7085  17E7  00B3               	movwf	___ftmul@f2
  7086  17E8  160A  118A  2000  160A  118A  	fcall	stringdir
  7087  17ED  00B4               	movwf	___ftmul@f2+1
  7088  17EE  160A  118A  2000  160A  118A  	fcall	stringdir
  7089  17F3  00B5               	movwf	___ftmul@f2+2
  7090  17F4  120A  118A  200D   	fcall	___ftmul
  7091  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  7092  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  7093  17F9  0830               	movf	?___ftmul,w
  7094  17FA  00C0               	movwf	?_fround
  7095  17FB  0831               	movf	?___ftmul+1,w
  7096  17FC  00C1               	movwf	?_fround+1
  7097  17FD  0832               	movf	?___ftmul+2,w
  7098  17FE  00C2               	movwf	?_fround+2
  7099  17FF  0008               	return
  7100  1800                     __end_of_fround:	
  7101                           
  7102                           	psect	text18
  7103  000D                     __ptext18:	
  7104 ;; *************** function ___ftmul *****************
  7105 ;; Defined at:
  7106 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  f1              3   16[BANK0 ] float 
  7109 ;;  f2              3   19[BANK0 ] float 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  7112 ;;  sign            1   31[BANK0 ] unsigned char 
  7113 ;;  cntr            1   30[BANK0 ] unsigned char 
  7114 ;;  exp             1   26[BANK0 ] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  3   16[BANK0 ] float 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0, pclath, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7124 ;;      Params:         0       6       0       0       0
  7125 ;;      Locals:         0       6       0       0       0
  7126 ;;      Temps:          0       4       0       0       0
  7127 ;;      Totals:         0      16       0       0       0
  7128 ;;Total ram usage:       16 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    1
  7131 ;; This function calls:
  7132 ;;		___ftpack
  7133 ;; This function is called by:
  7134 ;;		_main
  7135 ;;		_fround
  7136 ;;		_scale
  7137 ;;		_sprintf
  7138 ;;		_pow
  7139 ;;		_exp
  7140 ;;		_log
  7141 ;;		_eval_poly
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function ___ftmul
  7147  000D                     ___ftmul:	
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7151  000D  1283               	bcf	3,5	;RP0=0, select bank0
  7152  000E  1303               	bcf	3,6	;RP1=0, select bank0
  7153  000F  0830               	movf	___ftmul@f1,w
  7154  0010  00B6               	movwf	??___ftmul
  7155  0011  0831               	movf	___ftmul@f1+1,w
  7156  0012  00B7               	movwf	??___ftmul+1
  7157  0013  0832               	movf	___ftmul@f1+2,w
  7158  0014  00B8               	movwf	??___ftmul+2
  7159  0015  1003               	clrc
  7160  0016  0D37               	rlf	??___ftmul+1,w
  7161  0017  0D38               	rlf	??___ftmul+2,w
  7162  0018  00B9               	movwf	??___ftmul+3
  7163  0019  0839               	movf	??___ftmul+3,w
  7164  001A  00BA               	movwf	___ftmul@exp
  7165  001B  08BA               	movf	___ftmul@exp,f
  7166  001C  1D03               	skipz
  7167  001D  2825               	goto	l2349
  7168  001E  3000               	movlw	0
  7169  001F  00B0               	movwf	?___ftmul
  7170  0020  3000               	movlw	0
  7171  0021  00B1               	movwf	?___ftmul+1
  7172  0022  3000               	movlw	0
  7173  0023  00B2               	movwf	?___ftmul+2
  7174  0024  0008               	return
  7175  0025                     l2349:	
  7176  0025  0833               	movf	___ftmul@f2,w
  7177  0026  00B6               	movwf	??___ftmul
  7178  0027  0834               	movf	___ftmul@f2+1,w
  7179  0028  00B7               	movwf	??___ftmul+1
  7180  0029  0835               	movf	___ftmul@f2+2,w
  7181  002A  00B8               	movwf	??___ftmul+2
  7182  002B  1003               	clrc
  7183  002C  0D37               	rlf	??___ftmul+1,w
  7184  002D  0D38               	rlf	??___ftmul+2,w
  7185  002E  00B9               	movwf	??___ftmul+3
  7186  002F  0839               	movf	??___ftmul+3,w
  7187  0030  00BF               	movwf	___ftmul@sign
  7188  0031  08BF               	movf	___ftmul@sign,f
  7189  0032  1D03               	skipz
  7190  0033  283B               	goto	l2355
  7191  0034  3000               	movlw	0
  7192  0035  00B0               	movwf	?___ftmul
  7193  0036  3000               	movlw	0
  7194  0037  00B1               	movwf	?___ftmul+1
  7195  0038  3000               	movlw	0
  7196  0039  00B2               	movwf	?___ftmul+2
  7197  003A  0008               	return
  7198  003B                     l2355:	
  7199  003B  083F               	movf	___ftmul@sign,w
  7200  003C  3E7B               	addlw	123
  7201  003D  00B6               	movwf	??___ftmul
  7202  003E  0836               	movf	??___ftmul,w
  7203  003F  07BA               	addwf	___ftmul@exp,f
  7204  0040  0830               	movf	___ftmul@f1,w
  7205  0041  00B6               	movwf	??___ftmul
  7206  0042  0831               	movf	___ftmul@f1+1,w
  7207  0043  00B7               	movwf	??___ftmul+1
  7208  0044  0832               	movf	___ftmul@f1+2,w
  7209  0045  00B8               	movwf	??___ftmul+2
  7210  0046  3010               	movlw	16
  7211  0047                     u2895:	
  7212  0047  1003               	clrc
  7213  0048  0CB8               	rrf	??___ftmul+2,f
  7214  0049  0CB7               	rrf	??___ftmul+1,f
  7215  004A  0CB6               	rrf	??___ftmul,f
  7216  004B  3EFF               	addlw	-1
  7217  004C  1D03               	skipz
  7218  004D  2847               	goto	u2895
  7219  004E  0836               	movf	??___ftmul,w
  7220  004F  00B9               	movwf	??___ftmul+3
  7221  0050  0839               	movf	??___ftmul+3,w
  7222  0051  00BF               	movwf	___ftmul@sign
  7223  0052  0833               	movf	___ftmul@f2,w
  7224  0053  00B6               	movwf	??___ftmul
  7225  0054  0834               	movf	___ftmul@f2+1,w
  7226  0055  00B7               	movwf	??___ftmul+1
  7227  0056  0835               	movf	___ftmul@f2+2,w
  7228  0057  00B8               	movwf	??___ftmul+2
  7229  0058  3010               	movlw	16
  7230  0059                     u2905:	
  7231  0059  1003               	clrc
  7232  005A  0CB8               	rrf	??___ftmul+2,f
  7233  005B  0CB7               	rrf	??___ftmul+1,f
  7234  005C  0CB6               	rrf	??___ftmul,f
  7235  005D  3EFF               	addlw	-1
  7236  005E  1D03               	skipz
  7237  005F  2859               	goto	u2905
  7238  0060  0836               	movf	??___ftmul,w
  7239  0061  00B9               	movwf	??___ftmul+3
  7240  0062  0839               	movf	??___ftmul+3,w
  7241  0063  06BF               	xorwf	___ftmul@sign,f
  7242  0064  3080               	movlw	128
  7243  0065  00B6               	movwf	??___ftmul
  7244  0066  0836               	movf	??___ftmul,w
  7245  0067  05BF               	andwf	___ftmul@sign,f
  7246  0068  17B1               	bsf	___ftmul@f1+1,7
  7247  0069  17B4               	bsf	___ftmul@f2+1,7
  7248  006A  30FF               	movlw	255
  7249  006B  05B3               	andwf	___ftmul@f2,f
  7250  006C  30FF               	movlw	255
  7251  006D  05B4               	andwf	___ftmul@f2+1,f
  7252  006E  3000               	movlw	0
  7253  006F  05B5               	andwf	___ftmul@f2+2,f
  7254  0070  3000               	movlw	0
  7255  0071  00BB               	movwf	___ftmul@f3_as_product
  7256  0072  3000               	movlw	0
  7257  0073  00BC               	movwf	___ftmul@f3_as_product+1
  7258  0074  3000               	movlw	0
  7259  0075  00BD               	movwf	___ftmul@f3_as_product+2
  7260  0076  3007               	movlw	7
  7261  0077  00B6               	movwf	??___ftmul
  7262  0078  0836               	movf	??___ftmul,w
  7263  0079  00BE               	movwf	___ftmul@cntr
  7264  007A                     l2367:	
  7265  007A  1C30               	btfss	___ftmul@f1,0
  7266  007B  288A               	goto	l2371
  7267  007C  0833               	movf	___ftmul@f2,w
  7268  007D  07BB               	addwf	___ftmul@f3_as_product,f
  7269  007E  0834               	movf	___ftmul@f2+1,w
  7270  007F  1103               	clrz
  7271  0080  1803               	skipnc
  7272  0081  0A34               	incf	___ftmul@f2+1,w
  7273  0082  1D03               	btfss	3,2
  7274  0083  07BC               	addwf	___ftmul@f3_as_product+1,f
  7275  0084  0835               	movf	___ftmul@f2+2,w
  7276  0085  1103               	clrz
  7277  0086  1803               	skipnc
  7278  0087  0A35               	incf	___ftmul@f2+2,w
  7279  0088  1D03               	btfss	3,2
  7280  0089  07BD               	addwf	___ftmul@f3_as_product+2,f
  7281  008A                     l2371:	
  7282  008A  3001               	movlw	1
  7283  008B                     u2935:	
  7284  008B  1003               	clrc
  7285  008C  0CB2               	rrf	___ftmul@f1+2,f
  7286  008D  0CB1               	rrf	___ftmul@f1+1,f
  7287  008E  0CB0               	rrf	___ftmul@f1,f
  7288  008F  3EFF               	addlw	-1
  7289  0090  1D03               	skipz
  7290  0091  288B               	goto	u2935
  7291  0092  3001               	movlw	1
  7292  0093                     u2945:	
  7293  0093  1003               	clrc
  7294  0094  0DB3               	rlf	___ftmul@f2,f
  7295  0095  0DB4               	rlf	___ftmul@f2+1,f
  7296  0096  0DB5               	rlf	___ftmul@f2+2,f
  7297  0097  3EFF               	addlw	-1
  7298  0098  1D03               	skipz
  7299  0099  2893               	goto	u2945
  7300  009A  3001               	movlw	1
  7301  009B  02BE               	subwf	___ftmul@cntr,f
  7302  009C  1D03               	btfss	3,2
  7303  009D  287A               	goto	l2367
  7304  009E  3009               	movlw	9
  7305  009F  00B6               	movwf	??___ftmul
  7306  00A0  0836               	movf	??___ftmul,w
  7307  00A1  00BE               	movwf	___ftmul@cntr
  7308  00A2                     l2379:	
  7309  00A2  1C30               	btfss	___ftmul@f1,0
  7310  00A3  28B2               	goto	l2383
  7311  00A4  0833               	movf	___ftmul@f2,w
  7312  00A5  07BB               	addwf	___ftmul@f3_as_product,f
  7313  00A6  0834               	movf	___ftmul@f2+1,w
  7314  00A7  1103               	clrz
  7315  00A8  1803               	skipnc
  7316  00A9  0A34               	incf	___ftmul@f2+1,w
  7317  00AA  1D03               	btfss	3,2
  7318  00AB  07BC               	addwf	___ftmul@f3_as_product+1,f
  7319  00AC  0835               	movf	___ftmul@f2+2,w
  7320  00AD  1103               	clrz
  7321  00AE  1803               	skipnc
  7322  00AF  0A35               	incf	___ftmul@f2+2,w
  7323  00B0  1D03               	btfss	3,2
  7324  00B1  07BD               	addwf	___ftmul@f3_as_product+2,f
  7325  00B2                     l2383:	
  7326  00B2  3001               	movlw	1
  7327  00B3                     u2985:	
  7328  00B3  1003               	clrc
  7329  00B4  0CB2               	rrf	___ftmul@f1+2,f
  7330  00B5  0CB1               	rrf	___ftmul@f1+1,f
  7331  00B6  0CB0               	rrf	___ftmul@f1,f
  7332  00B7  3EFF               	addlw	-1
  7333  00B8  1D03               	skipz
  7334  00B9  28B3               	goto	u2985
  7335  00BA  3001               	movlw	1
  7336  00BB                     u2995:	
  7337  00BB  1003               	clrc
  7338  00BC  0CBD               	rrf	___ftmul@f3_as_product+2,f
  7339  00BD  0CBC               	rrf	___ftmul@f3_as_product+1,f
  7340  00BE  0CBB               	rrf	___ftmul@f3_as_product,f
  7341  00BF  3EFF               	addlw	-1
  7342  00C0  1D03               	skipz
  7343  00C1  28BB               	goto	u2995
  7344  00C2  3001               	movlw	1
  7345  00C3  02BE               	subwf	___ftmul@cntr,f
  7346  00C4  1D03               	btfss	3,2
  7347  00C5  28A2               	goto	l2379
  7348  00C6  083B               	movf	___ftmul@f3_as_product,w
  7349  00C7  00F0               	movwf	___ftpack@arg
  7350  00C8  083C               	movf	___ftmul@f3_as_product+1,w
  7351  00C9  00F1               	movwf	___ftpack@arg+1
  7352  00CA  083D               	movf	___ftmul@f3_as_product+2,w
  7353  00CB  00F2               	movwf	___ftpack@arg+2
  7354  00CC  083A               	movf	___ftmul@exp,w
  7355  00CD  00B6               	movwf	??___ftmul
  7356  00CE  0836               	movf	??___ftmul,w
  7357  00CF  00F3               	movwf	___ftpack@exp
  7358  00D0  083F               	movf	___ftmul@sign,w
  7359  00D1  00B7               	movwf	??___ftmul+1
  7360  00D2  0837               	movf	??___ftmul+1,w
  7361  00D3  00F4               	movwf	___ftpack@sign
  7362  00D4  160A  158A  24DC   	fcall	___ftpack
  7363  00D7  0870               	movf	?___ftpack,w
  7364  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  7365  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  7366  00DA  00B0               	movwf	?___ftmul
  7367  00DB  0871               	movf	?___ftpack+1,w
  7368  00DC  00B1               	movwf	?___ftmul+1
  7369  00DD  0872               	movf	?___ftpack+2,w
  7370  00DE  00B2               	movwf	?___ftmul+2
  7371  00DF  0008               	return
  7372  00E0                     __end_of___ftmul:	
  7373                           
  7374                           	psect	text19
  7375  19D0                     __ptext19:	
  7376 ;; *************** function ___bmul *****************
  7377 ;; Defined at:
  7378 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  multiplier      1    wreg     unsigned char 
  7381 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  multiplier      1    6[BANK0 ] unsigned char 
  7384 ;;  product         1    5[BANK0 ] unsigned char 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      unsigned char 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7394 ;;      Params:         0       1       0       0       0
  7395 ;;      Locals:         0       2       0       0       0
  7396 ;;      Temps:          1       0       0       0       0
  7397 ;;      Totals:         1       3       0       0       0
  7398 ;;Total ram usage:        4 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_fround
  7404 ;;		_scale
  7405 ;;		_eval_poly
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function ___bmul
  7411  19D0                     ___bmul:	
  7412                           
  7413                           ;incstack = 0
  7414                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7415                           ;___bmul@multiplier stored from wreg
  7416  19D0  1283               	bcf	3,5	;RP0=0, select bank0
  7417  19D1  1303               	bcf	3,6	;RP1=0, select bank0
  7418  19D2  00A6               	movwf	___bmul@multiplier
  7419  19D3  01A5               	clrf	___bmul@product
  7420  19D4                     l2139:	
  7421  19D4  1C26               	btfss	___bmul@multiplier,0
  7422  19D5  29DA               	goto	l2143
  7423  19D6  0824               	movf	___bmul@multiplicand,w
  7424  19D7  00FC               	movwf	??___bmul
  7425  19D8  087C               	movf	??___bmul,w
  7426  19D9  07A5               	addwf	___bmul@product,f
  7427  19DA                     l2143:	
  7428  19DA  1003               	clrc
  7429  19DB  0DA4               	rlf	___bmul@multiplicand,f
  7430  19DC  1003               	clrc
  7431  19DD  0CA6               	rrf	___bmul@multiplier,f
  7432  19DE  08A6               	movf	___bmul@multiplier,f
  7433  19DF  1D03               	skipz
  7434  19E0  29D4               	goto	l2139
  7435  19E1  0825               	movf	___bmul@product,w
  7436  19E2  0008               	return
  7437  19E3                     __end_of___bmul:	
  7438                           
  7439                           	psect	text20
  7440  1B29                     __ptext20:	
  7441 ;; *************** function ___awmod *****************
  7442 ;; Defined at:
  7443 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  divisor         2    0[COMMON] int 
  7446 ;;  dividend        2    2[COMMON] int 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  sign            1    6[COMMON] unsigned char 
  7449 ;;  counter         1    5[COMMON] unsigned char 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  2    0[COMMON] int 
  7452 ;; Registers used:
  7453 ;;		wreg, status,2, status,0
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7459 ;;      Params:         4       0       0       0       0
  7460 ;;      Locals:         2       0       0       0       0
  7461 ;;      Temps:          1       0       0       0       0
  7462 ;;      Totals:         7       0       0       0       0
  7463 ;;Total ram usage:        7 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_fround
  7469 ;;		_scale
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           
  7474                           ;psect for function ___awmod
  7475  1B29                     ___awmod:	
  7476                           
  7477                           ;incstack = 0
  7478                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7479  1B29  01F6               	clrf	___awmod@sign
  7480  1B2A  1FF3               	btfss	___awmod@dividend+1,7
  7481  1B2B  2B33               	goto	l2221
  7482  1B2C  09F2               	comf	___awmod@dividend,f
  7483  1B2D  09F3               	comf	___awmod@dividend+1,f
  7484  1B2E  0AF2               	incf	___awmod@dividend,f
  7485  1B2F  1903               	skipnz
  7486  1B30  0AF3               	incf	___awmod@dividend+1,f
  7487  1B31  01F6               	clrf	___awmod@sign
  7488  1B32  0AF6               	incf	___awmod@sign,f
  7489  1B33                     l2221:	
  7490  1B33  1FF1               	btfss	___awmod@divisor+1,7
  7491  1B34  2B3A               	goto	l2225
  7492  1B35  09F0               	comf	___awmod@divisor,f
  7493  1B36  09F1               	comf	___awmod@divisor+1,f
  7494  1B37  0AF0               	incf	___awmod@divisor,f
  7495  1B38  1903               	skipnz
  7496  1B39  0AF1               	incf	___awmod@divisor+1,f
  7497  1B3A                     l2225:	
  7498  1B3A  0871               	movf	___awmod@divisor+1,w
  7499  1B3B  0470               	iorwf	___awmod@divisor,w
  7500  1B3C  1903               	skipnz
  7501  1B3D  2B67               	goto	l2243
  7502  1B3E  01F5               	clrf	___awmod@counter
  7503  1B3F  0AF5               	incf	___awmod@counter,f
  7504  1B40                     l2233:	
  7505  1B40  1BF1               	btfsc	___awmod@divisor+1,7
  7506  1B41  2B4E               	goto	l2235
  7507  1B42  3001               	movlw	1
  7508  1B43                     u2525:	
  7509  1B43  1003               	clrc
  7510  1B44  0DF0               	rlf	___awmod@divisor,f
  7511  1B45  0DF1               	rlf	___awmod@divisor+1,f
  7512  1B46  3EFF               	addlw	-1
  7513  1B47  1D03               	skipz
  7514  1B48  2B43               	goto	u2525
  7515  1B49  3001               	movlw	1
  7516  1B4A  00F4               	movwf	??___awmod
  7517  1B4B  0874               	movf	??___awmod,w
  7518  1B4C  07F5               	addwf	___awmod@counter,f
  7519  1B4D  2B40               	goto	l2233
  7520  1B4E                     l2235:	
  7521  1B4E  0871               	movf	___awmod@divisor+1,w
  7522  1B4F  0273               	subwf	___awmod@dividend+1,w
  7523  1B50  1D03               	skipz
  7524  1B51  2B54               	goto	u2545
  7525  1B52  0870               	movf	___awmod@divisor,w
  7526  1B53  0272               	subwf	___awmod@dividend,w
  7527  1B54                     u2545:	
  7528  1B54  1C03               	skipc
  7529  1B55  2B5C               	goto	l2239
  7530  1B56  0870               	movf	___awmod@divisor,w
  7531  1B57  02F2               	subwf	___awmod@dividend,f
  7532  1B58  0871               	movf	___awmod@divisor+1,w
  7533  1B59  1C03               	skipc
  7534  1B5A  03F3               	decf	___awmod@dividend+1,f
  7535  1B5B  02F3               	subwf	___awmod@dividend+1,f
  7536  1B5C                     l2239:	
  7537  1B5C  3001               	movlw	1
  7538  1B5D                     u2555:	
  7539  1B5D  1003               	clrc
  7540  1B5E  0CF1               	rrf	___awmod@divisor+1,f
  7541  1B5F  0CF0               	rrf	___awmod@divisor,f
  7542  1B60  3EFF               	addlw	-1
  7543  1B61  1D03               	skipz
  7544  1B62  2B5D               	goto	u2555
  7545  1B63  3001               	movlw	1
  7546  1B64  02F5               	subwf	___awmod@counter,f
  7547  1B65  1D03               	btfss	3,2
  7548  1B66  2B4E               	goto	l2235
  7549  1B67                     l2243:	
  7550  1B67  0876               	movf	___awmod@sign,w
  7551  1B68  1903               	btfsc	3,2
  7552  1B69  2B6F               	goto	l2247
  7553  1B6A  09F2               	comf	___awmod@dividend,f
  7554  1B6B  09F3               	comf	___awmod@dividend+1,f
  7555  1B6C  0AF2               	incf	___awmod@dividend,f
  7556  1B6D  1903               	skipnz
  7557  1B6E  0AF3               	incf	___awmod@dividend+1,f
  7558  1B6F                     l2247:	
  7559  1B6F  0873               	movf	___awmod@dividend+1,w
  7560  1B70  01F1               	clrf	?___awmod+1
  7561  1B71  07F1               	addwf	?___awmod+1,f
  7562  1B72  0872               	movf	___awmod@dividend,w
  7563  1B73  01F0               	clrf	?___awmod
  7564  1B74  07F0               	addwf	?___awmod,f
  7565  1B75  0008               	return
  7566  1B76                     __end_of___awmod:	
  7567                           
  7568                           	psect	text21
  7569  1C21                     __ptext21:	
  7570 ;; *************** function ___awdiv *****************
  7571 ;; Defined at:
  7572 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  divisor         2    7[COMMON] int 
  7575 ;;  dividend        2    9[COMMON] int 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;  quotient        2    2[BANK0 ] int 
  7578 ;;  sign            1    1[BANK0 ] unsigned char 
  7579 ;;  counter         1    0[BANK0 ] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  2    7[COMMON] int 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7589 ;;      Params:         4       0       0       0       0
  7590 ;;      Locals:         0       4       0       0       0
  7591 ;;      Temps:          1       0       0       0       0
  7592 ;;      Totals:         5       4       0       0       0
  7593 ;;Total ram usage:        9 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_fround
  7599 ;;		_scale
  7600 ;;		_sprintf
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           
  7605                           ;psect for function ___awdiv
  7606  1C21                     ___awdiv:	
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7610  1C21  1283               	bcf	3,5	;RP0=0, select bank0
  7611  1C22  1303               	bcf	3,6	;RP1=0, select bank0
  7612  1C23  01A1               	clrf	___awdiv@sign
  7613  1C24  1FF8               	btfss	___awdiv@divisor+1,7
  7614  1C25  2C2D               	goto	l2177
  7615  1C26  09F7               	comf	___awdiv@divisor,f
  7616  1C27  09F8               	comf	___awdiv@divisor+1,f
  7617  1C28  0AF7               	incf	___awdiv@divisor,f
  7618  1C29  1903               	skipnz
  7619  1C2A  0AF8               	incf	___awdiv@divisor+1,f
  7620  1C2B  01A1               	clrf	___awdiv@sign
  7621  1C2C  0AA1               	incf	___awdiv@sign,f
  7622  1C2D                     l2177:	
  7623  1C2D  1FFA               	btfss	___awdiv@dividend+1,7
  7624  1C2E  2C38               	goto	l2183
  7625  1C2F  09F9               	comf	___awdiv@dividend,f
  7626  1C30  09FA               	comf	___awdiv@dividend+1,f
  7627  1C31  0AF9               	incf	___awdiv@dividend,f
  7628  1C32  1903               	skipnz
  7629  1C33  0AFA               	incf	___awdiv@dividend+1,f
  7630  1C34  3001               	movlw	1
  7631  1C35  00FB               	movwf	??___awdiv
  7632  1C36  087B               	movf	??___awdiv,w
  7633  1C37  06A1               	xorwf	___awdiv@sign,f
  7634  1C38                     l2183:	
  7635  1C38  01A2               	clrf	___awdiv@quotient
  7636  1C39  01A3               	clrf	___awdiv@quotient+1
  7637  1C3A  0878               	movf	___awdiv@divisor+1,w
  7638  1C3B  0477               	iorwf	___awdiv@divisor,w
  7639  1C3C  1903               	skipnz
  7640  1C3D  2C6F               	goto	l2205
  7641  1C3E  01A0               	clrf	___awdiv@counter
  7642  1C3F  0AA0               	incf	___awdiv@counter,f
  7643  1C40                     l2193:	
  7644  1C40  1BF8               	btfsc	___awdiv@divisor+1,7
  7645  1C41  2C4E               	goto	l2195
  7646  1C42  3001               	movlw	1
  7647  1C43                     u2425:	
  7648  1C43  1003               	clrc
  7649  1C44  0DF7               	rlf	___awdiv@divisor,f
  7650  1C45  0DF8               	rlf	___awdiv@divisor+1,f
  7651  1C46  3EFF               	addlw	-1
  7652  1C47  1D03               	skipz
  7653  1C48  2C43               	goto	u2425
  7654  1C49  3001               	movlw	1
  7655  1C4A  00FB               	movwf	??___awdiv
  7656  1C4B  087B               	movf	??___awdiv,w
  7657  1C4C  07A0               	addwf	___awdiv@counter,f
  7658  1C4D  2C40               	goto	l2193
  7659  1C4E                     l2195:	
  7660  1C4E  3001               	movlw	1
  7661  1C4F                     u2445:	
  7662  1C4F  1003               	clrc
  7663  1C50  0DA2               	rlf	___awdiv@quotient,f
  7664  1C51  0DA3               	rlf	___awdiv@quotient+1,f
  7665  1C52  3EFF               	addlw	-1
  7666  1C53  1D03               	skipz
  7667  1C54  2C4F               	goto	u2445
  7668  1C55  0878               	movf	___awdiv@divisor+1,w
  7669  1C56  027A               	subwf	___awdiv@dividend+1,w
  7670  1C57  1D03               	skipz
  7671  1C58  2C5B               	goto	u2455
  7672  1C59  0877               	movf	___awdiv@divisor,w
  7673  1C5A  0279               	subwf	___awdiv@dividend,w
  7674  1C5B                     u2455:	
  7675  1C5B  1C03               	skipc
  7676  1C5C  2C64               	goto	l2201
  7677  1C5D  0877               	movf	___awdiv@divisor,w
  7678  1C5E  02F9               	subwf	___awdiv@dividend,f
  7679  1C5F  0878               	movf	___awdiv@divisor+1,w
  7680  1C60  1C03               	skipc
  7681  1C61  03FA               	decf	___awdiv@dividend+1,f
  7682  1C62  02FA               	subwf	___awdiv@dividend+1,f
  7683  1C63  1422               	bsf	___awdiv@quotient,0
  7684  1C64                     l2201:	
  7685  1C64  3001               	movlw	1
  7686  1C65                     u2465:	
  7687  1C65  1003               	clrc
  7688  1C66  0CF8               	rrf	___awdiv@divisor+1,f
  7689  1C67  0CF7               	rrf	___awdiv@divisor,f
  7690  1C68  3EFF               	addlw	-1
  7691  1C69  1D03               	skipz
  7692  1C6A  2C65               	goto	u2465
  7693  1C6B  3001               	movlw	1
  7694  1C6C  02A0               	subwf	___awdiv@counter,f
  7695  1C6D  1D03               	btfss	3,2
  7696  1C6E  2C4E               	goto	l2195
  7697  1C6F                     l2205:	
  7698  1C6F  0821               	movf	___awdiv@sign,w
  7699  1C70  1903               	btfsc	3,2
  7700  1C71  2C77               	goto	l2209
  7701  1C72  09A2               	comf	___awdiv@quotient,f
  7702  1C73  09A3               	comf	___awdiv@quotient+1,f
  7703  1C74  0AA2               	incf	___awdiv@quotient,f
  7704  1C75  1903               	skipnz
  7705  1C76  0AA3               	incf	___awdiv@quotient+1,f
  7706  1C77                     l2209:	
  7707  1C77  0823               	movf	___awdiv@quotient+1,w
  7708  1C78  01F8               	clrf	?___awdiv+1
  7709  1C79  07F8               	addwf	?___awdiv+1,f
  7710  1C7A  0822               	movf	___awdiv@quotient,w
  7711  1C7B  01F7               	clrf	?___awdiv
  7712  1C7C  07F7               	addwf	?___awdiv,f
  7713  1C7D  0008               	return
  7714  1C7E                     __end_of___awdiv:	
  7715                           
  7716                           	psect	text22
  7717  1194                     __ptext22:	
  7718 ;; *************** function __tdiv_to_l_ *****************
  7719 ;; Defined at:
  7720 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  f1              3    0[COMMON] float 
  7723 ;;  f2              3    3[COMMON] float 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  quot            4    0[BANK0 ] unsigned long 
  7726 ;;  exp1            1    5[BANK0 ] unsigned char 
  7727 ;;  cntr            1    4[BANK0 ] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  4    0[COMMON] unsigned long 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7737 ;;      Params:         6       0       0       0       0
  7738 ;;      Locals:         0       6       0       0       0
  7739 ;;      Temps:          4       0       0       0       0
  7740 ;;      Totals:        10       6       0       0       0
  7741 ;;Total ram usage:       16 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_sprintf
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function __tdiv_to_l_
  7752  1194                     __tdiv_to_l_:	
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7756  1194  0870               	movf	__tdiv_to_l_@f1,w
  7757  1195  00F6               	movwf	??__tdiv_to_l_
  7758  1196  0871               	movf	__tdiv_to_l_@f1+1,w
  7759  1197  00F7               	movwf	??__tdiv_to_l_+1
  7760  1198  0872               	movf	__tdiv_to_l_@f1+2,w
  7761  1199  00F8               	movwf	??__tdiv_to_l_+2
  7762  119A  1003               	clrc
  7763  119B  0D77               	rlf	??__tdiv_to_l_+1,w
  7764  119C  0D78               	rlf	??__tdiv_to_l_+2,w
  7765  119D  00F9               	movwf	??__tdiv_to_l_+3
  7766  119E  0879               	movf	??__tdiv_to_l_+3,w
  7767  119F  1283               	bcf	3,5	;RP0=0, select bank0
  7768  11A0  1303               	bcf	3,6	;RP1=0, select bank0
  7769  11A1  00A5               	movwf	__tdiv_to_l_@exp1
  7770  11A2  08A5               	movf	__tdiv_to_l_@exp1,f
  7771  11A3  1D03               	skipz
  7772  11A4  29AE               	goto	l2553
  7773  11A5  3000               	movlw	0
  7774  11A6  00F3               	movwf	?__tdiv_to_l_+3
  7775  11A7  3000               	movlw	0
  7776  11A8  00F2               	movwf	?__tdiv_to_l_+2
  7777  11A9  3000               	movlw	0
  7778  11AA  00F1               	movwf	?__tdiv_to_l_+1
  7779  11AB  3000               	movlw	0
  7780  11AC  00F0               	movwf	?__tdiv_to_l_
  7781  11AD  0008               	return
  7782  11AE                     l2553:	
  7783  11AE  0873               	movf	__tdiv_to_l_@f2,w
  7784  11AF  00F6               	movwf	??__tdiv_to_l_
  7785  11B0  0874               	movf	__tdiv_to_l_@f2+1,w
  7786  11B1  00F7               	movwf	??__tdiv_to_l_+1
  7787  11B2  0875               	movf	__tdiv_to_l_@f2+2,w
  7788  11B3  00F8               	movwf	??__tdiv_to_l_+2
  7789  11B4  1003               	clrc
  7790  11B5  0D77               	rlf	??__tdiv_to_l_+1,w
  7791  11B6  0D78               	rlf	??__tdiv_to_l_+2,w
  7792  11B7  00F9               	movwf	??__tdiv_to_l_+3
  7793  11B8  0879               	movf	??__tdiv_to_l_+3,w
  7794  11B9  00A4               	movwf	__tdiv_to_l_@cntr
  7795  11BA  08A4               	movf	__tdiv_to_l_@cntr,f
  7796  11BB  1D03               	skipz
  7797  11BC  29C6               	goto	l524
  7798  11BD  3000               	movlw	0
  7799  11BE  00F3               	movwf	?__tdiv_to_l_+3
  7800  11BF  3000               	movlw	0
  7801  11C0  00F2               	movwf	?__tdiv_to_l_+2
  7802  11C1  3000               	movlw	0
  7803  11C2  00F1               	movwf	?__tdiv_to_l_+1
  7804  11C3  3000               	movlw	0
  7805  11C4  00F0               	movwf	?__tdiv_to_l_
  7806  11C5  0008               	return
  7807  11C6                     l524:	
  7808  11C6  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7809  11C7  30FF               	movlw	255
  7810  11C8  05F0               	andwf	__tdiv_to_l_@f1,f
  7811  11C9  30FF               	movlw	255
  7812  11CA  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7813  11CB  3000               	movlw	0
  7814  11CC  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7815  11CD  17F4               	bsf	__tdiv_to_l_@f2+1,7
  7816  11CE  30FF               	movlw	255
  7817  11CF  05F3               	andwf	__tdiv_to_l_@f2,f
  7818  11D0  30FF               	movlw	255
  7819  11D1  05F4               	andwf	__tdiv_to_l_@f2+1,f
  7820  11D2  3000               	movlw	0
  7821  11D3  05F5               	andwf	__tdiv_to_l_@f2+2,f
  7822  11D4  3000               	movlw	0
  7823  11D5  00A3               	movwf	__tdiv_to_l_@quot+3
  7824  11D6  3000               	movlw	0
  7825  11D7  00A2               	movwf	__tdiv_to_l_@quot+2
  7826  11D8  3000               	movlw	0
  7827  11D9  00A1               	movwf	__tdiv_to_l_@quot+1
  7828  11DA  3000               	movlw	0
  7829  11DB  00A0               	movwf	__tdiv_to_l_@quot
  7830  11DC  307F               	movlw	127
  7831  11DD  02A5               	subwf	__tdiv_to_l_@exp1,f
  7832  11DE  3098               	movlw	152
  7833  11DF  0724               	addwf	__tdiv_to_l_@cntr,w
  7834  11E0  00F6               	movwf	??__tdiv_to_l_
  7835  11E1  0876               	movf	??__tdiv_to_l_,w
  7836  11E2  02A5               	subwf	__tdiv_to_l_@exp1,f
  7837  11E3  3018               	movlw	24
  7838  11E4  00F6               	movwf	??__tdiv_to_l_
  7839  11E5  0876               	movf	??__tdiv_to_l_,w
  7840  11E6  00A4               	movwf	__tdiv_to_l_@cntr
  7841  11E7                     l2567:	
  7842  11E7  3001               	movlw	1
  7843  11E8  00F6               	movwf	??__tdiv_to_l_
  7844  11E9                     u3265:	
  7845  11E9  1003               	clrc
  7846  11EA  0DA0               	rlf	__tdiv_to_l_@quot,f
  7847  11EB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7848  11EC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7849  11ED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7850  11EE  0BF6               	decfsz	??__tdiv_to_l_,f
  7851  11EF  29E9               	goto	u3265
  7852  11F0  0875               	movf	__tdiv_to_l_@f2+2,w
  7853  11F1  0272               	subwf	__tdiv_to_l_@f1+2,w
  7854  11F2  1D03               	skipz
  7855  11F3  29FA               	goto	u3275
  7856  11F4  0874               	movf	__tdiv_to_l_@f2+1,w
  7857  11F5  0271               	subwf	__tdiv_to_l_@f1+1,w
  7858  11F6  1D03               	skipz
  7859  11F7  29FA               	goto	u3275
  7860  11F8  0873               	movf	__tdiv_to_l_@f2,w
  7861  11F9  0270               	subwf	__tdiv_to_l_@f1,w
  7862  11FA                     u3275:	
  7863  11FA  1C03               	skipc
  7864  11FB  2A07               	goto	l2575
  7865  11FC  0873               	movf	__tdiv_to_l_@f2,w
  7866  11FD  02F0               	subwf	__tdiv_to_l_@f1,f
  7867  11FE  0874               	movf	__tdiv_to_l_@f2+1,w
  7868  11FF  1C03               	skipc
  7869  1200  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  7870  1201  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7871  1202  0875               	movf	__tdiv_to_l_@f2+2,w
  7872  1203  1C03               	skipc
  7873  1204  0A75               	incf	__tdiv_to_l_@f2+2,w
  7874  1205  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7875  1206  1420               	bsf	__tdiv_to_l_@quot,0
  7876  1207                     l2575:	
  7877  1207  3001               	movlw	1
  7878  1208                     u3285:	
  7879  1208  1003               	clrc
  7880  1209  0DF0               	rlf	__tdiv_to_l_@f1,f
  7881  120A  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7882  120B  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7883  120C  3EFF               	addlw	-1
  7884  120D  1D03               	skipz
  7885  120E  2A08               	goto	u3285
  7886  120F  3001               	movlw	1
  7887  1210  02A4               	subwf	__tdiv_to_l_@cntr,f
  7888  1211  1D03               	btfss	3,2
  7889  1212  29E7               	goto	l2567
  7890  1213  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7891  1214  2A33               	goto	l2587
  7892  1215  0825               	movf	__tdiv_to_l_@exp1,w
  7893  1216  3A80               	xorlw	128
  7894  1217  3E97               	addlw	151
  7895  1218  1803               	skipnc
  7896  1219  2A23               	goto	l2585
  7897  121A  3000               	movlw	0
  7898  121B  00F3               	movwf	?__tdiv_to_l_+3
  7899  121C  3000               	movlw	0
  7900  121D  00F2               	movwf	?__tdiv_to_l_+2
  7901  121E  3000               	movlw	0
  7902  121F  00F1               	movwf	?__tdiv_to_l_+1
  7903  1220  3000               	movlw	0
  7904  1221  00F0               	movwf	?__tdiv_to_l_
  7905  1222  0008               	return
  7906  1223                     l2585:	
  7907  1223  3001               	movlw	1
  7908  1224                     u3325:	
  7909  1224  1003               	clrc
  7910  1225  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7911  1226  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7912  1227  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7913  1228  0CA0               	rrf	__tdiv_to_l_@quot,f
  7914  1229  3EFF               	addlw	-1
  7915  122A  1D03               	skipz
  7916  122B  2A24               	goto	u3325
  7917  122C  3001               	movlw	1
  7918  122D  00F6               	movwf	??__tdiv_to_l_
  7919  122E  0876               	movf	??__tdiv_to_l_,w
  7920  122F  07A5               	addwf	__tdiv_to_l_@exp1,f
  7921  1230  1903               	btfsc	3,2
  7922  1231  2A4E               	goto	l2597
  7923  1232  2A23               	goto	l2585
  7924  1233                     l2587:	
  7925  1233  3018               	movlw	24
  7926  1234  0225               	subwf	__tdiv_to_l_@exp1,w
  7927  1235  1C03               	skipc
  7928  1236  2A4B               	goto	l2595
  7929  1237  3000               	movlw	0
  7930  1238  00F3               	movwf	?__tdiv_to_l_+3
  7931  1239  3000               	movlw	0
  7932  123A  00F2               	movwf	?__tdiv_to_l_+2
  7933  123B  3000               	movlw	0
  7934  123C  00F1               	movwf	?__tdiv_to_l_+1
  7935  123D  3000               	movlw	0
  7936  123E  00F0               	movwf	?__tdiv_to_l_
  7937  123F  0008               	return
  7938  1240                     l2593:	
  7939  1240  3001               	movlw	1
  7940  1241  00F6               	movwf	??__tdiv_to_l_
  7941  1242                     u3355:	
  7942  1242  1003               	clrc
  7943  1243  0DA0               	rlf	__tdiv_to_l_@quot,f
  7944  1244  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7945  1245  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7946  1246  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7947  1247  0BF6               	decfsz	??__tdiv_to_l_,f
  7948  1248  2A42               	goto	u3355
  7949  1249  3001               	movlw	1
  7950  124A  02A5               	subwf	__tdiv_to_l_@exp1,f
  7951  124B                     l2595:	
  7952  124B  08A5               	movf	__tdiv_to_l_@exp1,f
  7953  124C  1D03               	skipz
  7954  124D  2A40               	goto	l2593
  7955  124E                     l2597:	
  7956  124E  0823               	movf	__tdiv_to_l_@quot+3,w
  7957  124F  00F3               	movwf	?__tdiv_to_l_+3
  7958  1250  0822               	movf	__tdiv_to_l_@quot+2,w
  7959  1251  00F2               	movwf	?__tdiv_to_l_+2
  7960  1252  0821               	movf	__tdiv_to_l_@quot+1,w
  7961  1253  00F1               	movwf	?__tdiv_to_l_+1
  7962  1254  0820               	movf	__tdiv_to_l_@quot,w
  7963  1255  00F0               	movwf	?__tdiv_to_l_
  7964  1256  0008               	return
  7965  1257                     __end_of__tdiv_to_l_:	
  7966                           
  7967                           	psect	text23
  7968  13EE                     __ptext23:	
  7969 ;; *************** function __div_to_l_ *****************
  7970 ;; Defined at:
  7971 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  f1              3    0[COMMON] unsigned long 
  7974 ;;  f2              3    3[COMMON] unsigned long 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  quot            4    0[BANK0 ] unsigned long 
  7977 ;;  exp1            1    5[BANK0 ] unsigned char 
  7978 ;;  cntr            1    4[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  4    0[COMMON] unsigned long 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7988 ;;      Params:         6       0       0       0       0
  7989 ;;      Locals:         0       6       0       0       0
  7990 ;;      Temps:          8       0       0       0       0
  7991 ;;      Totals:        14       6       0       0       0
  7992 ;;Total ram usage:       20 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; This function calls:
  7995 ;;		Nothing
  7996 ;; This function is called by:
  7997 ;;		_sprintf
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function __div_to_l_
  8003  13EE                     __div_to_l_:	
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  8007  13EE  3070               	movlw	low __div_to_l_@f1
  8008  13EF  0084               	movwf	4
  8009  13F0  0800               	movf	0,w
  8010  13F1  00F6               	movwf	??__div_to_l_
  8011  13F2  0A84               	incf	4,f
  8012  13F3  0800               	movf	0,w
  8013  13F4  00F7               	movwf	??__div_to_l_+1
  8014  13F5  0A84               	incf	4,f
  8015  13F6  0800               	movf	0,w
  8016  13F7  00F8               	movwf	??__div_to_l_+2
  8017  13F8  0A84               	incf	4,f
  8018  13F9  0800               	movf	0,w
  8019  13FA  00F9               	movwf	??__div_to_l_+3
  8020  13FB  1003               	clrc
  8021  13FC  0D78               	rlf	??__div_to_l_+2,w
  8022  13FD  0D79               	rlf	??__div_to_l_+3,w
  8023  13FE  00FA               	movwf	??__div_to_l_+4
  8024  13FF  087A               	movf	??__div_to_l_+4,w
  8025  1400  1283               	bcf	3,5	;RP0=0, select bank0
  8026  1401  1303               	bcf	3,6	;RP1=0, select bank0
  8027  1402  00A5               	movwf	__div_to_l_@exp1
  8028  1403  08A5               	movf	__div_to_l_@exp1,f
  8029  1404  1D03               	skipz
  8030  1405  2C0F               	goto	l2607
  8031  1406  3000               	movlw	0
  8032  1407  00F3               	movwf	?__div_to_l_+3
  8033  1408  3000               	movlw	0
  8034  1409  00F2               	movwf	?__div_to_l_+2
  8035  140A  3000               	movlw	0
  8036  140B  00F1               	movwf	?__div_to_l_+1
  8037  140C  3000               	movlw	0
  8038  140D  00F0               	movwf	?__div_to_l_
  8039  140E  0008               	return
  8040  140F                     l2607:	
  8041  140F  3073               	movlw	low __div_to_l_@f2
  8042  1410  0084               	movwf	4
  8043  1411  0800               	movf	0,w
  8044  1412  00F6               	movwf	??__div_to_l_
  8045  1413  0A84               	incf	4,f
  8046  1414  0800               	movf	0,w
  8047  1415  00F7               	movwf	??__div_to_l_+1
  8048  1416  0A84               	incf	4,f
  8049  1417  0800               	movf	0,w
  8050  1418  00F8               	movwf	??__div_to_l_+2
  8051  1419  0A84               	incf	4,f
  8052  141A  0800               	movf	0,w
  8053  141B  00F9               	movwf	??__div_to_l_+3
  8054  141C  1003               	clrc
  8055  141D  0D78               	rlf	??__div_to_l_+2,w
  8056  141E  0D79               	rlf	??__div_to_l_+3,w
  8057  141F  00FA               	movwf	??__div_to_l_+4
  8058  1420  087A               	movf	??__div_to_l_+4,w
  8059  1421  00A4               	movwf	__div_to_l_@cntr
  8060  1422  08A4               	movf	__div_to_l_@cntr,f
  8061  1423  1D03               	skipz
  8062  1424  2C2E               	goto	l2613
  8063  1425  3000               	movlw	0
  8064  1426  00F3               	movwf	?__div_to_l_+3
  8065  1427  3000               	movlw	0
  8066  1428  00F2               	movwf	?__div_to_l_+2
  8067  1429  3000               	movlw	0
  8068  142A  00F1               	movwf	?__div_to_l_+1
  8069  142B  3000               	movlw	0
  8070  142C  00F0               	movwf	?__div_to_l_
  8071  142D  0008               	return
  8072  142E                     l2613:	
  8073  142E  3070               	movlw	low __div_to_l_@f1
  8074  142F  0084               	movwf	4
  8075  1430  3000               	movlw	0
  8076  1431  0480               	iorwf	0,f
  8077  1432  0A84               	incf	4,f
  8078  1433  3000               	movlw	0
  8079  1434  0480               	iorwf	0,f
  8080  1435  0A84               	incf	4,f
  8081  1436  3080               	movlw	128
  8082  1437  0480               	iorwf	0,f
  8083  1438  0A84               	incf	4,f
  8084  1439  3000               	movlw	0
  8085  143A  0480               	iorwf	0,f
  8086  143B  3070               	movlw	low __div_to_l_@f1
  8087  143C  0084               	movwf	4
  8088  143D  30FF               	movlw	255
  8089  143E  0580               	andwf	0,f
  8090  143F  0A84               	incf	4,f
  8091  1440  30FF               	movlw	255
  8092  1441  0580               	andwf	0,f
  8093  1442  0A84               	incf	4,f
  8094  1443  30FF               	movlw	255
  8095  1444  0580               	andwf	0,f
  8096  1445  0A84               	incf	4,f
  8097  1446  3000               	movlw	0
  8098  1447  0580               	andwf	0,f
  8099  1448  3073               	movlw	low __div_to_l_@f2
  8100  1449  0084               	movwf	4
  8101  144A  3000               	movlw	0
  8102  144B  0480               	iorwf	0,f
  8103  144C  0A84               	incf	4,f
  8104  144D  3000               	movlw	0
  8105  144E  0480               	iorwf	0,f
  8106  144F  0A84               	incf	4,f
  8107  1450  3080               	movlw	128
  8108  1451  0480               	iorwf	0,f
  8109  1452  0A84               	incf	4,f
  8110  1453  3000               	movlw	0
  8111  1454  0480               	iorwf	0,f
  8112  1455  3073               	movlw	low __div_to_l_@f2
  8113  1456  0084               	movwf	4
  8114  1457  30FF               	movlw	255
  8115  1458  0580               	andwf	0,f
  8116  1459  0A84               	incf	4,f
  8117  145A  30FF               	movlw	255
  8118  145B  0580               	andwf	0,f
  8119  145C  0A84               	incf	4,f
  8120  145D  30FF               	movlw	255
  8121  145E  0580               	andwf	0,f
  8122  145F  0A84               	incf	4,f
  8123  1460  3000               	movlw	0
  8124  1461  0580               	andwf	0,f
  8125  1462  3000               	movlw	0
  8126  1463  00A3               	movwf	__div_to_l_@quot+3
  8127  1464  3000               	movlw	0
  8128  1465  00A2               	movwf	__div_to_l_@quot+2
  8129  1466  3000               	movlw	0
  8130  1467  00A1               	movwf	__div_to_l_@quot+1
  8131  1468  3000               	movlw	0
  8132  1469  00A0               	movwf	__div_to_l_@quot
  8133  146A  307F               	movlw	127
  8134  146B  02A5               	subwf	__div_to_l_@exp1,f
  8135  146C  30A0               	movlw	160
  8136  146D  0724               	addwf	__div_to_l_@cntr,w
  8137  146E  00F6               	movwf	??__div_to_l_
  8138  146F  0876               	movf	??__div_to_l_,w
  8139  1470  02A5               	subwf	__div_to_l_@exp1,f
  8140  1471  3020               	movlw	32
  8141  1472  00F6               	movwf	??__div_to_l_
  8142  1473  0876               	movf	??__div_to_l_,w
  8143  1474  00A4               	movwf	__div_to_l_@cntr
  8144  1475                     l2623:	
  8145  1475  3001               	movlw	1
  8146  1476  00F6               	movwf	??__div_to_l_
  8147  1477                     u3395:	
  8148  1477  1003               	clrc
  8149  1478  0DA0               	rlf	__div_to_l_@quot,f
  8150  1479  0DA1               	rlf	__div_to_l_@quot+1,f
  8151  147A  0DA2               	rlf	__div_to_l_@quot+2,f
  8152  147B  0DA3               	rlf	__div_to_l_@quot+3,f
  8153  147C  0BF6               	decfsz	??__div_to_l_,f
  8154  147D  2C77               	goto	u3395
  8155  147E  3073               	movlw	low __div_to_l_@f2
  8156  147F  0084               	movwf	4
  8157  1480  0800               	movf	0,w
  8158  1481  00F6               	movwf	??__div_to_l_
  8159  1482  0A84               	incf	4,f
  8160  1483  0800               	movf	0,w
  8161  1484  00F7               	movwf	??__div_to_l_+1
  8162  1485  0A84               	incf	4,f
  8163  1486  0800               	movf	0,w
  8164  1487  00F8               	movwf	??__div_to_l_+2
  8165  1488  0A84               	incf	4,f
  8166  1489  0800               	movf	0,w
  8167  148A  00F9               	movwf	??__div_to_l_+3
  8168  148B  3070               	movlw	low __div_to_l_@f1
  8169  148C  0084               	movwf	4
  8170  148D  0800               	movf	0,w
  8171  148E  00FA               	movwf	??__div_to_l_+4
  8172  148F  0A84               	incf	4,f
  8173  1490  0800               	movf	0,w
  8174  1491  00FB               	movwf	??__div_to_l_+5
  8175  1492  0A84               	incf	4,f
  8176  1493  0800               	movf	0,w
  8177  1494  00FC               	movwf	??__div_to_l_+6
  8178  1495  0A84               	incf	4,f
  8179  1496  0800               	movf	0,w
  8180  1497  00FD               	movwf	??__div_to_l_+7
  8181  1498  0879               	movf	??__div_to_l_+3,w
  8182  1499  027D               	subwf	??__div_to_l_+7,w
  8183  149A  1D03               	skipz
  8184  149B  2CA6               	goto	u3405
  8185  149C  0878               	movf	??__div_to_l_+2,w
  8186  149D  027C               	subwf	??__div_to_l_+6,w
  8187  149E  1D03               	skipz
  8188  149F  2CA6               	goto	u3405
  8189  14A0  0877               	movf	??__div_to_l_+1,w
  8190  14A1  027B               	subwf	??__div_to_l_+5,w
  8191  14A2  1D03               	skipz
  8192  14A3  2CA6               	goto	u3405
  8193  14A4  0876               	movf	??__div_to_l_,w
  8194  14A5  027A               	subwf	??__div_to_l_+4,w
  8195  14A6                     u3405:	
  8196  14A6  1C03               	skipc
  8197  14A7  2CCB               	goto	l449
  8198  14A8  3073               	movlw	low __div_to_l_@f2
  8199  14A9  0084               	movwf	4
  8200  14AA  0800               	movf	0,w
  8201  14AB  00F6               	movwf	??__div_to_l_
  8202  14AC  0A84               	incf	4,f
  8203  14AD  0800               	movf	0,w
  8204  14AE  00F7               	movwf	??__div_to_l_+1
  8205  14AF  0A84               	incf	4,f
  8206  14B0  0800               	movf	0,w
  8207  14B1  00F8               	movwf	??__div_to_l_+2
  8208  14B2  0A84               	incf	4,f
  8209  14B3  0800               	movf	0,w
  8210  14B4  00F9               	movwf	??__div_to_l_+3
  8211  14B5  3070               	movlw	low __div_to_l_@f1
  8212  14B6  0084               	movwf	4
  8213  14B7  0876               	movf	??__div_to_l_,w
  8214  14B8  0280               	subwf	0,f
  8215  14B9  0A84               	incf	4,f
  8216  14BA  0877               	movf	??__div_to_l_+1,w
  8217  14BB  1C03               	skipc
  8218  14BC  0F77               	incfsz	??__div_to_l_+1,w
  8219  14BD  0280               	subwf	0,f
  8220  14BE  0A84               	incf	4,f
  8221  14BF  0878               	movf	??__div_to_l_+2,w
  8222  14C0  1C03               	skipc
  8223  14C1  0F78               	incfsz	??__div_to_l_+2,w
  8224  14C2  0280               	subwf	0,f
  8225  14C3  0A84               	incf	4,f
  8226  14C4  0879               	movf	??__div_to_l_+3,w
  8227  14C5  1C03               	skipc
  8228  14C6  0A79               	incf	??__div_to_l_+3,w
  8229  14C7  0280               	subwf	0,f
  8230  14C8  3003               	movlw	3
  8231  14C9  0284               	subwf	4,f
  8232  14CA  1420               	bsf	__div_to_l_@quot,0
  8233  14CB                     l449:	
  8234  14CB  3070               	movlw	low __div_to_l_@f1
  8235  14CC  0084               	movwf	4
  8236  14CD  1003               	clrc
  8237  14CE  0D80               	rlf	0,f
  8238  14CF  0A84               	incf	4,f
  8239  14D0  0D80               	rlf	0,f
  8240  14D1  0A84               	incf	4,f
  8241  14D2  0D80               	rlf	0,f
  8242  14D3  0A84               	incf	4,f
  8243  14D4  0D80               	rlf	0,f
  8244  14D5  0384               	decf	4,f
  8245  14D6  0384               	decf	4,f
  8246  14D7  0384               	decf	4,f
  8247  14D8  3001               	movlw	1
  8248  14D9  02A4               	subwf	__div_to_l_@cntr,f
  8249  14DA  1D03               	btfss	3,2
  8250  14DB  2C75               	goto	l2623
  8251  14DC  1FA5               	btfss	__div_to_l_@exp1,7
  8252  14DD  2CFC               	goto	l2641
  8253  14DE  0825               	movf	__div_to_l_@exp1,w
  8254  14DF  3A80               	xorlw	128
  8255  14E0  3E9F               	addlw	159
  8256  14E1  1803               	skipnc
  8257  14E2  2CEC               	goto	l2639
  8258  14E3  3000               	movlw	0
  8259  14E4  00F3               	movwf	?__div_to_l_+3
  8260  14E5  3000               	movlw	0
  8261  14E6  00F2               	movwf	?__div_to_l_+2
  8262  14E7  3000               	movlw	0
  8263  14E8  00F1               	movwf	?__div_to_l_+1
  8264  14E9  3000               	movlw	0
  8265  14EA  00F0               	movwf	?__div_to_l_
  8266  14EB  0008               	return
  8267  14EC                     l2639:	
  8268  14EC  3001               	movlw	1
  8269  14ED                     u3445:	
  8270  14ED  1003               	clrc
  8271  14EE  0CA3               	rrf	__div_to_l_@quot+3,f
  8272  14EF  0CA2               	rrf	__div_to_l_@quot+2,f
  8273  14F0  0CA1               	rrf	__div_to_l_@quot+1,f
  8274  14F1  0CA0               	rrf	__div_to_l_@quot,f
  8275  14F2  3EFF               	addlw	-1
  8276  14F3  1D03               	skipz
  8277  14F4  2CED               	goto	u3445
  8278  14F5  3001               	movlw	1
  8279  14F6  00F6               	movwf	??__div_to_l_
  8280  14F7  0876               	movf	??__div_to_l_,w
  8281  14F8  07A5               	addwf	__div_to_l_@exp1,f
  8282  14F9  1903               	btfsc	3,2
  8283  14FA  2D17               	goto	l2651
  8284  14FB  2CEC               	goto	l2639
  8285  14FC                     l2641:	
  8286  14FC  3020               	movlw	32
  8287  14FD  0225               	subwf	__div_to_l_@exp1,w
  8288  14FE  1C03               	skipc
  8289  14FF  2D14               	goto	l2649
  8290  1500  3000               	movlw	0
  8291  1501  00F3               	movwf	?__div_to_l_+3
  8292  1502  3000               	movlw	0
  8293  1503  00F2               	movwf	?__div_to_l_+2
  8294  1504  3000               	movlw	0
  8295  1505  00F1               	movwf	?__div_to_l_+1
  8296  1506  3000               	movlw	0
  8297  1507  00F0               	movwf	?__div_to_l_
  8298  1508  0008               	return
  8299  1509                     l2647:	
  8300  1509  3001               	movlw	1
  8301  150A  00F6               	movwf	??__div_to_l_
  8302  150B                     u3475:	
  8303  150B  1003               	clrc
  8304  150C  0DA0               	rlf	__div_to_l_@quot,f
  8305  150D  0DA1               	rlf	__div_to_l_@quot+1,f
  8306  150E  0DA2               	rlf	__div_to_l_@quot+2,f
  8307  150F  0DA3               	rlf	__div_to_l_@quot+3,f
  8308  1510  0BF6               	decfsz	??__div_to_l_,f
  8309  1511  2D0B               	goto	u3475
  8310  1512  3001               	movlw	1
  8311  1513  02A5               	subwf	__div_to_l_@exp1,f
  8312  1514                     l2649:	
  8313  1514  08A5               	movf	__div_to_l_@exp1,f
  8314  1515  1D03               	skipz
  8315  1516  2D09               	goto	l2647
  8316  1517                     l2651:	
  8317  1517  0823               	movf	__div_to_l_@quot+3,w
  8318  1518  00F3               	movwf	?__div_to_l_+3
  8319  1519  0822               	movf	__div_to_l_@quot+2,w
  8320  151A  00F2               	movwf	?__div_to_l_+2
  8321  151B  0821               	movf	__div_to_l_@quot+1,w
  8322  151C  00F1               	movwf	?__div_to_l_+1
  8323  151D  0820               	movf	__div_to_l_@quot,w
  8324  151E  00F0               	movwf	?__div_to_l_
  8325  151F  0008               	return
  8326  1520                     __end_of__div_to_l_:	
  8327                           
  8328                           	psect	text24
  8329  1A33                     __ptext24:	
  8330 ;; *************** function ___wmul *****************
  8331 ;; Defined at:
  8332 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  multiplier      2    0[COMMON] unsigned int 
  8335 ;;  multiplicand    2    2[COMMON] unsigned int 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  product         2    4[COMMON] unsigned int 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  2    0[COMMON] unsigned int 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8347 ;;      Params:         4       0       0       0       0
  8348 ;;      Locals:         2       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0
  8350 ;;      Totals:         6       0       0       0       0
  8351 ;;Total ram usage:        6 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function ___wmul
  8362  1A33                     ___wmul:	
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8366  1A33  01F4               	clrf	___wmul@product
  8367  1A34  01F5               	clrf	___wmul@product+1
  8368  1A35                     l2657:	
  8369  1A35  1C70               	btfss	___wmul@multiplier,0
  8370  1A36  2A3D               	goto	l291
  8371  1A37  0872               	movf	___wmul@multiplicand,w
  8372  1A38  07F4               	addwf	___wmul@product,f
  8373  1A39  1803               	skipnc
  8374  1A3A  0AF5               	incf	___wmul@product+1,f
  8375  1A3B  0873               	movf	___wmul@multiplicand+1,w
  8376  1A3C  07F5               	addwf	___wmul@product+1,f
  8377  1A3D                     l291:	
  8378  1A3D  3001               	movlw	1
  8379  1A3E                     u3505:	
  8380  1A3E  1003               	clrc
  8381  1A3F  0DF2               	rlf	___wmul@multiplicand,f
  8382  1A40  0DF3               	rlf	___wmul@multiplicand+1,f
  8383  1A41  3EFF               	addlw	-1
  8384  1A42  1D03               	skipz
  8385  1A43  2A3E               	goto	u3505
  8386  1A44  3001               	movlw	1
  8387  1A45                     u3515:	
  8388  1A45  1003               	clrc
  8389  1A46  0CF1               	rrf	___wmul@multiplier+1,f
  8390  1A47  0CF0               	rrf	___wmul@multiplier,f
  8391  1A48  3EFF               	addlw	-1
  8392  1A49  1D03               	skipz
  8393  1A4A  2A45               	goto	u3515
  8394  1A4B  0871               	movf	___wmul@multiplier+1,w
  8395  1A4C  0470               	iorwf	___wmul@multiplier,w
  8396  1A4D  1D03               	skipz
  8397  1A4E  2A35               	goto	l2657
  8398  1A4F  0875               	movf	___wmul@product+1,w
  8399  1A50  01F1               	clrf	?___wmul+1
  8400  1A51  07F1               	addwf	?___wmul+1,f
  8401  1A52  0874               	movf	___wmul@product,w
  8402  1A53  01F0               	clrf	?___wmul
  8403  1A54  07F0               	addwf	?___wmul,f
  8404  1A55  0008               	return
  8405  1A56                     __end_of___wmul:	
  8406                           
  8407                           	psect	text25
  8408  1A7C                     __ptext25:	
  8409 ;; *************** function ___lltoft *****************
  8410 ;; Defined at:
  8411 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  c               4    8[COMMON] unsigned long 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  exp             1   13[COMMON] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  3    8[COMMON] float 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8425 ;;      Params:         4       0       0       0       0
  8426 ;;      Locals:         1       0       0       0       0
  8427 ;;      Temps:          1       0       0       0       0
  8428 ;;      Totals:         6       0       0       0       0
  8429 ;;Total ram usage:        6 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    1
  8432 ;; This function calls:
  8433 ;;		___ftpack
  8434 ;; This function is called by:
  8435 ;;		_sprintf
  8436 ;;		_pow
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function ___lltoft
  8442  1A7C                     ___lltoft:	
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  8446  1A7C  308E               	movlw	142
  8447  1A7D  00FC               	movwf	??___lltoft
  8448  1A7E  087C               	movf	??___lltoft,w
  8449  1A7F  00FD               	movwf	___lltoft@exp
  8450  1A80                     l2775:	
  8451  1A80  30FF               	movlw	255
  8452  1A81  057B               	andwf	___lltoft@c+3,w
  8453  1A82  1903               	btfsc	3,2
  8454  1A83  2A92               	goto	l2777
  8455  1A84  3001               	movlw	1
  8456  1A85                     u3755:	
  8457  1A85  1003               	clrc
  8458  1A86  0CFB               	rrf	___lltoft@c+3,f
  8459  1A87  0CFA               	rrf	___lltoft@c+2,f
  8460  1A88  0CF9               	rrf	___lltoft@c+1,f
  8461  1A89  0CF8               	rrf	___lltoft@c,f
  8462  1A8A  3EFF               	addlw	-1
  8463  1A8B  1D03               	skipz
  8464  1A8C  2A85               	goto	u3755
  8465  1A8D  3001               	movlw	1
  8466  1A8E  00FC               	movwf	??___lltoft
  8467  1A8F  087C               	movf	??___lltoft,w
  8468  1A90  07FD               	addwf	___lltoft@exp,f
  8469  1A91  2A80               	goto	l2775
  8470  1A92                     l2777:	
  8471  1A92  0878               	movf	___lltoft@c,w
  8472  1A93  00F0               	movwf	___ftpack@arg
  8473  1A94  0879               	movf	___lltoft@c+1,w
  8474  1A95  00F1               	movwf	___ftpack@arg+1
  8475  1A96  087A               	movf	___lltoft@c+2,w
  8476  1A97  00F2               	movwf	___ftpack@arg+2
  8477  1A98  087D               	movf	___lltoft@exp,w
  8478  1A99  00FC               	movwf	??___lltoft
  8479  1A9A  087C               	movf	??___lltoft,w
  8480  1A9B  00F3               	movwf	___ftpack@exp
  8481  1A9C  01F4               	clrf	___ftpack@sign
  8482  1A9D  160A  158A  24DC   	fcall	___ftpack
  8483  1AA0  0870               	movf	?___ftpack,w
  8484  1AA1  00F8               	movwf	?___lltoft
  8485  1AA2  0871               	movf	?___ftpack+1,w
  8486  1AA3  00F9               	movwf	?___lltoft+1
  8487  1AA4  0872               	movf	?___ftpack+2,w
  8488  1AA5  00FA               	movwf	?___lltoft+2
  8489  1AA6  0008               	return
  8490  1AA7                     __end_of___lltoft:	
  8491                           
  8492                           	psect	text26
  8493  1B76                     __ptext26:	
  8494 ;; *************** function ___llmod *****************
  8495 ;; Defined at:
  8496 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  divisor         4    0[BANK0 ] unsigned long 
  8499 ;;  dividend        4    4[BANK0 ] unsigned long 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  counter         1    9[BANK0 ] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  4    0[BANK0 ] unsigned long 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8511 ;;      Params:         0       8       0       0       0
  8512 ;;      Locals:         0       1       0       0       0
  8513 ;;      Temps:          0       1       0       0       0
  8514 ;;      Totals:         0      10       0       0       0
  8515 ;;Total ram usage:       10 bytes
  8516 ;; Hardware stack levels used:    1
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_sprintf
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           
  8525                           ;psect for function ___llmod
  8526  1B76                     ___llmod:	
  8527                           
  8528                           ;incstack = 0
  8529                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8530  1B76  1283               	bcf	3,5	;RP0=0, select bank0
  8531  1B77  1303               	bcf	3,6	;RP1=0, select bank0
  8532  1B78  0823               	movf	___llmod@divisor+3,w
  8533  1B79  0422               	iorwf	___llmod@divisor+2,w
  8534  1B7A  0421               	iorwf	___llmod@divisor+1,w
  8535  1B7B  0420               	iorwf	___llmod@divisor,w
  8536  1B7C  1903               	skipnz
  8537  1B7D  2BBB               	goto	l2767
  8538  1B7E  01A9               	clrf	___llmod@counter
  8539  1B7F  0AA9               	incf	___llmod@counter,f
  8540  1B80                     l2757:	
  8541  1B80  1BA3               	btfsc	___llmod@divisor+3,7
  8542  1B81  2B90               	goto	l2759
  8543  1B82  3001               	movlw	1
  8544  1B83  00A8               	movwf	??___llmod
  8545  1B84                     u3705:	
  8546  1B84  1003               	clrc
  8547  1B85  0DA0               	rlf	___llmod@divisor,f
  8548  1B86  0DA1               	rlf	___llmod@divisor+1,f
  8549  1B87  0DA2               	rlf	___llmod@divisor+2,f
  8550  1B88  0DA3               	rlf	___llmod@divisor+3,f
  8551  1B89  0BA8               	decfsz	??___llmod,f
  8552  1B8A  2B84               	goto	u3705
  8553  1B8B  3001               	movlw	1
  8554  1B8C  00A8               	movwf	??___llmod
  8555  1B8D  0828               	movf	??___llmod,w
  8556  1B8E  07A9               	addwf	___llmod@counter,f
  8557  1B8F  2B80               	goto	l2757
  8558  1B90                     l2759:	
  8559  1B90  0823               	movf	___llmod@divisor+3,w
  8560  1B91  0227               	subwf	___llmod@dividend+3,w
  8561  1B92  1D03               	skipz
  8562  1B93  2B9E               	goto	u3725
  8563  1B94  0822               	movf	___llmod@divisor+2,w
  8564  1B95  0226               	subwf	___llmod@dividend+2,w
  8565  1B96  1D03               	skipz
  8566  1B97  2B9E               	goto	u3725
  8567  1B98  0821               	movf	___llmod@divisor+1,w
  8568  1B99  0225               	subwf	___llmod@dividend+1,w
  8569  1B9A  1D03               	skipz
  8570  1B9B  2B9E               	goto	u3725
  8571  1B9C  0820               	movf	___llmod@divisor,w
  8572  1B9D  0224               	subwf	___llmod@dividend,w
  8573  1B9E                     u3725:	
  8574  1B9E  1C03               	skipc
  8575  1B9F  2BAE               	goto	l2763
  8576  1BA0  0820               	movf	___llmod@divisor,w
  8577  1BA1  02A4               	subwf	___llmod@dividend,f
  8578  1BA2  0821               	movf	___llmod@divisor+1,w
  8579  1BA3  1C03               	skipc
  8580  1BA4  0F21               	incfsz	___llmod@divisor+1,w
  8581  1BA5  02A5               	subwf	___llmod@dividend+1,f
  8582  1BA6  0822               	movf	___llmod@divisor+2,w
  8583  1BA7  1C03               	skipc
  8584  1BA8  0F22               	incfsz	___llmod@divisor+2,w
  8585  1BA9  02A6               	subwf	___llmod@dividend+2,f
  8586  1BAA  0823               	movf	___llmod@divisor+3,w
  8587  1BAB  1C03               	skipc
  8588  1BAC  0F23               	incfsz	___llmod@divisor+3,w
  8589  1BAD  02A7               	subwf	___llmod@dividend+3,f
  8590  1BAE                     l2763:	
  8591  1BAE  3001               	movlw	1
  8592  1BAF                     u3735:	
  8593  1BAF  1003               	clrc
  8594  1BB0  0CA3               	rrf	___llmod@divisor+3,f
  8595  1BB1  0CA2               	rrf	___llmod@divisor+2,f
  8596  1BB2  0CA1               	rrf	___llmod@divisor+1,f
  8597  1BB3  0CA0               	rrf	___llmod@divisor,f
  8598  1BB4  3EFF               	addlw	-1
  8599  1BB5  1D03               	skipz
  8600  1BB6  2BAF               	goto	u3735
  8601  1BB7  3001               	movlw	1
  8602  1BB8  02A9               	subwf	___llmod@counter,f
  8603  1BB9  1D03               	btfss	3,2
  8604  1BBA  2B90               	goto	l2759
  8605  1BBB                     l2767:	
  8606  1BBB  0827               	movf	___llmod@dividend+3,w
  8607  1BBC  00A3               	movwf	?___llmod+3
  8608  1BBD  0826               	movf	___llmod@dividend+2,w
  8609  1BBE  00A2               	movwf	?___llmod+2
  8610  1BBF  0825               	movf	___llmod@dividend+1,w
  8611  1BC0  00A1               	movwf	?___llmod+1
  8612  1BC1  0824               	movf	___llmod@dividend,w
  8613  1BC2  00A0               	movwf	?___llmod
  8614  1BC3  0008               	return
  8615  1BC4                     __end_of___llmod:	
  8616                           
  8617                           	psect	text27
  8618  1C7E                     __ptext27:	
  8619 ;; *************** function ___lldiv *****************
  8620 ;; Defined at:
  8621 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  divisor         4    0[COMMON] unsigned long 
  8624 ;;  dividend        4    4[COMMON] unsigned long 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  quotient        4    9[COMMON] unsigned long 
  8627 ;;  counter         1   13[COMMON] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  4    0[COMMON] unsigned long 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8637 ;;      Params:         8       0       0       0       0
  8638 ;;      Locals:         5       0       0       0       0
  8639 ;;      Temps:          1       0       0       0       0
  8640 ;;      Totals:        14       0       0       0       0
  8641 ;;Total ram usage:       14 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_sprintf
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           
  8651                           ;psect for function ___lldiv
  8652  1C7E                     ___lldiv:	
  8653                           
  8654                           ;incstack = 0
  8655                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8656  1C7E  3000               	movlw	0
  8657  1C7F  00FC               	movwf	___lldiv@quotient+3
  8658  1C80  3000               	movlw	0
  8659  1C81  00FB               	movwf	___lldiv@quotient+2
  8660  1C82  3000               	movlw	0
  8661  1C83  00FA               	movwf	___lldiv@quotient+1
  8662  1C84  3000               	movlw	0
  8663  1C85  00F9               	movwf	___lldiv@quotient
  8664  1C86  0873               	movf	___lldiv@divisor+3,w
  8665  1C87  0472               	iorwf	___lldiv@divisor+2,w
  8666  1C88  0471               	iorwf	___lldiv@divisor+1,w
  8667  1C89  0470               	iorwf	___lldiv@divisor,w
  8668  1C8A  1903               	skipnz
  8669  1C8B  2CD3               	goto	l2747
  8670  1C8C  01FD               	clrf	___lldiv@counter
  8671  1C8D  0AFD               	incf	___lldiv@counter,f
  8672  1C8E                     l2733:	
  8673  1C8E  1BF3               	btfsc	___lldiv@divisor+3,7
  8674  1C8F  2C9E               	goto	l2735
  8675  1C90  3001               	movlw	1
  8676  1C91  00F8               	movwf	??___lldiv
  8677  1C92                     u3635:	
  8678  1C92  1003               	clrc
  8679  1C93  0DF0               	rlf	___lldiv@divisor,f
  8680  1C94  0DF1               	rlf	___lldiv@divisor+1,f
  8681  1C95  0DF2               	rlf	___lldiv@divisor+2,f
  8682  1C96  0DF3               	rlf	___lldiv@divisor+3,f
  8683  1C97  0BF8               	decfsz	??___lldiv,f
  8684  1C98  2C92               	goto	u3635
  8685  1C99  3001               	movlw	1
  8686  1C9A  00F8               	movwf	??___lldiv
  8687  1C9B  0878               	movf	??___lldiv,w
  8688  1C9C  07FD               	addwf	___lldiv@counter,f
  8689  1C9D  2C8E               	goto	l2733
  8690  1C9E                     l2735:	
  8691  1C9E  3001               	movlw	1
  8692  1C9F  00F8               	movwf	??___lldiv
  8693  1CA0                     u3655:	
  8694  1CA0  1003               	clrc
  8695  1CA1  0DF9               	rlf	___lldiv@quotient,f
  8696  1CA2  0DFA               	rlf	___lldiv@quotient+1,f
  8697  1CA3  0DFB               	rlf	___lldiv@quotient+2,f
  8698  1CA4  0DFC               	rlf	___lldiv@quotient+3,f
  8699  1CA5  0BF8               	decfsz	??___lldiv,f
  8700  1CA6  2CA0               	goto	u3655
  8701  1CA7  0873               	movf	___lldiv@divisor+3,w
  8702  1CA8  0277               	subwf	___lldiv@dividend+3,w
  8703  1CA9  1D03               	skipz
  8704  1CAA  2CB5               	goto	u3665
  8705  1CAB  0872               	movf	___lldiv@divisor+2,w
  8706  1CAC  0276               	subwf	___lldiv@dividend+2,w
  8707  1CAD  1D03               	skipz
  8708  1CAE  2CB5               	goto	u3665
  8709  1CAF  0871               	movf	___lldiv@divisor+1,w
  8710  1CB0  0275               	subwf	___lldiv@dividend+1,w
  8711  1CB1  1D03               	skipz
  8712  1CB2  2CB5               	goto	u3665
  8713  1CB3  0870               	movf	___lldiv@divisor,w
  8714  1CB4  0274               	subwf	___lldiv@dividend,w
  8715  1CB5                     u3665:	
  8716  1CB5  1C03               	skipc
  8717  1CB6  2CC6               	goto	l2743
  8718  1CB7  0870               	movf	___lldiv@divisor,w
  8719  1CB8  02F4               	subwf	___lldiv@dividend,f
  8720  1CB9  0871               	movf	___lldiv@divisor+1,w
  8721  1CBA  1C03               	skipc
  8722  1CBB  0F71               	incfsz	___lldiv@divisor+1,w
  8723  1CBC  02F5               	subwf	___lldiv@dividend+1,f
  8724  1CBD  0872               	movf	___lldiv@divisor+2,w
  8725  1CBE  1C03               	skipc
  8726  1CBF  0F72               	incfsz	___lldiv@divisor+2,w
  8727  1CC0  02F6               	subwf	___lldiv@dividend+2,f
  8728  1CC1  0873               	movf	___lldiv@divisor+3,w
  8729  1CC2  1C03               	skipc
  8730  1CC3  0F73               	incfsz	___lldiv@divisor+3,w
  8731  1CC4  02F7               	subwf	___lldiv@dividend+3,f
  8732  1CC5  1479               	bsf	___lldiv@quotient,0
  8733  1CC6                     l2743:	
  8734  1CC6  3001               	movlw	1
  8735  1CC7                     u3675:	
  8736  1CC7  1003               	clrc
  8737  1CC8  0CF3               	rrf	___lldiv@divisor+3,f
  8738  1CC9  0CF2               	rrf	___lldiv@divisor+2,f
  8739  1CCA  0CF1               	rrf	___lldiv@divisor+1,f
  8740  1CCB  0CF0               	rrf	___lldiv@divisor,f
  8741  1CCC  3EFF               	addlw	-1
  8742  1CCD  1D03               	skipz
  8743  1CCE  2CC7               	goto	u3675
  8744  1CCF  3001               	movlw	1
  8745  1CD0  02FD               	subwf	___lldiv@counter,f
  8746  1CD1  1D03               	btfss	3,2
  8747  1CD2  2C9E               	goto	l2735
  8748  1CD3                     l2747:	
  8749  1CD3  087C               	movf	___lldiv@quotient+3,w
  8750  1CD4  00F3               	movwf	?___lldiv+3
  8751  1CD5  087B               	movf	___lldiv@quotient+2,w
  8752  1CD6  00F2               	movwf	?___lldiv+2
  8753  1CD7  087A               	movf	___lldiv@quotient+1,w
  8754  1CD8  00F1               	movwf	?___lldiv+1
  8755  1CD9  0879               	movf	___lldiv@quotient,w
  8756  1CDA  00F0               	movwf	?___lldiv
  8757  1CDB  0008               	return
  8758  1CDC                     __end_of___lldiv:	
  8759                           
  8760                           	psect	text28
  8761  1E40                     __ptext28:	
  8762 ;; *************** function ___fttol *****************
  8763 ;; Defined at:
  8764 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  f1              3   41[BANK0 ] float 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  lval            4   50[BANK0 ] unsigned long 
  8769 ;;  exp1            1   54[BANK0 ] unsigned char 
  8770 ;;  sign1           1   49[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  4   41[BANK0 ] long 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8780 ;;      Params:         0       4       0       0       0
  8781 ;;      Locals:         0       6       0       0       0
  8782 ;;      Temps:          0       4       0       0       0
  8783 ;;      Totals:         0      14       0       0       0
  8784 ;;Total ram usage:       14 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_main
  8790 ;;		_sprintf
  8791 ;;		_pow
  8792 ;;		_exp
  8793 ;;		_floor
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           
  8798                           ;psect for function ___fttol
  8799  1E40                     ___fttol:	
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8803  1E40  1283               	bcf	3,5	;RP0=0, select bank0
  8804  1E41  1303               	bcf	3,6	;RP1=0, select bank0
  8805  1E42  0849               	movf	___fttol@f1,w
  8806  1E43  00CD               	movwf	??___fttol
  8807  1E44  084A               	movf	___fttol@f1+1,w
  8808  1E45  00CE               	movwf	??___fttol+1
  8809  1E46  084B               	movf	___fttol@f1+2,w
  8810  1E47  00CF               	movwf	??___fttol+2
  8811  1E48  1003               	clrc
  8812  1E49  0D4E               	rlf	??___fttol+1,w
  8813  1E4A  0D4F               	rlf	??___fttol+2,w
  8814  1E4B  00D0               	movwf	??___fttol+3
  8815  1E4C  0850               	movf	??___fttol+3,w
  8816  1E4D  00D6               	movwf	___fttol@exp1
  8817  1E4E  08D6               	movf	___fttol@exp1,f
  8818  1E4F  1D03               	skipz
  8819  1E50  2E5A               	goto	l2407
  8820  1E51  3000               	movlw	0
  8821  1E52  00CC               	movwf	?___fttol+3
  8822  1E53  3000               	movlw	0
  8823  1E54  00CB               	movwf	?___fttol+2
  8824  1E55  3000               	movlw	0
  8825  1E56  00CA               	movwf	?___fttol+1
  8826  1E57  3000               	movlw	0
  8827  1E58  00C9               	movwf	?___fttol
  8828  1E59  0008               	return
  8829  1E5A                     l2407:	
  8830  1E5A  0849               	movf	___fttol@f1,w
  8831  1E5B  00CD               	movwf	??___fttol
  8832  1E5C  084A               	movf	___fttol@f1+1,w
  8833  1E5D  00CE               	movwf	??___fttol+1
  8834  1E5E  084B               	movf	___fttol@f1+2,w
  8835  1E5F  00CF               	movwf	??___fttol+2
  8836  1E60  3017               	movlw	23
  8837  1E61                     u3035:	
  8838  1E61  1003               	clrc
  8839  1E62  0CCF               	rrf	??___fttol+2,f
  8840  1E63  0CCE               	rrf	??___fttol+1,f
  8841  1E64  0CCD               	rrf	??___fttol,f
  8842  1E65  3EFF               	addlw	-1
  8843  1E66  1D03               	skipz
  8844  1E67  2E61               	goto	u3035
  8845  1E68  084D               	movf	??___fttol,w
  8846  1E69  00D0               	movwf	??___fttol+3
  8847  1E6A  0850               	movf	??___fttol+3,w
  8848  1E6B  00D1               	movwf	___fttol@sign1
  8849  1E6C  17CA               	bsf	___fttol@f1+1,7
  8850  1E6D  30FF               	movlw	255
  8851  1E6E  05C9               	andwf	___fttol@f1,f
  8852  1E6F  30FF               	movlw	255
  8853  1E70  05CA               	andwf	___fttol@f1+1,f
  8854  1E71  3000               	movlw	0
  8855  1E72  05CB               	andwf	___fttol@f1+2,f
  8856  1E73  0849               	movf	___fttol@f1,w
  8857  1E74  00D2               	movwf	___fttol@lval
  8858  1E75  084A               	movf	___fttol@f1+1,w
  8859  1E76  00D3               	movwf	___fttol@lval+1
  8860  1E77  084B               	movf	___fttol@f1+2,w
  8861  1E78  00D4               	movwf	___fttol@lval+2
  8862  1E79  01D5               	clrf	___fttol@lval+3
  8863  1E7A  308E               	movlw	142
  8864  1E7B  02D6               	subwf	___fttol@exp1,f
  8865  1E7C  1FD6               	btfss	___fttol@exp1,7
  8866  1E7D  2E9C               	goto	l2427
  8867  1E7E  0856               	movf	___fttol@exp1,w
  8868  1E7F  3A80               	xorlw	128
  8869  1E80  3E8F               	addlw	143
  8870  1E81  1803               	skipnc
  8871  1E82  2E8C               	goto	l2425
  8872  1E83  3000               	movlw	0
  8873  1E84  00CC               	movwf	?___fttol+3
  8874  1E85  3000               	movlw	0
  8875  1E86  00CB               	movwf	?___fttol+2
  8876  1E87  3000               	movlw	0
  8877  1E88  00CA               	movwf	?___fttol+1
  8878  1E89  3000               	movlw	0
  8879  1E8A  00C9               	movwf	?___fttol
  8880  1E8B  0008               	return
  8881  1E8C                     l2425:	
  8882  1E8C  3001               	movlw	1
  8883  1E8D                     u3065:	
  8884  1E8D  1003               	clrc
  8885  1E8E  0CD5               	rrf	___fttol@lval+3,f
  8886  1E8F  0CD4               	rrf	___fttol@lval+2,f
  8887  1E90  0CD3               	rrf	___fttol@lval+1,f
  8888  1E91  0CD2               	rrf	___fttol@lval,f
  8889  1E92  3EFF               	addlw	-1
  8890  1E93  1D03               	skipz
  8891  1E94  2E8D               	goto	u3065
  8892  1E95  3001               	movlw	1
  8893  1E96  00CD               	movwf	??___fttol
  8894  1E97  084D               	movf	??___fttol,w
  8895  1E98  07D6               	addwf	___fttol@exp1,f
  8896  1E99  1903               	btfsc	3,2
  8897  1E9A  2EB7               	goto	l2437
  8898  1E9B  2E8C               	goto	l2425
  8899  1E9C                     l2427:	
  8900  1E9C  3018               	movlw	24
  8901  1E9D  0256               	subwf	___fttol@exp1,w
  8902  1E9E  1C03               	skipc
  8903  1E9F  2EB4               	goto	l2435
  8904  1EA0  3000               	movlw	0
  8905  1EA1  00CC               	movwf	?___fttol+3
  8906  1EA2  3000               	movlw	0
  8907  1EA3  00CB               	movwf	?___fttol+2
  8908  1EA4  3000               	movlw	0
  8909  1EA5  00CA               	movwf	?___fttol+1
  8910  1EA6  3000               	movlw	0
  8911  1EA7  00C9               	movwf	?___fttol
  8912  1EA8  0008               	return
  8913  1EA9                     l2433:	
  8914  1EA9  3001               	movlw	1
  8915  1EAA  00CD               	movwf	??___fttol
  8916  1EAB                     u3095:	
  8917  1EAB  1003               	clrc
  8918  1EAC  0DD2               	rlf	___fttol@lval,f
  8919  1EAD  0DD3               	rlf	___fttol@lval+1,f
  8920  1EAE  0DD4               	rlf	___fttol@lval+2,f
  8921  1EAF  0DD5               	rlf	___fttol@lval+3,f
  8922  1EB0  0BCD               	decfsz	??___fttol,f
  8923  1EB1  2EAB               	goto	u3095
  8924  1EB2  3001               	movlw	1
  8925  1EB3  02D6               	subwf	___fttol@exp1,f
  8926  1EB4                     l2435:	
  8927  1EB4  08D6               	movf	___fttol@exp1,f
  8928  1EB5  1D03               	skipz
  8929  1EB6  2EA9               	goto	l2433
  8930  1EB7                     l2437:	
  8931  1EB7  0851               	movf	___fttol@sign1,w
  8932  1EB8  1903               	btfsc	3,2
  8933  1EB9  2EC5               	goto	l2441
  8934  1EBA  09D2               	comf	___fttol@lval,f
  8935  1EBB  09D3               	comf	___fttol@lval+1,f
  8936  1EBC  09D4               	comf	___fttol@lval+2,f
  8937  1EBD  09D5               	comf	___fttol@lval+3,f
  8938  1EBE  0AD2               	incf	___fttol@lval,f
  8939  1EBF  1903               	skipnz
  8940  1EC0  0AD3               	incf	___fttol@lval+1,f
  8941  1EC1  1903               	skipnz
  8942  1EC2  0AD4               	incf	___fttol@lval+2,f
  8943  1EC3  1903               	skipnz
  8944  1EC4  0AD5               	incf	___fttol@lval+3,f
  8945  1EC5                     l2441:	
  8946  1EC5  0855               	movf	___fttol@lval+3,w
  8947  1EC6  00CC               	movwf	?___fttol+3
  8948  1EC7  0854               	movf	___fttol@lval+2,w
  8949  1EC8  00CB               	movwf	?___fttol+2
  8950  1EC9  0853               	movf	___fttol@lval+1,w
  8951  1ECA  00CA               	movwf	?___fttol+1
  8952  1ECB  0852               	movf	___fttol@lval,w
  8953  1ECC  00C9               	movwf	?___fttol
  8954  1ECD  0008               	return
  8955  1ECE                     __end_of___fttol:	
  8956                           
  8957                           	psect	text29
  8958  19F7                     __ptext29:	
  8959 ;; *************** function ___ftsub *****************
  8960 ;; Defined at:
  8961 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  f2              3   61[BANK0 ] float 
  8964 ;;  f1              3   64[BANK0 ] float 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  3   61[BANK0 ] float 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8976 ;;      Params:         0       6       0       0       0
  8977 ;;      Locals:         0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0
  8979 ;;      Totals:         0       6       0       0       0
  8980 ;;Total ram usage:        6 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    2
  8983 ;; This function calls:
  8984 ;;		___ftadd
  8985 ;; This function is called by:
  8986 ;;		_sprintf
  8987 ;;		_exp
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           
  8992                           ;psect for function ___ftsub
  8993  19F7                     ___ftsub:	
  8994                           
  8995                           ;incstack = 0
  8996                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8997  19F7  3080               	movlw	128
  8998  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  8999  19F9  1303               	bcf	3,6	;RP1=0, select bank0
  9000  19FA  06DF               	xorwf	___ftsub@f2+2,f
  9001  19FB  0860               	movf	___ftsub@f1,w
  9002  19FC  00D0               	movwf	___ftadd@f1
  9003  19FD  0861               	movf	___ftsub@f1+1,w
  9004  19FE  00D1               	movwf	___ftadd@f1+1
  9005  19FF  0862               	movf	___ftsub@f1+2,w
  9006  1A00  00D2               	movwf	___ftadd@f1+2
  9007  1A01  085D               	movf	___ftsub@f2,w
  9008  1A02  00D3               	movwf	___ftadd@f2
  9009  1A03  085E               	movf	___ftsub@f2+1,w
  9010  1A04  00D4               	movwf	___ftadd@f2+1
  9011  1A05  085F               	movf	___ftsub@f2+2,w
  9012  1A06  00D5               	movwf	___ftadd@f2+2
  9013  1A07  120A  158A  2028   	fcall	___ftadd
  9014  1A0A  1283               	bcf	3,5	;RP0=0, select bank0
  9015  1A0B  1303               	bcf	3,6	;RP1=0, select bank0
  9016  1A0C  0850               	movf	?___ftadd,w
  9017  1A0D  00DD               	movwf	?___ftsub
  9018  1A0E  0851               	movf	?___ftadd+1,w
  9019  1A0F  00DE               	movwf	?___ftsub+1
  9020  1A10  0852               	movf	?___ftadd+2,w
  9021  1A11  00DF               	movwf	?___ftsub+2
  9022  1A12  0008               	return
  9023  1A13                     __end_of___ftsub:	
  9024                           
  9025                           	psect	text30
  9026  0828                     __ptext30:	
  9027 ;; *************** function ___ftadd *****************
  9028 ;; Defined at:
  9029 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  f1              3   48[BANK0 ] float 
  9032 ;;  f2              3   51[BANK0 ] float 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  exp1            1   60[BANK0 ] unsigned char 
  9035 ;;  exp2            1   59[BANK0 ] unsigned char 
  9036 ;;  sign            1   58[BANK0 ] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  3   48[BANK0 ] float 
  9039 ;; Registers used:
  9040 ;;		wreg, status,2, status,0, pclath, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9046 ;;      Params:         0       6       0       0       0
  9047 ;;      Locals:         0       3       0       0       0
  9048 ;;      Temps:          0       4       0       0       0
  9049 ;;      Totals:         0      13       0       0       0
  9050 ;;Total ram usage:       13 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    1
  9053 ;; This function calls:
  9054 ;;		___ftpack
  9055 ;; This function is called by:
  9056 ;;		_main
  9057 ;;		_sprintf
  9058 ;;		___ftsub
  9059 ;;		_floor
  9060 ;;		_log
  9061 ;;		_eval_poly
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function ___ftadd
  9067  0828                     ___ftadd:	
  9068                           
  9069                           ;incstack = 0
  9070                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9071  0828  1283               	bcf	3,5	;RP0=0, select bank0
  9072  0829  1303               	bcf	3,6	;RP1=0, select bank0
  9073  082A  0850               	movf	___ftadd@f1,w
  9074  082B  00D6               	movwf	??___ftadd
  9075  082C  0851               	movf	___ftadd@f1+1,w
  9076  082D  00D7               	movwf	??___ftadd+1
  9077  082E  0852               	movf	___ftadd@f1+2,w
  9078  082F  00D8               	movwf	??___ftadd+2
  9079  0830  1003               	clrc
  9080  0831  0D57               	rlf	??___ftadd+1,w
  9081  0832  0D58               	rlf	??___ftadd+2,w
  9082  0833  00D9               	movwf	??___ftadd+3
  9083  0834  0859               	movf	??___ftadd+3,w
  9084  0835  00DC               	movwf	___ftadd@exp1
  9085  0836  0853               	movf	___ftadd@f2,w
  9086  0837  00D6               	movwf	??___ftadd
  9087  0838  0854               	movf	___ftadd@f2+1,w
  9088  0839  00D7               	movwf	??___ftadd+1
  9089  083A  0855               	movf	___ftadd@f2+2,w
  9090  083B  00D8               	movwf	??___ftadd+2
  9091  083C  1003               	clrc
  9092  083D  0D57               	rlf	??___ftadd+1,w
  9093  083E  0D58               	rlf	??___ftadd+2,w
  9094  083F  00D9               	movwf	??___ftadd+3
  9095  0840  0859               	movf	??___ftadd+3,w
  9096  0841  00DB               	movwf	___ftadd@exp2
  9097  0842  085C               	movf	___ftadd@exp1,w
  9098  0843  1903               	btfsc	3,2
  9099  0844  2851               	goto	l2259
  9100  0845  085B               	movf	___ftadd@exp2,w
  9101  0846  025C               	subwf	___ftadd@exp1,w
  9102  0847  1803               	skipnc
  9103  0848  2858               	goto	l2263
  9104  0849  035C               	decf	___ftadd@exp1,w
  9105  084A  3AFF               	xorlw	255
  9106  084B  075B               	addwf	___ftadd@exp2,w
  9107  084C  00D6               	movwf	??___ftadd
  9108  084D  3019               	movlw	25
  9109  084E  0256               	subwf	??___ftadd,w
  9110  084F  1C03               	skipc
  9111  0850  2858               	goto	l2263
  9112  0851                     l2259:	
  9113  0851  0853               	movf	___ftadd@f2,w
  9114  0852  00D0               	movwf	?___ftadd
  9115  0853  0854               	movf	___ftadd@f2+1,w
  9116  0854  00D1               	movwf	?___ftadd+1
  9117  0855  0855               	movf	___ftadd@f2+2,w
  9118  0856  00D2               	movwf	?___ftadd+2
  9119  0857  0008               	return
  9120  0858                     l2263:	
  9121  0858  085B               	movf	___ftadd@exp2,w
  9122  0859  1903               	btfsc	3,2
  9123  085A  0008               	return
  9124  085B  085C               	movf	___ftadd@exp1,w
  9125  085C  025B               	subwf	___ftadd@exp2,w
  9126  085D  1803               	skipnc
  9127  085E  2867               	goto	l2269
  9128  085F  035B               	decf	___ftadd@exp2,w
  9129  0860  3AFF               	xorlw	255
  9130  0861  075C               	addwf	___ftadd@exp1,w
  9131  0862  00D6               	movwf	??___ftadd
  9132  0863  3019               	movlw	25
  9133  0864  0256               	subwf	??___ftadd,w
  9134  0865  1803               	btfsc	3,0
  9135  0866  0008               	return
  9136  0867                     l2269:	
  9137  0867  3006               	movlw	6
  9138  0868  00D6               	movwf	??___ftadd
  9139  0869  0856               	movf	??___ftadd,w
  9140  086A  00DA               	movwf	___ftadd@sign
  9141  086B  1BD2               	btfsc	___ftadd@f1+2,7
  9142  086C  17DA               	bsf	___ftadd@sign,7
  9143  086D  1BD5               	btfsc	___ftadd@f2+2,7
  9144  086E  175A               	bsf	___ftadd@sign,6
  9145  086F  17D1               	bsf	___ftadd@f1+1,7
  9146  0870  30FF               	movlw	255
  9147  0871  05D0               	andwf	___ftadd@f1,f
  9148  0872  30FF               	movlw	255
  9149  0873  05D1               	andwf	___ftadd@f1+1,f
  9150  0874  3000               	movlw	0
  9151  0875  05D2               	andwf	___ftadd@f1+2,f
  9152  0876  17D4               	bsf	___ftadd@f2+1,7
  9153  0877  30FF               	movlw	255
  9154  0878  05D3               	andwf	___ftadd@f2,f
  9155  0879  30FF               	movlw	255
  9156  087A  05D4               	andwf	___ftadd@f2+1,f
  9157  087B  3000               	movlw	0
  9158  087C  05D5               	andwf	___ftadd@f2+2,f
  9159  087D  085B               	movf	___ftadd@exp2,w
  9160  087E  025C               	subwf	___ftadd@exp1,w
  9161  087F  1803               	skipnc
  9162  0880  28A7               	goto	l2291
  9163  0881                     l2281:	
  9164  0881  3001               	movlw	1
  9165  0882                     u2675:	
  9166  0882  1003               	clrc
  9167  0883  0DD3               	rlf	___ftadd@f2,f
  9168  0884  0DD4               	rlf	___ftadd@f2+1,f
  9169  0885  0DD5               	rlf	___ftadd@f2+2,f
  9170  0886  3EFF               	addlw	-1
  9171  0887  1D03               	skipz
  9172  0888  2882               	goto	u2675
  9173  0889  3001               	movlw	1
  9174  088A  02DB               	subwf	___ftadd@exp2,f
  9175  088B  085B               	movf	___ftadd@exp2,w
  9176  088C  065C               	xorwf	___ftadd@exp1,w
  9177  088D  1903               	skipnz
  9178  088E  28A2               	goto	l2289
  9179  088F  3001               	movlw	1
  9180  0890  02DA               	subwf	___ftadd@sign,f
  9181  0891  085A               	movf	___ftadd@sign,w
  9182  0892  3907               	andlw	7
  9183  0893  1903               	btfsc	3,2
  9184  0894  28A2               	goto	l2289
  9185  0895  2881               	goto	l2281
  9186  0896                     l2287:	
  9187  0896  3001               	movlw	1
  9188  0897                     u2705:	
  9189  0897  1003               	clrc
  9190  0898  0CD2               	rrf	___ftadd@f1+2,f
  9191  0899  0CD1               	rrf	___ftadd@f1+1,f
  9192  089A  0CD0               	rrf	___ftadd@f1,f
  9193  089B  3EFF               	addlw	-1
  9194  089C  1D03               	skipz
  9195  089D  2897               	goto	u2705
  9196  089E  3001               	movlw	1
  9197  089F  00D6               	movwf	??___ftadd
  9198  08A0  0856               	movf	??___ftadd,w
  9199  08A1  07DC               	addwf	___ftadd@exp1,f
  9200  08A2                     l2289:	
  9201  08A2  085C               	movf	___ftadd@exp1,w
  9202  08A3  065B               	xorwf	___ftadd@exp2,w
  9203  08A4  1903               	btfsc	3,2
  9204  08A5  28D0               	goto	l498
  9205  08A6  2896               	goto	l2287
  9206  08A7                     l2291:	
  9207  08A7  085C               	movf	___ftadd@exp1,w
  9208  08A8  025B               	subwf	___ftadd@exp2,w
  9209  08A9  1803               	skipnc
  9210  08AA  28D0               	goto	l498
  9211  08AB                     l2293:	
  9212  08AB  3001               	movlw	1
  9213  08AC                     u2735:	
  9214  08AC  1003               	clrc
  9215  08AD  0DD0               	rlf	___ftadd@f1,f
  9216  08AE  0DD1               	rlf	___ftadd@f1+1,f
  9217  08AF  0DD2               	rlf	___ftadd@f1+2,f
  9218  08B0  3EFF               	addlw	-1
  9219  08B1  1D03               	skipz
  9220  08B2  28AC               	goto	u2735
  9221  08B3  3001               	movlw	1
  9222  08B4  02DC               	subwf	___ftadd@exp1,f
  9223  08B5  085B               	movf	___ftadd@exp2,w
  9224  08B6  065C               	xorwf	___ftadd@exp1,w
  9225  08B7  1903               	skipnz
  9226  08B8  28CC               	goto	l2301
  9227  08B9  3001               	movlw	1
  9228  08BA  02DA               	subwf	___ftadd@sign,f
  9229  08BB  085A               	movf	___ftadd@sign,w
  9230  08BC  3907               	andlw	7
  9231  08BD  1903               	btfsc	3,2
  9232  08BE  28CC               	goto	l2301
  9233  08BF  28AB               	goto	l2293
  9234  08C0                     l2299:	
  9235  08C0  3001               	movlw	1
  9236  08C1                     u2765:	
  9237  08C1  1003               	clrc
  9238  08C2  0CD5               	rrf	___ftadd@f2+2,f
  9239  08C3  0CD4               	rrf	___ftadd@f2+1,f
  9240  08C4  0CD3               	rrf	___ftadd@f2,f
  9241  08C5  3EFF               	addlw	-1
  9242  08C6  1D03               	skipz
  9243  08C7  28C1               	goto	u2765
  9244  08C8  3001               	movlw	1
  9245  08C9  00D6               	movwf	??___ftadd
  9246  08CA  0856               	movf	??___ftadd,w
  9247  08CB  07DB               	addwf	___ftadd@exp2,f
  9248  08CC                     l2301:	
  9249  08CC  085C               	movf	___ftadd@exp1,w
  9250  08CD  065B               	xorwf	___ftadd@exp2,w
  9251  08CE  1D03               	skipz
  9252  08CF  28C0               	goto	l2299
  9253  08D0                     l498:	
  9254  08D0  1FDA               	btfss	___ftadd@sign,7
  9255  08D1  28E2               	goto	l2305
  9256  08D2  30FF               	movlw	255
  9257  08D3  06D0               	xorwf	___ftadd@f1,f
  9258  08D4  30FF               	movlw	255
  9259  08D5  06D1               	xorwf	___ftadd@f1+1,f
  9260  08D6  30FF               	movlw	255
  9261  08D7  06D2               	xorwf	___ftadd@f1+2,f
  9262  08D8  3001               	movlw	1
  9263  08D9  07D0               	addwf	___ftadd@f1,f
  9264  08DA  3000               	movlw	0
  9265  08DB  1803               	skipnc
  9266  08DC  3001               	movlw	1
  9267  08DD  07D1               	addwf	___ftadd@f1+1,f
  9268  08DE  3000               	movlw	0
  9269  08DF  1803               	skipnc
  9270  08E0  3001               	movlw	1
  9271  08E1  07D2               	addwf	___ftadd@f1+2,f
  9272  08E2                     l2305:	
  9273  08E2  1F5A               	btfss	___ftadd@sign,6
  9274  08E3  28F4               	goto	l2309
  9275  08E4  30FF               	movlw	255
  9276  08E5  06D3               	xorwf	___ftadd@f2,f
  9277  08E6  30FF               	movlw	255
  9278  08E7  06D4               	xorwf	___ftadd@f2+1,f
  9279  08E8  30FF               	movlw	255
  9280  08E9  06D5               	xorwf	___ftadd@f2+2,f
  9281  08EA  3001               	movlw	1
  9282  08EB  07D3               	addwf	___ftadd@f2,f
  9283  08EC  3000               	movlw	0
  9284  08ED  1803               	skipnc
  9285  08EE  3001               	movlw	1
  9286  08EF  07D4               	addwf	___ftadd@f2+1,f
  9287  08F0  3000               	movlw	0
  9288  08F1  1803               	skipnc
  9289  08F2  3001               	movlw	1
  9290  08F3  07D5               	addwf	___ftadd@f2+2,f
  9291  08F4                     l2309:	
  9292  08F4  01DA               	clrf	___ftadd@sign
  9293  08F5  0850               	movf	___ftadd@f1,w
  9294  08F6  07D3               	addwf	___ftadd@f2,f
  9295  08F7  0851               	movf	___ftadd@f1+1,w
  9296  08F8  1103               	clrz
  9297  08F9  1803               	skipnc
  9298  08FA  0A51               	incf	___ftadd@f1+1,w
  9299  08FB  1D03               	btfss	3,2
  9300  08FC  07D4               	addwf	___ftadd@f2+1,f
  9301  08FD  0852               	movf	___ftadd@f1+2,w
  9302  08FE  1103               	clrz
  9303  08FF  1803               	skipnc
  9304  0900  0A52               	incf	___ftadd@f1+2,w
  9305  0901  1D03               	btfss	3,2
  9306  0902  07D5               	addwf	___ftadd@f2+2,f
  9307  0903  1FD5               	btfss	___ftadd@f2+2,7
  9308  0904  2917               	goto	l2319
  9309  0905  30FF               	movlw	255
  9310  0906  06D3               	xorwf	___ftadd@f2,f
  9311  0907  30FF               	movlw	255
  9312  0908  06D4               	xorwf	___ftadd@f2+1,f
  9313  0909  30FF               	movlw	255
  9314  090A  06D5               	xorwf	___ftadd@f2+2,f
  9315  090B  3001               	movlw	1
  9316  090C  07D3               	addwf	___ftadd@f2,f
  9317  090D  3000               	movlw	0
  9318  090E  1803               	skipnc
  9319  090F  3001               	movlw	1
  9320  0910  07D4               	addwf	___ftadd@f2+1,f
  9321  0911  3000               	movlw	0
  9322  0912  1803               	skipnc
  9323  0913  3001               	movlw	1
  9324  0914  07D5               	addwf	___ftadd@f2+2,f
  9325  0915  01DA               	clrf	___ftadd@sign
  9326  0916  0ADA               	incf	___ftadd@sign,f
  9327  0917                     l2319:	
  9328  0917  0853               	movf	___ftadd@f2,w
  9329  0918  00F0               	movwf	___ftpack@arg
  9330  0919  0854               	movf	___ftadd@f2+1,w
  9331  091A  00F1               	movwf	___ftpack@arg+1
  9332  091B  0855               	movf	___ftadd@f2+2,w
  9333  091C  00F2               	movwf	___ftpack@arg+2
  9334  091D  085C               	movf	___ftadd@exp1,w
  9335  091E  00D6               	movwf	??___ftadd
  9336  091F  0856               	movf	??___ftadd,w
  9337  0920  00F3               	movwf	___ftpack@exp
  9338  0921  085A               	movf	___ftadd@sign,w
  9339  0922  00D7               	movwf	??___ftadd+1
  9340  0923  0857               	movf	??___ftadd+1,w
  9341  0924  00F4               	movwf	___ftpack@sign
  9342  0925  160A  158A  24DC   	fcall	___ftpack
  9343  0928  0870               	movf	?___ftpack,w
  9344  0929  1283               	bcf	3,5	;RP0=0, select bank0
  9345  092A  1303               	bcf	3,6	;RP1=0, select bank0
  9346  092B  00D0               	movwf	?___ftadd
  9347  092C  0871               	movf	?___ftpack+1,w
  9348  092D  00D1               	movwf	?___ftadd+1
  9349  092E  0872               	movf	?___ftpack+2,w
  9350  092F  00D2               	movwf	?___ftadd+2
  9351  0930  0008               	return
  9352  0931                     __end_of___ftadd:	
  9353                           
  9354                           	psect	text31
  9355  1995                     __ptext31:	
  9356 ;; *************** function ___ftneg *****************
  9357 ;; Defined at:
  9358 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  f1              3    0[COMMON] float 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  3    0[COMMON] float 
  9365 ;; Registers used:
  9366 ;;		wreg
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         3       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0
  9375 ;;      Totals:         3       0       0       0       0
  9376 ;;Total ram usage:        3 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_sprintf
  9382 ;;		_pow
  9383 ;;		_exp
  9384 ;;		_ldexp
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function ___ftneg
  9390  1995                     ___ftneg:	
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in ___ftneg: [wreg]
  9394  1995  0872               	movf	___ftneg@f1+2,w
  9395  1996  0471               	iorwf	___ftneg@f1+1,w
  9396  1997  0470               	iorwf	___ftneg@f1,w
  9397  1998  1903               	skipnz
  9398  1999  0008               	return
  9399  199A  3080               	movlw	128
  9400  199B  06F2               	xorwf	___ftneg@f1+2,f
  9401  199C  0008               	return
  9402  199D                     __end_of___ftneg:	
  9403                           
  9404                           	psect	text32
  9405  1BC4                     __ptext32:	
  9406 ;; *************** function ___ftge *****************
  9407 ;; Defined at:
  9408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  ff1             3    0[COMMON] float 
  9411 ;;  ff2             3    3[COMMON] float 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;		None
  9414 ;; Return value:  Size  Location     Type
  9415 ;;		None               void
  9416 ;; Registers used:
  9417 ;;		wreg, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9423 ;;      Params:         6       0       0       0       0
  9424 ;;      Locals:         0       0       0       0       0
  9425 ;;      Temps:          6       0       0       0       0
  9426 ;;      Totals:        12       0       0       0       0
  9427 ;;Total ram usage:       12 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_sprintf
  9433 ;;		_pow
  9434 ;;		_exp
  9435 ;;		_floor
  9436 ;;		_ldexp
  9437 ;;		_log
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           
  9442                           ;psect for function ___ftge
  9443  1BC4                     ___ftge:	
  9444                           
  9445                           ;incstack = 0
  9446                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9447  1BC4  1FF2               	btfss	___ftge@ff1+2,7
  9448  1BC5  2BEB               	goto	l2327
  9449  1BC6  3000               	movlw	0
  9450  1BC7  00F6               	movwf	??___ftge
  9451  1BC8  3000               	movlw	0
  9452  1BC9  00F7               	movwf	??___ftge+1
  9453  1BCA  3080               	movlw	128
  9454  1BCB  00F8               	movwf	??___ftge+2
  9455  1BCC  0970               	comf	___ftge@ff1,w
  9456  1BCD  00F9               	movwf	??___ftge+3
  9457  1BCE  0971               	comf	___ftge@ff1+1,w
  9458  1BCF  00FA               	movwf	??___ftge+4
  9459  1BD0  0972               	comf	___ftge@ff1+2,w
  9460  1BD1  00FB               	movwf	??___ftge+5
  9461  1BD2  0AF9               	incf	??___ftge+3,f
  9462  1BD3  1903               	skipnz
  9463  1BD4  0AFA               	incf	??___ftge+4,f
  9464  1BD5  1903               	skipnz
  9465  1BD6  0AFB               	incf	??___ftge+5,f
  9466  1BD7  0879               	movf	??___ftge+3,w
  9467  1BD8  07F6               	addwf	??___ftge,f
  9468  1BD9  087A               	movf	??___ftge+4,w
  9469  1BDA  1803               	skipnc
  9470  1BDB  0F7A               	incfsz	??___ftge+4,w
  9471  1BDC  2BDE               	goto	u2831
  9472  1BDD  2BDF               	goto	u2832
  9473  1BDE                     u2831:	
  9474  1BDE  07F7               	addwf	??___ftge+1,f
  9475  1BDF                     u2832:	
  9476  1BDF  087B               	movf	??___ftge+5,w
  9477  1BE0  1803               	skipnc
  9478  1BE1  0F7B               	incfsz	??___ftge+5,w
  9479  1BE2  2BE4               	goto	u2833
  9480  1BE3  2BE5               	goto	u2834
  9481  1BE4                     u2833:	
  9482  1BE4  07F8               	addwf	??___ftge+2,f
  9483  1BE5                     u2834:	
  9484  1BE5  0876               	movf	??___ftge,w
  9485  1BE6  00F0               	movwf	___ftge@ff1
  9486  1BE7  0877               	movf	??___ftge+1,w
  9487  1BE8  00F1               	movwf	___ftge@ff1+1
  9488  1BE9  0878               	movf	??___ftge+2,w
  9489  1BEA  00F2               	movwf	___ftge@ff1+2
  9490  1BEB                     l2327:	
  9491  1BEB  1FF5               	btfss	___ftge@ff2+2,7
  9492  1BEC  2C12               	goto	l2331
  9493  1BED  3000               	movlw	0
  9494  1BEE  00F6               	movwf	??___ftge
  9495  1BEF  3000               	movlw	0
  9496  1BF0  00F7               	movwf	??___ftge+1
  9497  1BF1  3080               	movlw	128
  9498  1BF2  00F8               	movwf	??___ftge+2
  9499  1BF3  0973               	comf	___ftge@ff2,w
  9500  1BF4  00F9               	movwf	??___ftge+3
  9501  1BF5  0974               	comf	___ftge@ff2+1,w
  9502  1BF6  00FA               	movwf	??___ftge+4
  9503  1BF7  0975               	comf	___ftge@ff2+2,w
  9504  1BF8  00FB               	movwf	??___ftge+5
  9505  1BF9  0AF9               	incf	??___ftge+3,f
  9506  1BFA  1903               	skipnz
  9507  1BFB  0AFA               	incf	??___ftge+4,f
  9508  1BFC  1903               	skipnz
  9509  1BFD  0AFB               	incf	??___ftge+5,f
  9510  1BFE  0879               	movf	??___ftge+3,w
  9511  1BFF  07F6               	addwf	??___ftge,f
  9512  1C00  087A               	movf	??___ftge+4,w
  9513  1C01  1803               	skipnc
  9514  1C02  0F7A               	incfsz	??___ftge+4,w
  9515  1C03  2C05               	goto	u2851
  9516  1C04  2C06               	goto	u2852
  9517  1C05                     u2851:	
  9518  1C05  07F7               	addwf	??___ftge+1,f
  9519  1C06                     u2852:	
  9520  1C06  087B               	movf	??___ftge+5,w
  9521  1C07  1803               	skipnc
  9522  1C08  0F7B               	incfsz	??___ftge+5,w
  9523  1C09  2C0B               	goto	u2853
  9524  1C0A  2C0C               	goto	u2854
  9525  1C0B                     u2853:	
  9526  1C0B  07F8               	addwf	??___ftge+2,f
  9527  1C0C                     u2854:	
  9528  1C0C  0876               	movf	??___ftge,w
  9529  1C0D  00F3               	movwf	___ftge@ff2
  9530  1C0E  0877               	movf	??___ftge+1,w
  9531  1C0F  00F4               	movwf	___ftge@ff2+1
  9532  1C10  0878               	movf	??___ftge+2,w
  9533  1C11  00F5               	movwf	___ftge@ff2+2
  9534  1C12                     l2331:	
  9535  1C12  3080               	movlw	128
  9536  1C13  06F2               	xorwf	___ftge@ff1+2,f
  9537  1C14  3080               	movlw	128
  9538  1C15  06F5               	xorwf	___ftge@ff2+2,f
  9539  1C16  0875               	movf	___ftge@ff2+2,w
  9540  1C17  0272               	subwf	___ftge@ff1+2,w
  9541  1C18  1D03               	skipz
  9542  1C19  0008               	return
  9543  1C1A  0874               	movf	___ftge@ff2+1,w
  9544  1C1B  0271               	subwf	___ftge@ff1+1,w
  9545  1C1C  1D03               	skipz
  9546  1C1D  0008               	return
  9547  1C1E  0873               	movf	___ftge@ff2,w
  9548  1C1F  0270               	subwf	___ftge@ff1,w
  9549  1C20  0008               	return
  9550  1C21                     __end_of___ftge:	
  9551                           
  9552                           	psect	text33
  9553  19BE                     __ptext33:	
  9554 ;; *************** function _instCtrl *****************
  9555 ;; Defined at:
  9556 ;;		line 111 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  INST            1    wreg     unsigned char 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  INST            1    6[COMMON] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;		None               void
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9570 ;;      Params:         0       0       0       0       0
  9571 ;;      Locals:         1       0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0
  9573 ;;      Totals:         1       0       0       0       0
  9574 ;;Total ram usage:        1 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    1
  9577 ;; This function calls:
  9578 ;;		_delay_ms
  9579 ;; This function is called by:
  9580 ;;		_initLCD
  9581 ;;		_dispRH
  9582 ;;		_dispT
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           
  9587                           ;psect for function _instCtrl
  9588  19BE                     _instCtrl:	
  9589                           
  9590                           ;incstack = 0
  9591                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9592                           ;instCtrl@INST stored from wreg
  9593  19BE  00F6               	movwf	instCtrl@INST
  9594                           
  9595                           ;LE7-3.c: 112: PORTB = INST;
  9596  19BF  0876               	movf	instCtrl@INST,w
  9597  19C0  1283               	bcf	3,5	;RP0=0, select bank0
  9598  19C1  1303               	bcf	3,6	;RP1=0, select bank0
  9599  19C2  0086               	movwf	6	;volatile
  9600                           
  9601                           ;LE7-3.c: 113: RD0 = 0;
  9602  19C3  1008               	bcf	8,0	;volatile
  9603                           
  9604                           ;LE7-3.c: 114: RD1 = 1;
  9605  19C4  1488               	bsf	8,1	;volatile
  9606                           
  9607                           ;LE7-3.c: 115: delay_ms(1);
  9608  19C5  3001               	movlw	1
  9609  19C6  00F0               	movwf	delay_ms@cnt
  9610  19C7  3000               	movlw	0
  9611  19C8  00F1               	movwf	delay_ms@cnt+1
  9612  19C9  120A  158A  2000   	fcall	_delay_ms
  9613                           
  9614                           ;LE7-3.c: 116: RD1 = 0;
  9615  19CC  1283               	bcf	3,5	;RP0=0, select bank0
  9616  19CD  1303               	bcf	3,6	;RP1=0, select bank0
  9617  19CE  1088               	bcf	8,1	;volatile
  9618  19CF  0008               	return
  9619  19D0                     __end_of_instCtrl:	
  9620                           
  9621                           	psect	text34
  9622  19AC                     __ptext34:	
  9623 ;; *************** function _dataCtrl *****************
  9624 ;; Defined at:
  9625 ;;		line 126 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  DATA            1    wreg     unsigned char 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  DATA            1    6[COMMON] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;		None               void
  9632 ;; Registers used:
  9633 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9639 ;;      Params:         0       0       0       0       0
  9640 ;;      Locals:         1       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0
  9642 ;;      Totals:         1       0       0       0       0
  9643 ;;Total ram usage:        1 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    1
  9646 ;; This function calls:
  9647 ;;		_delay_ms
  9648 ;; This function is called by:
  9649 ;;		_dispRH
  9650 ;;		_dispT
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           
  9655                           ;psect for function _dataCtrl
  9656  19AC                     _dataCtrl:	
  9657                           
  9658                           ;incstack = 0
  9659                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9660                           ;dataCtrl@DATA stored from wreg
  9661  19AC  00F6               	movwf	dataCtrl@DATA
  9662                           
  9663                           ;LE7-3.c: 127: PORTB = DATA;
  9664  19AD  0876               	movf	dataCtrl@DATA,w
  9665  19AE  1283               	bcf	3,5	;RP0=0, select bank0
  9666  19AF  1303               	bcf	3,6	;RP1=0, select bank0
  9667  19B0  0086               	movwf	6	;volatile
  9668                           
  9669                           ;LE7-3.c: 128: RD0 = 1;
  9670  19B1  1408               	bsf	8,0	;volatile
  9671                           
  9672                           ;LE7-3.c: 129: RD1 = 1;
  9673  19B2  1488               	bsf	8,1	;volatile
  9674                           
  9675                           ;LE7-3.c: 130: delay_ms(5);
  9676  19B3  3005               	movlw	5
  9677  19B4  00F0               	movwf	delay_ms@cnt
  9678  19B5  3000               	movlw	0
  9679  19B6  00F1               	movwf	delay_ms@cnt+1
  9680  19B7  120A  158A  2000   	fcall	_delay_ms
  9681                           
  9682                           ;LE7-3.c: 131: RD1 = 0;
  9683  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  9684  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  9685  19BC  1088               	bcf	8,1	;volatile
  9686  19BD  0008               	return
  9687  19BE                     __end_of_dataCtrl:	
  9688                           
  9689                           	psect	text35
  9690  0800                     __ptext35:	
  9691 ;; *************** function _delay_ms *****************
  9692 ;; Defined at:
  9693 ;;		line 103 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  cnt             2    0[COMMON] int 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  j               2    4[COMMON] int 
  9698 ;;  i               2    2[COMMON] int 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;		None               void
  9701 ;; Registers used:
  9702 ;;		wreg, status,2, status,0, btemp+1
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9708 ;;      Params:         2       0       0       0       0
  9709 ;;      Locals:         4       0       0       0       0
  9710 ;;      Temps:          0       0       0       0       0
  9711 ;;      Totals:         6       0       0       0       0
  9712 ;;Total ram usage:        6 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_main
  9718 ;;		_instCtrl
  9719 ;;		_initLCD
  9720 ;;		_dataCtrl
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           
  9725                           ;psect for function _delay_ms
  9726  0800                     _delay_ms:	
  9727                           
  9728                           ;LE7-3.c: 104: int i, j;
  9729                           ;LE7-3.c: 105: for (i = cnt; i != 0; i--);
  9730                           
  9731                           ;incstack = 0
  9732                           ; Regs used in _delay_ms: [wreg+status,2+status,0+btemp+1]
  9733  0800  0871               	movf	delay_ms@cnt+1,w
  9734  0801  01F3               	clrf	delay_ms@i+1
  9735  0802  07F3               	addwf	delay_ms@i+1,f
  9736  0803  0870               	movf	delay_ms@cnt,w
  9737  0804  01F2               	clrf	delay_ms@i
  9738  0805  07F2               	addwf	delay_ms@i,f
  9739  0806  0873               	movf	delay_ms@i+1,w
  9740  0807  0472               	iorwf	delay_ms@i,w
  9741  0808  1903               	btfsc	3,2
  9742  0809  2814               	goto	l2475
  9743  080A                     l2471:	
  9744  080A  30FF               	movlw	255
  9745  080B  07F2               	addwf	delay_ms@i,f
  9746  080C  1803               	skipnc
  9747  080D  0AF3               	incf	delay_ms@i+1,f
  9748  080E  30FF               	movlw	255
  9749  080F  07F3               	addwf	delay_ms@i+1,f
  9750  0810  0873               	movf	delay_ms@i+1,w
  9751  0811  0472               	iorwf	delay_ms@i,w
  9752  0812  1D03               	skipz
  9753  0813  280A               	goto	l2471
  9754  0814                     l2475:	
  9755                           
  9756                           ;LE7-3.c: 106: for (j = 0; j < 5000; j++);
  9757  0814  01F4               	clrf	delay_ms@j
  9758  0815  01F5               	clrf	delay_ms@j+1
  9759  0816                     L9:	
  9760  0816  0875               	movf	delay_ms@j+1,w
  9761  0817  3A80               	xorlw	128
  9762  0818  00FF               	movwf	127
  9763  0819  3093               	movlw	147
  9764  081A  027F               	subwf	127,w
  9765  081B  1D03               	skipz
  9766  081C  281F               	goto	u3155
  9767  081D  3088               	movlw	136
  9768  081E  0274               	subwf	delay_ms@j,w
  9769  081F                     u3155:	
  9770  081F  1803               	btfsc	3,0
  9771  0820  0008               	return
  9772  0821  3001               	movlw	1
  9773  0822  07F4               	addwf	delay_ms@j,f
  9774  0823  1803               	skipnc
  9775  0824  0AF5               	incf	delay_ms@j+1,f
  9776  0825  3000               	movlw	0
  9777  0826  07F5               	addwf	delay_ms@j+1,f
  9778  0827  2816               	goto	L9
  9779  0828                     __end_of_delay_ms:	
  9780                           
  9781                           	psect	text36
  9782  19E3                     __ptext36:	
  9783 ;; *************** function ___lwtoft *****************
  9784 ;; Defined at:
  9785 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;  c               2    8[COMMON] unsigned int 
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  3    8[COMMON] float 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9799 ;;      Params:         3       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0
  9801 ;;      Temps:          1       0       0       0       0
  9802 ;;      Totals:         4       0       0       0       0
  9803 ;;Total ram usage:        4 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    1
  9806 ;; This function calls:
  9807 ;;		___ftpack
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function ___lwtoft
  9815  19E3                     ___lwtoft:	
  9816                           
  9817                           ;incstack = 0
  9818                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9819  19E3  0878               	movf	___lwtoft@c,w
  9820  19E4  00F0               	movwf	___ftpack@arg
  9821  19E5  0879               	movf	___lwtoft@c+1,w
  9822  19E6  00F1               	movwf	___ftpack@arg+1
  9823  19E7  01F2               	clrf	___ftpack@arg+2
  9824  19E8  308E               	movlw	142
  9825  19E9  00FB               	movwf	??___lwtoft
  9826  19EA  087B               	movf	??___lwtoft,w
  9827  19EB  00F3               	movwf	___ftpack@exp
  9828  19EC  01F4               	clrf	___ftpack@sign
  9829  19ED  160A  158A  24DC   	fcall	___ftpack
  9830  19F0  0870               	movf	?___ftpack,w
  9831  19F1  00F8               	movwf	?___lwtoft
  9832  19F2  0871               	movf	?___ftpack+1,w
  9833  19F3  00F9               	movwf	?___lwtoft+1
  9834  19F4  0872               	movf	?___ftpack+2,w
  9835  19F5  00FA               	movwf	?___lwtoft+2
  9836  19F6  0008               	return
  9837  19F7                     __end_of___lwtoft:	
  9838                           
  9839                           	psect	text37
  9840  1CDC                     __ptext37:	
  9841 ;; *************** function ___ftpack *****************
  9842 ;; Defined at:
  9843 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  arg             3    0[COMMON] unsigned um
  9846 ;;  exp             1    3[COMMON] unsigned char 
  9847 ;;  sign            1    4[COMMON] unsigned char 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  3    0[COMMON] float 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2, status,0
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9859 ;;      Params:         5       0       0       0       0
  9860 ;;      Locals:         0       0       0       0       0
  9861 ;;      Temps:          3       0       0       0       0
  9862 ;;      Totals:         8       0       0       0       0
  9863 ;;Total ram usage:        8 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		___altoft
  9869 ;;		___awtoft
  9870 ;;		___ftadd
  9871 ;;		___ftdiv
  9872 ;;		___ftmul
  9873 ;;		___lltoft
  9874 ;;		___lwtoft
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           
  9879                           ;psect for function ___ftpack
  9880  1CDC                     ___ftpack:	
  9881                           
  9882                           ;incstack = 0
  9883                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9884  1CDC  0873               	movf	___ftpack@exp,w
  9885  1CDD  1903               	btfsc	3,2
  9886  1CDE  2CE4               	goto	l2111
  9887  1CDF  0872               	movf	___ftpack@arg+2,w
  9888  1CE0  0471               	iorwf	___ftpack@arg+1,w
  9889  1CE1  0470               	iorwf	___ftpack@arg,w
  9890  1CE2  1D03               	skipz
  9891  1CE3  2CF7               	goto	l2117
  9892  1CE4                     l2111:	
  9893  1CE4  3000               	movlw	0
  9894  1CE5  00F0               	movwf	?___ftpack
  9895  1CE6  3000               	movlw	0
  9896  1CE7  00F1               	movwf	?___ftpack+1
  9897  1CE8  3000               	movlw	0
  9898  1CE9  00F2               	movwf	?___ftpack+2
  9899  1CEA  0008               	return
  9900  1CEB                     l2115:	
  9901  1CEB  3001               	movlw	1
  9902  1CEC  00F5               	movwf	??___ftpack
  9903  1CED  0875               	movf	??___ftpack,w
  9904  1CEE  07F3               	addwf	___ftpack@exp,f
  9905  1CEF  3001               	movlw	1
  9906  1CF0                     u2255:	
  9907  1CF0  1003               	clrc
  9908  1CF1  0CF2               	rrf	___ftpack@arg+2,f
  9909  1CF2  0CF1               	rrf	___ftpack@arg+1,f
  9910  1CF3  0CF0               	rrf	___ftpack@arg,f
  9911  1CF4  3EFF               	addlw	-1
  9912  1CF5  1D03               	skipz
  9913  1CF6  2CF0               	goto	u2255
  9914  1CF7                     l2117:	
  9915  1CF7  30FE               	movlw	254
  9916  1CF8  0572               	andwf	___ftpack@arg+2,w
  9917  1CF9  1903               	btfsc	3,2
  9918  1CFA  2D12               	goto	l469
  9919  1CFB  2CEB               	goto	l2115
  9920  1CFC                     l2119:	
  9921  1CFC  3001               	movlw	1
  9922  1CFD  00F5               	movwf	??___ftpack
  9923  1CFE  0875               	movf	??___ftpack,w
  9924  1CFF  07F3               	addwf	___ftpack@exp,f
  9925  1D00  3001               	movlw	1
  9926  1D01  07F0               	addwf	___ftpack@arg,f
  9927  1D02  3000               	movlw	0
  9928  1D03  1803               	skipnc
  9929  1D04  3001               	movlw	1
  9930  1D05  07F1               	addwf	___ftpack@arg+1,f
  9931  1D06  3000               	movlw	0
  9932  1D07  1803               	skipnc
  9933  1D08  3001               	movlw	1
  9934  1D09  07F2               	addwf	___ftpack@arg+2,f
  9935  1D0A  3001               	movlw	1
  9936  1D0B                     u2275:	
  9937  1D0B  1003               	clrc
  9938  1D0C  0CF2               	rrf	___ftpack@arg+2,f
  9939  1D0D  0CF1               	rrf	___ftpack@arg+1,f
  9940  1D0E  0CF0               	rrf	___ftpack@arg,f
  9941  1D0F  3EFF               	addlw	-1
  9942  1D10  1D03               	skipz
  9943  1D11  2D0B               	goto	u2275
  9944  1D12                     l469:	
  9945  1D12  30FF               	movlw	255
  9946  1D13  0572               	andwf	___ftpack@arg+2,w
  9947  1D14  1903               	btfsc	3,2
  9948  1D15  2D21               	goto	l2127
  9949  1D16  2CFC               	goto	l2119
  9950  1D17                     l2125:	
  9951  1D17  3001               	movlw	1
  9952  1D18  02F3               	subwf	___ftpack@exp,f
  9953  1D19  3001               	movlw	1
  9954  1D1A                     u2295:	
  9955  1D1A  1003               	clrc
  9956  1D1B  0DF0               	rlf	___ftpack@arg,f
  9957  1D1C  0DF1               	rlf	___ftpack@arg+1,f
  9958  1D1D  0DF2               	rlf	___ftpack@arg+2,f
  9959  1D1E  3EFF               	addlw	-1
  9960  1D1F  1D03               	skipz
  9961  1D20  2D1A               	goto	u2295
  9962  1D21                     l2127:	
  9963  1D21  1FF1               	btfss	___ftpack@arg+1,7
  9964  1D22  2D17               	goto	l2125
  9965  1D23  1873               	btfsc	___ftpack@exp,0
  9966  1D24  2D2B               	goto	l475
  9967  1D25  30FF               	movlw	255
  9968  1D26  05F0               	andwf	___ftpack@arg,f
  9969  1D27  307F               	movlw	127
  9970  1D28  05F1               	andwf	___ftpack@arg+1,f
  9971  1D29  30FF               	movlw	255
  9972  1D2A  05F2               	andwf	___ftpack@arg+2,f
  9973  1D2B                     l475:	
  9974  1D2B  1003               	clrc
  9975  1D2C  0CF3               	rrf	___ftpack@exp,f
  9976  1D2D  0873               	movf	___ftpack@exp,w
  9977  1D2E  00F5               	movwf	??___ftpack
  9978  1D2F  01F6               	clrf	??___ftpack+1
  9979  1D30  01F7               	clrf	??___ftpack+2
  9980  1D31  3010               	movlw	16
  9981  1D32                     u2325:	
  9982  1D32  1003               	clrc
  9983  1D33  0DF5               	rlf	??___ftpack,f
  9984  1D34  0DF6               	rlf	??___ftpack+1,f
  9985  1D35  0DF7               	rlf	??___ftpack+2,f
  9986  1D36  3EFF               	addlw	-1
  9987  1D37  1D03               	skipz
  9988  1D38  2D32               	goto	u2325
  9989  1D39  0875               	movf	??___ftpack,w
  9990  1D3A  04F0               	iorwf	___ftpack@arg,f
  9991  1D3B  0876               	movf	??___ftpack+1,w
  9992  1D3C  04F1               	iorwf	___ftpack@arg+1,f
  9993  1D3D  0877               	movf	??___ftpack+2,w
  9994  1D3E  04F2               	iorwf	___ftpack@arg+2,f
  9995  1D3F  0874               	movf	___ftpack@sign,w
  9996  1D40  1903               	btfsc	3,2
  9997  1D41  0008               	return
  9998  1D42  17F2               	bsf	___ftpack@arg+2,7
  9999  1D43  0008               	return
 10000  1D44                     __end_of___ftpack:	
 10001                           
 10002                           	psect	text38
 10003  1986                     __ptext38:	
 10004 ;; *************** function _I2C_Stop *****************
 10005 ;; Defined at:
 10006 ;;		line 216 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;		None               void
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10020 ;;      Params:         0       0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    1
 10027 ;; This function calls:
 10028 ;;		_I2C_Wait
 10029 ;; This function is called by:
 10030 ;;		_main
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _I2C_Stop
 10036  1986                     _I2C_Stop:	
 10037                           
 10038                           ;LE7-3.c: 218: I2C_Wait();
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 10042  1986  160A  158A  218D   	fcall	_I2C_Wait
 10043                           
 10044                           ;LE7-3.c: 220: PEN = 1;
 10045  1989  1683               	bsf	3,5	;RP0=1, select bank1
 10046  198A  1303               	bcf	3,6	;RP1=0, select bank1
 10047  198B  1511               	bsf	17,2	;volatile
 10048  198C  0008               	return
 10049  198D                     __end_of_I2C_Stop:	
 10050                           
 10051                           	psect	text39
 10052  197F                     __ptext39:	
 10053 ;; *************** function _I2C_Start *****************
 10054 ;; Defined at:
 10055 ;;		line 209 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;		None               void
 10062 ;; Registers used:
 10063 ;;		wreg, status,2, status,0, pclath, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10069 ;;      Params:         0       0       0       0       0
 10070 ;;      Locals:         0       0       0       0       0
 10071 ;;      Temps:          0       0       0       0       0
 10072 ;;      Totals:         0       0       0       0       0
 10073 ;;Total ram usage:        0 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    1
 10076 ;; This function calls:
 10077 ;;		_I2C_Wait
 10078 ;; This function is called by:
 10079 ;;		_main
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _I2C_Start
 10085  197F                     _I2C_Start:	
 10086                           
 10087                           ;LE7-3.c: 211: I2C_Wait();
 10088                           
 10089                           ;incstack = 0
 10090                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
 10091  197F  160A  158A  218D   	fcall	_I2C_Wait
 10092                           
 10093                           ;LE7-3.c: 213: SEN = 1;
 10094  1982  1683               	bsf	3,5	;RP0=1, select bank1
 10095  1983  1303               	bcf	3,6	;RP1=0, select bank1
 10096  1984  1411               	bsf	17,0	;volatile
 10097  1985  0008               	return
 10098  1986                     __end_of_I2C_Start:	
 10099                           
 10100                           	psect	text40
 10101  0004                     __ptext40:	
 10102 ;; *************** function _I2C_Send *****************
 10103 ;; Defined at:
 10104 ;;		line 230 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  data            1    wreg     unsigned char 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  data            1    0[COMMON] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;		None               void
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0, pclath, cstack
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10118 ;;      Params:         0       0       0       0       0
 10119 ;;      Locals:         1       0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0
 10121 ;;      Totals:         1       0       0       0       0
 10122 ;;Total ram usage:        1 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    1
 10125 ;; This function calls:
 10126 ;;		_I2C_Wait
 10127 ;; This function is called by:
 10128 ;;		_main
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _I2C_Send
 10134  0004                     _I2C_Send:	
 10135                           
 10136                           ;incstack = 0
 10137                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
 10138                           ;I2C_Send@data stored from wreg
 10139  0004  00F0               	movwf	I2C_Send@data
 10140                           
 10141                           ;LE7-3.c: 232: I2C_Wait();
 10142  0005  160A  158A  218D   	fcall	_I2C_Wait
 10143                           
 10144                           ;LE7-3.c: 234: SSPBUF = data;
 10145  0008  0870               	movf	I2C_Send@data,w
 10146  0009  1283               	bcf	3,5	;RP0=0, select bank0
 10147  000A  1303               	bcf	3,6	;RP1=0, select bank0
 10148  000B  0093               	movwf	19	;volatile
 10149  000C  0008               	return
 10150  000D                     __end_of_I2C_Send:	
 10151                           
 10152                           	psect	text41
 10153  1978                     __ptext41:	
 10154 ;; *************** function _I2C_RepeatedStart *****************
 10155 ;; Defined at:
 10156 ;;		line 223 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;		None               void
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0, pclath, cstack
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10170 ;;      Params:         0       0       0       0       0
 10171 ;;      Locals:         0       0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0
 10173 ;;      Totals:         0       0       0       0       0
 10174 ;;Total ram usage:        0 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    1
 10177 ;; This function calls:
 10178 ;;		_I2C_Wait
 10179 ;; This function is called by:
 10180 ;;		_main
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           
 10185                           ;psect for function _I2C_RepeatedStart
 10186  1978                     _I2C_RepeatedStart:	
 10187                           
 10188                           ;LE7-3.c: 225: I2C_Wait();
 10189                           
 10190                           ;incstack = 0
 10191                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 10192  1978  160A  158A  218D   	fcall	_I2C_Wait
 10193                           
 10194                           ;LE7-3.c: 227: RSEN = 1;
 10195  197B  1683               	bsf	3,5	;RP0=1, select bank1
 10196  197C  1303               	bcf	3,6	;RP1=0, select bank1
 10197  197D  1491               	bsf	17,1	;volatile
 10198  197E  0008               	return
 10199  197F                     __end_of_I2C_RepeatedStart:	
 10200                           
 10201                           	psect	text42
 10202  1A56                     __ptext42:	
 10203 ;; *************** function _I2C_Receive *****************
 10204 ;; Defined at:
 10205 ;;		line 237 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  ack             1    wreg     unsigned char 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  ack             1    1[COMMON] unsigned char 
 10210 ;;  temp            1    2[COMMON] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      unsigned char 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0, pclath, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10220 ;;      Params:         0       0       0       0       0
 10221 ;;      Locals:         2       0       0       0       0
 10222 ;;      Temps:          1       0       0       0       0
 10223 ;;      Totals:         3       0       0       0       0
 10224 ;;Total ram usage:        3 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    1
 10227 ;; This function calls:
 10228 ;;		_I2C_Wait
 10229 ;; This function is called by:
 10230 ;;		_main
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           
 10235                           ;psect for function _I2C_Receive
 10236  1A56                     _I2C_Receive:	
 10237                           
 10238                           ;incstack = 0
 10239                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
 10240                           ;I2C_Receive@ack stored from wreg
 10241  1A56  00F1               	movwf	I2C_Receive@ack
 10242                           
 10243                           ;LE7-3.c: 238: unsigned char temp;
 10244                           ;LE7-3.c: 239: I2C_Wait();
 10245  1A57  160A  158A  218D  160A  158A  	fcall	_I2C_Wait
 10246                           
 10247                           ;LE7-3.c: 240: RCEN = 1;
 10248  1A5C  1683               	bsf	3,5	;RP0=1, select bank1
 10249  1A5D  1303               	bcf	3,6	;RP1=0, select bank1
 10250  1A5E  1591               	bsf	17,3	;volatile
 10251                           
 10252                           ;LE7-3.c: 241: I2C_Wait();
 10253  1A5F  160A  158A  218D  160A  158A  	fcall	_I2C_Wait
 10254                           
 10255                           ;LE7-3.c: 242: temp = SSPBUF;
 10256  1A64  1283               	bcf	3,5	;RP0=0, select bank0
 10257  1A65  1303               	bcf	3,6	;RP1=0, select bank0
 10258  1A66  0813               	movf	19,w	;volatile
 10259  1A67  00F0               	movwf	??_I2C_Receive
 10260  1A68  0870               	movf	??_I2C_Receive,w
 10261  1A69  00F2               	movwf	I2C_Receive@temp
 10262                           
 10263                           ;LE7-3.c: 243: I2C_Wait();
 10264  1A6A  160A  158A  218D  160A  158A  	fcall	_I2C_Wait
 10265                           
 10266                           ;LE7-3.c: 244: ACKDT = (ack)?0:1;
 10267  1A6F  08F1               	movf	I2C_Receive@ack,f
 10268  1A70  1D03               	btfss	3,2
 10269  1A71  2A76               	goto	u4390
 10270  1A72  1683               	bsf	3,5	;RP0=1, select bank1
 10271  1A73  1303               	bcf	3,6	;RP1=0, select bank1
 10272  1A74  1691               	bsf	17,5	;volatile
 10273  1A75  2A79               	goto	l3237
 10274  1A76                     u4390:	
 10275  1A76  1683               	bsf	3,5	;RP0=1, select bank1
 10276  1A77  1303               	bcf	3,6	;RP1=0, select bank1
 10277  1A78  1291               	bcf	17,5	;volatile
 10278  1A79                     l3237:	
 10279                           
 10280                           ;LE7-3.c: 245: ACKEN = 1;
 10281  1A79  1611               	bsf	17,4	;volatile
 10282                           
 10283                           ;LE7-3.c: 246: return temp;
 10284  1A7A  0872               	movf	I2C_Receive@temp,w
 10285  1A7B  0008               	return
 10286  1A7C                     __end_of_I2C_Receive:	
 10287                           
 10288                           	psect	text43
 10289  198D                     __ptext43:	
 10290 ;; *************** function _I2C_Wait *****************
 10291 ;; Defined at:
 10292 ;;		line 203 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical
      + Activity #7\To Submit\LE7-3.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;		None               void
 10299 ;; Registers used:
 10300 ;;		wreg, status,2
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10306 ;;      Params:         0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_I2C_Start
 10316 ;;		_I2C_Stop
 10317 ;;		_I2C_RepeatedStart
 10318 ;;		_I2C_Send
 10319 ;;		_I2C_Receive
 10320 ;; This function uses a non-reentrant model
 10321 ;;
 10322                           
 10323                           
 10324                           ;psect for function _I2C_Wait
 10325  198D                     _I2C_Wait:	
 10326  198D                     l3085:	
 10327                           ;LE7-3.c: 206: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
 10328                           
 10329                           ;incstack = 0
 10330                           ; Regs used in _I2C_Wait: [wreg+status,2]
 10331                           
 10332  198D  1683               	bsf	3,5	;RP0=1, select bank1
 10333  198E  1303               	bcf	3,6	;RP1=0, select bank1
 10334  198F  0811               	movf	17,w	;volatile
 10335  1990  391F               	andlw	31
 10336  1991  1903               	btfsc	3,2
 10337  1992  1914               	btfsc	20,2	;volatile
 10338  1993  298D               	goto	l3085
 10339  1994  0008               	return
 10340  1995                     __end_of_I2C_Wait:	
 10341  007E                     btemp	set	126	;btemp
 10342  007E                     wtemp	set	126
 10343  007E                     wtemp0	set	126
 10344  0080                     wtemp1	set	128
 10345  0082                     wtemp2	set	130
 10346  0084                     wtemp3	set	132
 10347  0086                     wtemp4	set	134
 10348  0088                     wtemp5	set	136
 10349  007F                     wtemp6	set	127
 10350  007E                     ttemp	set	126
 10351  007E                     ttemp0	set	126
 10352  0081                     ttemp1	set	129
 10353  0084                     ttemp2	set	132
 10354  0087                     ttemp3	set	135
 10355  007F                     ttemp4	set	127
 10356  007E                     ltemp	set	126
 10357  007E                     ltemp0	set	126
 10358  0082                     ltemp1	set	130
 10359  0086                     ltemp2	set	134
 10360  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    175
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     57      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> dispT@val(BANK1[5]), dispRH@val(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S171$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->___awtoft
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLCD->_instCtrl
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___ftmul->___awtoft
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___awtoft
    ___ftsub->___lltoft
    ___ftadd->___awtoft
    _instCtrl->_delay_ms
    _dataCtrl->_delay_ms
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    _dispT->_sprintf
    _dispRH->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___ftdiv
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_dispT
    _pow->_exp
    _exp->_ldexp
    _dispT->_sprintf
    _dispRH->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  163280
                                             39 BANK1     18    18      0
                        _I2C_Receive
                  _I2C_RepeatedStart
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                           _delay_ms
                             _dispRH
                              _dispT
                            _initLCD
                    _init_I2C_Master
                                _pow
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   65968
                                             79 BANK0      1     1      0
                                             15 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   21285
                                             71 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 13    10      3   35307
                                             78 BANK0      1     1      0
                                              3 BANK1     12     9      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                               10     5      5    2202
                                             71 BANK0      7     2      5
                                              0 BANK1      3     3      0
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    8413
                                             63 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1993
                                             55 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6    9048
                                             61 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2400
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2105
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     992
                           _delay_ms
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _dispT                                                6     6      0   40240
                                             77 BANK0      1     1      0
                                             34 BANK1      5     5      0
                           _dataCtrl
                           _instCtrl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _dispRH                                               5     5      0   40145
                                             77 BANK0      1     1      0
                                             34 BANK1      4     4      0
                           _dataCtrl
                           _instCtrl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    46      4   38973
                                             67 BANK0     10     6      4
                                              0 BANK1     34    34      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               12     9      3    8161
                                             32 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) _fround                                              19    16      3    7963
                                             32 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    4434
                                             16 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     628
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1246
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1977
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     583
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     676
                                             41 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    3747
                                             61 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3490
                                             48 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     310
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6    1514
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (2) _instCtrl                                             1     1      0     507
                                              6 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _dataCtrl                                             1     1      0     507
                                              6 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2     485
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1930
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1802
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          3     3      0      45
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Receive
     _I2C_Wait
   _I2C_RepeatedStart
     _I2C_Wait
   _I2C_Send
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _frexp (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _frexp (ARG)
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
   ___lwtoft
     ___ftpack
   _delay_ms
   _dispRH
     _dataCtrl
       _delay_ms
     _instCtrl
       _delay_ms
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
   _dispT
     _dataCtrl
       _delay_ms
     _instCtrl
       _delay_ms
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
   _initLCD
     _delay_ms
     _instCtrl
       _delay_ms
   _init_I2C_Master
   _pow
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     39      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9E      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 26 00:14:32 2025

              ___altoft@exp 005D                           _T 00D9                           pc 0002  
            ___bmul@product 0025          __size_of_I2C_Start 0007                 __CFG_CP$OFF 0000  
             ___altoft@sign 005E                          _RH 00DC                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072                ___ftadd@exp1 005C  
              ___ftadd@exp2 005B                ___ftadd@sign 005A                         l156 011A  
                       l183 0454                         l291 1A3D                         l524 11C6  
                       l449 14CB                         l475 1D2B                         l469 1D12  
                       l498 08D0                         l686 1541                         _RD0 0040  
                       _RD1 0041                         _PEN 048A                __CFG_CPD$OFF 0000  
                       _SEN 0488                         _exp 0931                         _log 131E  
                       _pow 1520                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076        __size_of_I2C_Receive 0026                __CFG_FOSC$XT 0000  
               _sprintf$184 00A3                 _sprintf$691 00A0                __CFG_LVP$OFF 0000  
              ___ftdiv@cntr 002A                ___ftdiv@sign 002F                        l2111 1CE4  
                      l2201 1C64                        l2115 1CEB                        l3011 0515  
                      l2125 1D17                        l2117 1CF7                        l2301 08CC  
                      l2205 1C6F                        l2221 1B33                        l3005 04FB  
                      l3101 1358                        l2127 1D21                        l2119 1CFC  
                      l2143 19DA                        l3031 06A3                        l2305 08E2  
                      l2209 1C77                        l2233 1B40                        l2225 1B3A  
                      l3017 0548                        l2331 1C12                        l2235 1B4E  
                      l2243 1B67                        l2139 19D4                        l2163 1AFD  
                      l2309 08F4                        l3061 074B                        l3053 06FB  
                      l3037 06BC                        l2165 1B0F                        l3133 0981  
                      l3117 093F                        l2327 1BEB                        l2319 0917  
                      l2263 0858                        l2407 1E5A                        l2183 1C38  
                      l2247 1B6F                        l2239 1B5C                        l2503 17CE  
                      l3039 06C1                        l3127 095F                        l2281 0881  
                      l2441 1EC5                        l2433 1EA9                        l2425 1E8C  
                      l2193 1C40                        l2177 1C2D                        l3049 06F5  
                      l3161 0AD1                        l3313 0B4B                        l2291 08A7  
                      l2259 0851                        l2435 1EB4                        l2427 1E9C  
                      l2195 1C4E                        l2371 008A                        l2355 003B  
                      l3075 0773                        l3067 076C                        l3139 09B4  
                      l3085 198D                        l3237 1A79                        l2293 08AB  
                      l2269 0867                        l2437 1EB7                        l2613 142E  
                      l2349 0025                        l2525 0E95                        l3077 00EB  
                      l2453 1AB9                        l3181 1556                        l2471 080A  
                      l2287 0896                        l2623 1475                        l2607 140F  
                      l2383 00B2                        l2367 007A                        l2543 0FE1  
                      l2519 0E27                        l3079 07EE                        l3095 1342  
                      l3175 154A                        l2289 08A2                        l2641 14FC  
                      l2553 11AE                        l2537 0F73                        l2529 0EB4  
                      l2713 116E                        l2705 114F                        l3193 15DA  
                      l2475 0814                        l2299 08C0                        l2651 1517  
                      l2379 00A2                        l2733 1C8E                        l2805 1F5E  
                      l3189 15BE                        l2743 1CC6                        l2735 1C9E  
                      l2647 1509                        l2639 14EC                        l2575 1207  
                      l2567 11E7                        l2495 1744                        l2815 1DB6  
                      l2657 1A35                        l2649 1514                        l2593 1240  
                      l2585 1223                        l2913 018D                        l2825 1F75  
                      l2747 1CD3                        l2763 1BAE                        l2595 124B  
                      l2587 1233                        l2675 10C5                        l2691 110A  
                      l2835 1F9E                        l2757 1B80                        l2597 124E  
                      l2941 0289                        l2685 10F4                        l2759 1B90  
                      l2767 1BBB                        l2775 1A80                        l2791 1EFF  
                      l2855 1FDE                        l2777 1A92                        l2953 030D  
                      l2945 02CF                        l2937 026C                        l2929 01FF  
                      l2795 1F08                        l2859 1FE7                        l2973 03DD  
                      l2957 0324                        l2893 0117                        l2969 036E  
                      l2897 011C                        l2987 0433                        l2979 03E3  
                      l2899 0138                        ?_exp 00A3                        ?_log 0067  
                      l2999 04E2                        ?_pow 00AF                        STR_1 10B5  
                      STR_2 10B8                        u3035 1E61                        u2325 1D32  
                      u2255 1CF0                        u4015 03E8                        u3065 1E8D  
                      u2425 1C43                        u4105 05BD                        u4025 0425  
                      u2275 1D0B                        u3155 081F                        u4115 064F  
                      u3405 14A6                        u3325 1224                        u2445 1C4F  
                      u2525 1B43                        u4205 0792                        u2295 1D1A  
                      u3095 1EAB                        u2455 1C5B                        u4215 077F  
                      u4055 0464                        u2375 1B02                        u2705 0897  
                      u3505 1A3E                        u3265 11E9                        u2465 1C65  
                      u2545 1B54                        u3515 1A45                        u3355 1242  
                      u3275 11FA                        u2555 1B5D                        u4075 0504  
                      u3445 14ED                        u3285 1208                        u4165 0700  
                      u4085 0511                        u3605 116F                        u4325 0AC8  
                      u2831 1BDE                        u2735 08AC                        u4175 073D  
                      u4415 0B9B                        u2832 1BDF                        u2833 1BE4  
                      u3705 1B84                        u2905 0059                        u4425 0BA7  
                      u2834 1BE5                        u2851 1C05                        u2675 0882  
                      u3635 1C92                        u3475 150B                        u3395 1477  
                      u4435 0CAE                        u2852 1C06                        u2853 1C0B  
                      u2765 08C1                        u3725 1B9E                        u3565 111C  
                      u4445 0CBA                        u4390 1A76                        u2854 1C0C  
                      u3655 1CA0                        u3735 1BAF                        u2935 008B  
                      u3575 112E                        u4375 15B1                        u3665 1CB5  
                      u2945 0093                        u3905 01A7                        u3585 1150  
                      u3675 1CC7                        u3755 1A85                        u3595 1161  
                      _RCEN 048B                        u3845 1FA7                        u2895 0047  
                      u2985 00B3                        u3945 0294                        u2995 00BB  
                      u3955 02DA                        u3985 030B                        _RSEN 0489  
              __CFG_WRT$OFF 0000                        _main 0AFD                ___ftpack@arg 0070  
              ___ftpack@exp 0073            __end_of_I2C_Send 000D                        btemp 007E  
          __end_of_I2C_Wait 1995                        exp@x 00A3                        log@x 0067  
          __end_of_I2C_Stop 198D               __CFG_BOREN$ON 0000                        ltemp 007E  
                      pow@x 00AF                        pow@y 00B2                        start 0000  
                      ttemp 007E                        wtemp 007E           ___bmul@multiplier 0026  
              ___ftmul@cntr 003E                ___ftmul@sign 003F                ___fttol@exp1 0056  
                     ??_exp 006E                       ??_log 006A                ___fttol@lval 0052  
                     ??_pow 006F                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___awdiv 1C7E             __end_of___ftadd 0931  
             __CFG_WDTE$OFF 0000             __end_of___awmod 1B76             __end_of___ftdiv 1194  
           __end_of___ftneg 199D             __end_of___lldiv 1CDC             __end_of___ftmul 00E0  
           ___awdiv@divisor 0077             __end_of___llmod 1BC4             __end_of___ftsub 1A13  
           __end_of___fttol 1ECE             ___awdiv@counter 0020                       _PORTB 0006  
                     _PORTD 0008                       _TRISB 0086                       _TRISD 0088  
             __CFG_PWRTE$ON 0000                ___lltoft@exp 007D             __end_of_initLCD 1A33  
             ___awtoft@sign 007D                       _dispT 1257             __end_of_dpowers 102E  
                     _floor 1ECE                       _ldexp 1F67                       _frexp 1AA7  
                     _errno 00DE                       _scale 0D61               ___ftpack@sign 0074  
                     main@t 00CC           __end_of_I2C_Start 1986                       pclath 000A  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       pow@yi 00BC                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
           __end_of_sprintf 07F3                 exp@exponent 00AC                 ldexp@newexp 006A  
           __initialization 07F3                 log@exponent 006B                __end_of_main 0D61  
                    ??_main 00C7               ___fttol@sign1 0051        __size_of__tdiv_to_l_ 00C3  
                    ?_dispT 0070                      ?_floor 005F                      ?_ldexp 0067  
                    ?_frexp 0070            __end_of___altoft 1B29            ___llmod@dividend 0024  
                    ?_scale 0040            ___awdiv@dividend 0079            __end_of___awtoft 10DC  
          __end_of___ftpack 1D44            __end_of___lltoft 1AA7            __end_of___lwtoft 19F7  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013            __end_of_dataCtrl 19BE  
          __end_of_delay_ms 0828            __end_of__powers_ 107C                      ___bmul 19D0  
                    ___ftge 1BC4                      ___wmul 1A33                   ??___awdiv 007B  
                 ??___ftadd 0056                   ??___awmod 0074                   ??___ftdiv 0026  
                 ??___ftneg 0073                   ??___lldiv 0078                   ??___ftmul 0036  
                 ??___llmod 0028                   ??___ftsub 007E                   ??___fttol 004D  
                    _dispRH 1DBD    __size_of_init_I2C_Master 000F                      _fround 1664  
          ___awdiv@quotient 0022             ___awmod@divisor 0070            __end_of_instCtrl 19D0  
           ___awmod@counter 0075                      main@rh 00C9                      floor@i 0063  
                    floor@x 005F       ___ftmul@f3_as_product 003B                   ??_initLCD 0077  
                 ?_I2C_Send 0070                   ?_I2C_Wait 0070                   ?_I2C_Stop 0070  
                 ??_sprintf 0067            __end_ofexp@coeff 109A            __end_oflog@coeff 10B5  
   __end_of__initialization 07FC                  ___altoft@c 0057                  ___ftadd@f1 0050  
                ___ftadd@f2 0053                  ___ftge@ff1 0070                  ___ftge@ff2 0073  
              eval_poly@res 0064                  ___ftdiv@f1 0023                  ___ftdiv@f2 0020  
                ___ftdiv@f3 002B                  ___ftneg@f1 0070                  ___awtoft@c 0078  
       ___bmul@multiplicand 0024                  ___ftmul@f1 0030                  ___ftmul@f2 0033  
                ___ftsub@f1 0060                  ___ftsub@f2 005D                  ___fttol@f1 0049  
            __pcstackCOMMON 0070                  ___lltoft@c 0078               __end_of_dispT 131E  
             __end_of_floor 1F67               __end_of_ldexp 2000               __end_of_frexp 1AE7  
             __end_of_scale 1000                  ___lwtoft@c 0078                  __div_to_l_ 13EE  
                ??_I2C_Send 0070                  ??_I2C_Wait 0070                  ??_I2C_Stop 0070  
                   ??_dispT 006D             __div_to_l_@exp1 0025                     ??_floor 0062  
                   ??_ldexp 006C             __div_to_l_@cntr 0024                sprintf@integ 00B2  
                   ??_frexp 0074                     ??_scale 0043             __div_to_l_@quot 0020  
                __pbssBANK1 00D9          __size_of_eval_poly 0079               __div_to_l_@f1 0070  
             __div_to_l_@f2 0073                  __pmaintext 0AFD                     ?___bmul 0024  
                   ?___ftge 0070                     ?___wmul 0070                     ?_dispRH 0070  
                 ?___altoft 0057                     ?_fround 0040                   ?___awtoft 0078  
                 ?___ftpack 0070               ??_I2C_Receive 0070                I2C_Send@data 0070  
                 ?___lltoft 0078                   ?___lwtoft 0078                   ?_dataCtrl 0070  
         ??_init_I2C_Master 0070                   ?_delay_ms 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 1000                   ?_instCtrl 0070  
                 _I2C_Start 197F              I2C_Receive@ack 0071           __end_of__npowers_ 1055  
           __size_of___bmul 0013             __size_of___ftge 005D                     ___awdiv 1C21  
                   ___ftadd 0828                     ___awmod 1B29                     ___ftdiv 10DC  
                   ___ftneg 1995                     ___lldiv 1C7E             __size_of___wmul 0023  
                   ___ftmul 000D                     ___llmod 1B76                     ___ftsub 19F7  
                   ___fttol 1E40                  _fround$688 004C                  _fround$689 0049  
           __size_of_dispRH 0083                  ??___altoft 005B                     _exp$475 00A9  
                   _exp$694 00A6                  ??___awtoft 007B                  ??___ftpack 0075  
         __end_of_eval_poly 1DBD             __size_of_fround 019C                  ??___lltoft 007C  
                   __ptext1 1520                     __ptext2 131E                     __ptext3 0931  
                   __ptext4 1F67                     __ptext5 1ECE                     __ptext6 1AA7  
                   __ptext7 1AE7                     __ptext8 1D44                     __ptext9 10DC  
                ??___lwtoft 007B                     _pow$692 00B5                     _pow$693 00B8  
                   _initLCD 1A13                 ?__div_to_l_ 0070                     _dpowers 1006  
                ??_dataCtrl 0076                __size_of_exp 01CC                __size_of_log 00D0  
              __size_of_pow 0144            ___awmod@dividend 0072                  ??_delay_ms 0072  
       __end_of_I2C_Receive 1A7C                     _sprintf 00E0                     main@res 00D2  
      end_of_initialization 07FC                     exp@sign 00AE                  ??_instCtrl 0076  
                ?_I2C_Start 0070             ___lldiv@divisor 0070                     pow@sign 00BB  
           ___lldiv@counter 007D              __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0073  
             ??__tdiv_to_l_ 0076           __size_of_I2C_Send 0009           __size_of_I2C_Wait 0008  
         __size_of_I2C_Stop 0007                instCtrl@INST 0076                  main@T_temp 00D6  
               ___ftdiv@exp 002E         __size_of__div_to_l_ 0132                 ___ftmul@exp 003A  
            __end_of___bmul 19E3              __end_of___ftge 1C21              __end_of___wmul 1A56  
            __end_of_dispRH 1E40                 _I2C_Receive 1A56              __end_of_fround 1800  
                floor@expon 0066         start_initialization 07F3                  eval_poly@d 0060  
                eval_poly@n 0061                  eval_poly@x 005D                  ldexp@value 0067  
       __end_of__tdiv_to_l_ 1257                 __end_of_exp 0AFD                 __end_of_log 13EE  
               __end_of_pow 1664                dataCtrl@DATA 0076                  frexp@value 0070  
           ___llmod@divisor 0020                 ??_I2C_Start 0070             ___llmod@counter 0029  
                  ??___bmul 007C                    ??___ftge 0076                    ??___wmul 0074  
           _init_I2C_Master 199D               sprintf@vd_186 00AB                    ??_dispRH 006D  
         _I2C_RepeatedStart 1978                    ??_fround 0043          ?_I2C_RepeatedStart 0070  
         __size_of___altoft 0042                  fround@prec 004F           __size_of___awtoft 0021  
         __size_of___ftpack 0068           __size_of___lltoft 002B                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
       ??_I2C_RepeatedStart 0070         __end_of__stringdata 10BB           __size_of_dataCtrl 0012  
         __size_of_delay_ms 0028                 sprintf@_val 00B7                 sprintf@flag 00B0  
               sprintf@fval 00BE                 sprintf@prec 00B5           __size_of_instCtrl 0012  
 __end_of_I2C_RepeatedStart 197F                    ?___awdiv 0077                    ?___ftadd 0050  
                  ?___awmod 0070                    ?___ftdiv 0020                    ?___ftneg 0070  
                  ?___lldiv 0070                    ?___ftmul 0030                    ?___llmod 0020  
                  ?___ftsub 005D                   __npowers_ 102E                    ?___fttol 0049  
                 __pstrings 1000                   _ldexp$512 00A0                 __tdiv_to_l_ 1194  
              ??__div_to_l_ 0076                    ?_initLCD 0070                    _I2C_Send 0004  
                  _I2C_Wait 198D                   _eval_poly 1D44                    _I2C_Stop 1986  
                 _scale$690 0045              __size_of_dispT 00C7                    ?_sprintf 0063  
            __size_of_floor 0099              __size_of_ldexp 0099              __size_of_frexp 0040  
            __size_of_scale 029F              ___wmul@product 0074                   delay_ms@i 0072  
                 delay_ms@j 0074     __end_of_init_I2C_Master 19AC          __end_of__div_to_l_ 1520  
                 dispRH@val 00C2                 __stringbase 1005                 __stringdata 10B5  
         ___wmul@multiplier 0070                  ?_eval_poly 005D             I2C_Receive@temp 0072  
                 frexp@eptr 0073  __size_of_I2C_RepeatedStart 0007            __size_of___awdiv 005D  
          __size_of___ftadd 0109            __size_of___awmod 004D            __size_of___ftdiv 00B8  
          __size_of___ftneg 0008            __size_of___lldiv 005E                    ___altoft 1AE7  
          __size_of___ftmul 00D3            __size_of___llmod 004E            __size_of___ftsub 001C  
          __size_of___fttol 008E                    ___awtoft 10BB                    ___ftpack 1CDC  
        __end_of__stringtab 1006                    ___lltoft 1A7C                ?_I2C_Receive 0070  
                  ___lwtoft 19E3                  sprintf@exp 00BB                    _dataCtrl 19AC  
          __size_of_initLCD 0020                    _main$687 00CF                    _delay_ms 0800  
                  __ptext10 10BB                    __ptext11 199D                    __ptext20 1B29  
                  __ptext12 1A13                    __ptext21 1C21                    __ptext13 1257  
                  __ptext30 0828                    __ptext22 1194                    __ptext14 1DBD  
                  __ptext31 1995                    __ptext23 13EE                    __ptext15 00E0  
                  __ptext40 0004                    __ptext32 1BC4                    __ptext24 1A33  
                  __ptext16 0D61                    __ptext41 1978                    __ptext33 19BE  
                  __ptext25 1A7C                    __ptext17 1664                    __ptext42 1A56  
                  __ptext34 19AC                    __ptext26 1B76                    __ptext18 000D  
                  __ptext43 198D                    __ptext35 0800                    __ptext27 1C7E  
                  __ptext19 19D0                    __ptext36 19E3                    __ptext28 1E40  
                  __ptext37 1CDC                    __ptext29 19F7                    __ptext38 1986  
                  __ptext39 197F                    __powers_ 1055            __size_of_sprintf 0713  
             __size_of_main 0264                    _instCtrl 19BE            ?_init_I2C_Master 0070  
                  dispT@val 00C2                    main@temp 00D8                 delay_ms@cnt 0070  
                  exp@coeff 107C                    log@coeff 109A                 ??_eval_poly 0063  
                  scale@scl 0048                   sprintf@ap 00AF            __tdiv_to_l_@exp1 0025  
                 sprintf@vd 00A7            __tdiv_to_l_@cntr 0024                   sprintf@sp 00BD  
          __tdiv_to_l_@quot 0020            ___lldiv@dividend 0074                   stringcode 1000  
              ?__tdiv_to_l_ 0070                    sprintf@c 00C1                    sprintf@f 0063  
          ___lldiv@quotient 0079                    stringdir 1000                    stringtab 1000  
               main@RH_temp 00D4  
