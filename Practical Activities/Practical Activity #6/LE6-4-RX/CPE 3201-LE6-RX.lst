

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Apr 11 20:16:53 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	maintext,global,class=CODE,split=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	dabs	1,0x7E,2
     8  0000                     	;# 
     9  0001                     	;# 
    10  0002                     	;# 
    11  0003                     	;# 
    12  0004                     	;# 
    13  0005                     	;# 
    14  0006                     	;# 
    15  0007                     	;# 
    16  0008                     	;# 
    17  0009                     	;# 
    18  000A                     	;# 
    19  000B                     	;# 
    20  000C                     	;# 
    21  000D                     	;# 
    22  000E                     	;# 
    23  000E                     	;# 
    24  000F                     	;# 
    25  0010                     	;# 
    26  0011                     	;# 
    27  0012                     	;# 
    28  0013                     	;# 
    29  0014                     	;# 
    30  0015                     	;# 
    31  0015                     	;# 
    32  0016                     	;# 
    33  0017                     	;# 
    34  0018                     	;# 
    35  0019                     	;# 
    36  001A                     	;# 
    37  001B                     	;# 
    38  001B                     	;# 
    39  001C                     	;# 
    40  001D                     	;# 
    41  001E                     	;# 
    42  001F                     	;# 
    43  0081                     	;# 
    44  0085                     	;# 
    45  0086                     	;# 
    46  0087                     	;# 
    47  0088                     	;# 
    48  0089                     	;# 
    49  008C                     	;# 
    50  008D                     	;# 
    51  008E                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009C                     	;# 
    59  009D                     	;# 
    60  009E                     	;# 
    61  009F                     	;# 
    62  010C                     	;# 
    63  010D                     	;# 
    64  010E                     	;# 
    65  010F                     	;# 
    66  018C                     	;# 
    67  018D                     	;# 
    68  0006                     _PORTB	set	6
    69  001A                     _RCREG	set	26
    70  00C4                     _CREN	set	196
    71  0065                     _RCIF	set	101
    72  00C6                     _RX9	set	198
    73  00C7                     _SPEN	set	199
    74  0099                     _SPBRG	set	153
    75  0086                     _TRISB	set	134
    76  04C2                     _BRGH	set	1218
    77  04C4                     _SYNC	set	1220
    78                           
    79                           	psect	maintext
    80  0790                     __pmaintext:	
    81                           ; #config settings
    82                           
    83                           
    84 ;;
    85 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    86 ;;
    87 ;; *************** function _main *****************
    88 ;; Defined at:
    89 ;;		line 3 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical A
      +ctivity #6\LE6-4-RX\LE6-4-RX.c"
    90 ;; Parameters:    Size  Location     Type
    91 ;;		None
    92 ;; Auto vars:     Size  Location     Type
    93 ;;  data            2    4[COMMON] unsigned int 
    94 ;;  output          2    2[COMMON] unsigned int 
    95 ;; Return value:  Size  Location     Type
    96 ;;		None               void
    97 ;; Registers used:
    98 ;;		wreg, status,2
    99 ;; Tracked objects:
   100 ;;		On entry : 17F/0
   101 ;;		On exit  : 0/0
   102 ;;		Unchanged: 0/0
   103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   104 ;;      Params:         0       0       0       0       0
   105 ;;      Locals:         4       0       0       0       0
   106 ;;      Temps:          2       0       0       0       0
   107 ;;      Totals:         6       0       0       0       0
   108 ;;Total ram usage:        6 bytes
   109 ;; This function calls:
   110 ;;		Nothing
   111 ;; This function is called by:
   112 ;;		Startup code after reset
   113 ;; This function uses a non-reentrant model
   114 ;;
   115  0790                     _main:	
   116                           
   117                           ;LE6-4-RX.c: 5: SPBRG = 0x19;
   118                           
   119                           ;incstack = 0
   120                           ; Regs used in _main: [wreg+status,2]
   121  0790  3019               	movlw	25
   122  0791  1683               	bsf	3,5	;RP0=1, select bank1
   123  0792  1303               	bcf	3,6	;RP1=0, select bank1
   124  0793  0099               	movwf	25	;volatile
   125                           
   126                           ;LE6-4-RX.c: 7: SYNC = 0;
   127  0794  1218               	bcf	24,4	;volatile
   128                           
   129                           ;LE6-4-RX.c: 8: SPEN = 1;
   130  0795  1283               	bcf	3,5	;RP0=0, select bank0
   131  0796  1303               	bcf	3,6	;RP1=0, select bank0
   132  0797  1798               	bsf	24,7	;volatile
   133                           
   134                           ;LE6-4-RX.c: 9: RX9 = 0;
   135  0798  1318               	bcf	24,6	;volatile
   136                           
   137                           ;LE6-4-RX.c: 10: BRGH = 1;
   138  0799  1683               	bsf	3,5	;RP0=1, select bank1
   139  079A  1303               	bcf	3,6	;RP1=0, select bank1
   140  079B  1518               	bsf	24,2	;volatile
   141                           
   142                           ;LE6-4-RX.c: 11: CREN = 1;
   143  079C  1283               	bcf	3,5	;RP0=0, select bank0
   144  079D  1303               	bcf	3,6	;RP1=0, select bank0
   145  079E  1618               	bsf	24,4	;volatile
   146                           
   147                           ;LE6-4-RX.c: 12: TRISB = 0x00;
   148  079F  1683               	bsf	3,5	;RP0=1, select bank1
   149  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   150  07A1  0186               	clrf	6	;volatile
   151                           
   152                           ;LE6-4-RX.c: 13: PORTB = 0x00;
   153  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   154  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   155  07A4  0186               	clrf	6	;volatile
   156  07A5                     l24:	
   157                           ;LE6-4-RX.c: 18: while(!RCIF);
   158                           
   159                           ;LE6-4-RX.c: 15: unsigned int data, output;
   160                           ;LE6-4-RX.c: 17: while(1) {
   161                           
   162  07A5  1E8C               	btfss	12,5	;volatile
   163  07A6  2FA5               	goto	l24
   164                           
   165                           ;LE6-4-RX.c: 19: data = RCREG;
   166  07A7  081A               	movf	26,w	;volatile
   167  07A8  00F0               	movwf	??_main
   168  07A9  01F1               	clrf	??_main+1
   169  07AA  0870               	movf	??_main,w
   170  07AB  00F4               	movwf	main@data
   171  07AC  0871               	movf	??_main+1,w
   172  07AD  00F5               	movwf	main@data+1
   173                           
   174                           ;LE6-4-RX.c: 21: if(data == '0') output = 0x3F;
   175  07AE  3030               	movlw	48
   176  07AF  0674               	xorwf	main@data,w
   177  07B0  0475               	iorwf	main@data+1,w
   178  07B1  1D03               	skipz
   179  07B2  2FB5               	goto	l526
   180  07B3  303F               	movlw	63
   181  07B4  2FF3               	goto	L9
   182  07B5                     l526:	
   183                           
   184                           ;LE6-4-RX.c: 22: else if(data == '1') output = 0x06;
   185  07B5  3031               	movlw	49
   186  07B6  0674               	xorwf	main@data,w
   187  07B7  0475               	iorwf	main@data+1,w
   188  07B8  1D03               	skipz
   189  07B9  2FBC               	goto	l530
   190  07BA  3006               	movlw	6
   191  07BB  2FF3               	goto	L9
   192  07BC                     l530:	
   193                           
   194                           ;LE6-4-RX.c: 23: else if(data == '2') output = 0x5B;
   195  07BC  3032               	movlw	50
   196  07BD  0674               	xorwf	main@data,w
   197  07BE  0475               	iorwf	main@data+1,w
   198  07BF  1D03               	skipz
   199  07C0  2FC3               	goto	l534
   200  07C1  305B               	movlw	91
   201  07C2  2FF3               	goto	L9
   202  07C3                     l534:	
   203                           
   204                           ;LE6-4-RX.c: 24: else if(data == '3') output = 0x4F;
   205  07C3  3033               	movlw	51
   206  07C4  0674               	xorwf	main@data,w
   207  07C5  0475               	iorwf	main@data+1,w
   208  07C6  1D03               	skipz
   209  07C7  2FCA               	goto	l538
   210  07C8  304F               	movlw	79
   211  07C9  2FF3               	goto	L9
   212  07CA                     l538:	
   213                           
   214                           ;LE6-4-RX.c: 25: else if(data == '4') output = 0x66;
   215  07CA  3034               	movlw	52
   216  07CB  0674               	xorwf	main@data,w
   217  07CC  0475               	iorwf	main@data+1,w
   218  07CD  1D03               	skipz
   219  07CE  2FD1               	goto	l542
   220  07CF  3066               	movlw	102
   221  07D0  2FF3               	goto	L9
   222  07D1                     l542:	
   223                           
   224                           ;LE6-4-RX.c: 26: else if(data == '5') output = 0x6D;
   225  07D1  3035               	movlw	53
   226  07D2  0674               	xorwf	main@data,w
   227  07D3  0475               	iorwf	main@data+1,w
   228  07D4  1D03               	skipz
   229  07D5  2FD8               	goto	l546
   230  07D6  306D               	movlw	109
   231  07D7  2FF3               	goto	L9
   232  07D8                     l546:	
   233                           
   234                           ;LE6-4-RX.c: 27: else if(data == '6') output = 0x7D;
   235  07D8  3036               	movlw	54
   236  07D9  0674               	xorwf	main@data,w
   237  07DA  0475               	iorwf	main@data+1,w
   238  07DB  1D03               	skipz
   239  07DC  2FDF               	goto	l550
   240  07DD  307D               	movlw	125
   241  07DE  2FF3               	goto	L9
   242  07DF                     l550:	
   243                           
   244                           ;LE6-4-RX.c: 28: else if(data == '7') output = 0x07;
   245  07DF  3037               	movlw	55
   246  07E0  0674               	xorwf	main@data,w
   247  07E1  0475               	iorwf	main@data+1,w
   248  07E2  1D03               	skipz
   249  07E3  2FE6               	goto	l554
   250  07E4  3007               	movlw	7
   251  07E5  2FF3               	goto	L9
   252  07E6                     l554:	
   253                           
   254                           ;LE6-4-RX.c: 29: else if(data == '8') output = 0x7F;
   255  07E6  3038               	movlw	56
   256  07E7  0674               	xorwf	main@data,w
   257  07E8  0475               	iorwf	main@data+1,w
   258  07E9  1D03               	skipz
   259  07EA  2FED               	goto	l558
   260  07EB  307F               	movlw	127
   261  07EC  2FF3               	goto	L9
   262  07ED                     l558:	
   263                           
   264                           ;LE6-4-RX.c: 30: else if(data == '9') output = 0x6F;
   265  07ED  3039               	movlw	57
   266  07EE  0674               	xorwf	main@data,w
   267  07EF  0475               	iorwf	main@data+1,w
   268  07F0  1D03               	skipz
   269  07F1  2FF7               	goto	l562
   270  07F2  306F               	movlw	111
   271  07F3                     L9:	
   272  07F3  00F2               	movwf	main@output
   273  07F4  3000               	movlw	0
   274  07F5  00F3               	movwf	main@output+1
   275  07F6  2FF9               	goto	l564
   276  07F7                     l562:	
   277                           
   278                           ;LE6-4-RX.c: 31: else output = 0x00;
   279  07F7  01F2               	clrf	main@output
   280  07F8  01F3               	clrf	main@output+1
   281  07F9                     l564:	
   282                           
   283                           ;LE6-4-RX.c: 33: PORTB = output;
   284  07F9  0872               	movf	main@output,w
   285  07FA  0086               	movwf	6	;volatile
   286  07FB  2FA5               	goto	l24
   287  07FC                     __end_of_main:	
   288  007E                     btemp	set	126	;btemp
   289  007E                     wtemp	set	126
   290  007E                     wtemp0	set	126
   291  0080                     wtemp1	set	128
   292  0082                     wtemp2	set	130
   293  0084                     wtemp3	set	132
   294  0086                     wtemp4	set	134
   295  0088                     wtemp5	set	136
   296  007F                     wtemp6	set	127
   297  007E                     ttemp	set	126
   298  007E                     ttemp0	set	126
   299  0081                     ttemp1	set	129
   300  0084                     ttemp2	set	132
   301  0087                     ttemp3	set	135
   302  007F                     ttemp4	set	127
   303  007E                     ltemp	set	126
   304  007E                     ltemp0	set	126
   305  0082                     ltemp1	set	130
   306  0086                     ltemp2	set	134
   307  0080                     ltemp3	set	128
   308                           
   309                           	psect	cinit
   310  07FC                     start_initialization:	
   311                           ;psect for function _main
   312                           
   313  07FC                     __initialization:	
   314  07FC                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  07FC                     __end_of__initialization:	
   318  07FC  0183               	clrf	3
   319  07FD  120A  118A  2F90   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	cstackCOMMON
   322  0070                     __pcstackCOMMON:	
   323  0070                     ?_main:	
   324  0070                     ??_main:	
   325                           ; 0 bytes @ 0x0
   326                           
   327                           
   328                           ; 0 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     main@output:	
   331                           
   332                           ; 2 bytes @ 0x2
   333  0072                     	ds	2
   334  0074                     main@data:	
   335                           
   336                           ; 2 bytes @ 0x4
   337  0074                     	ds	2


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     165
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Apr 11 20:16:53 2025

                     l24 07A5                      l530 07BC                      l550 07DF  
                    l542 07D1                      l534 07C3                      l526 07B5  
                    l562 07F7                      l554 07E6                      l546 07D8  
                    l538 07CA                      l564 07F9                      l558 07ED  
                    _RX9 00C6                     _BRGH 04C2                     _CREN 00C4  
                   _RCIF 0065                     _SPEN 00C7                     _SYNC 04C4  
                   _main 0790                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0790     end_of_initialization 07FC               main@output 0072  
    start_initialization 07FC                ___latbits 0002            __size_of_main 006C  
               main@data 0074  
