

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Apr 11 20:17:43 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001D                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  010E                     	;# 
    67  010F                     	;# 
    68  018C                     	;# 
    69  018D                     	;# 
    70  0006                     _PORTB	set	6
    71  0019                     _TXREG	set	25
    72  0034                     _RB4	set	52
    73  00C7                     _SPEN	set	199
    74  0099                     _SPBRG	set	153
    75  0086                     _TRISB	set	134
    76  04C2                     _BRGH	set	1218
    77  04C4                     _SYNC	set	1220
    78  04C1                     _TRMT	set	1217
    79  04C6                     _TX9	set	1222
    80  04C5                     _TXEN	set	1221
    81                           
    82                           	psect	text0
    83  0000                     __ptext0:	
    84                           ; #config settings
    85                           
    86                           
    87                           	psect	cinit
    88  07FC                     start_initialization:	
    89                           ;psect for function _checkInput
    90                           
    91  07FC                     __initialization:	
    92  07FC                     end_of_initialization:	
    93                           ;End of C runtime variable initialization code
    94                           
    95  07FC                     __end_of__initialization:	
    96  07FC  0183               	clrf	3
    97  07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
    98                           
    99                           	psect	cstackCOMMON
   100  0070                     __pcstackCOMMON:	
   101  0070                     ?_main:	
   102  0070                     ?_checkInput:	
   103                           ; 0 bytes @ 0x0
   104                           
   105                           
   106                           ; 2 bytes @ 0x0
   107  0070                     	ds	2
   108  0072                     ??_checkInput:	
   109                           
   110                           ; 0 bytes @ 0x2
   111  0072                     	ds	2
   112  0074                     checkInput@output:	
   113                           
   114                           ; 2 bytes @ 0x4
   115  0074                     	ds	2
   116  0076                     checkInput@input:	
   117                           
   118                           ; 2 bytes @ 0x6
   119  0076                     	ds	2
   120  0078                     ??_main:	
   121                           
   122                           	psect	maintext
   123  0774                     __pmaintext:	
   124                           ; 0 bytes @ 0x8
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 7 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical A
      +ctivity #6\LE6-4-TX\LE6-4-TX.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;		None               void
   137 ;; Registers used:
   138 ;;		wreg, status,2, status,0, pclath, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 17F/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   144 ;;      Params:         0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0
   147 ;;      Totals:         0       0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called:    1
   150 ;; This function calls:
   151 ;;		_checkInput
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           
   158                           ;psect for function _main
   159  0774                     _main:	
   160                           
   161                           ;LE6-4-TX.c: 9: SPBRG = 0x19;
   162                           
   163                           ;incstack = 0
   164                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   165  0774  3019               	movlw	25
   166  0775  1683               	bsf	3,5	;RP0=1, select bank1
   167  0776  1303               	bcf	3,6	;RP1=0, select bank1
   168  0777  0099               	movwf	25	;volatile
   169                           
   170                           ;LE6-4-TX.c: 11: SYNC = 0;
   171  0778  1218               	bcf	24,4	;volatile
   172                           
   173                           ;LE6-4-TX.c: 12: SPEN = 1;
   174  0779  1283               	bcf	3,5	;RP0=0, select bank0
   175  077A  1303               	bcf	3,6	;RP1=0, select bank0
   176  077B  1798               	bsf	24,7	;volatile
   177                           
   178                           ;LE6-4-TX.c: 13: TX9 = 0;
   179  077C  1683               	bsf	3,5	;RP0=1, select bank1
   180  077D  1303               	bcf	3,6	;RP1=0, select bank1
   181  077E  1318               	bcf	24,6	;volatile
   182                           
   183                           ;LE6-4-TX.c: 14: BRGH = 1;
   184  077F  1518               	bsf	24,2	;volatile
   185                           
   186                           ;LE6-4-TX.c: 15: TXEN = 1;
   187  0780  1698               	bsf	24,5	;volatile
   188                           
   189                           ;LE6-4-TX.c: 17: TRISB = 0xFF;
   190  0781  30FF               	movlw	255
   191  0782  0086               	movwf	6	;volatile
   192  0783                     l586:	
   193                           ;LE6-4-TX.c: 19: while(1)
   194                           
   195                           
   196                           ;LE6-4-TX.c: 20: {
   197                           ;LE6-4-TX.c: 21: if(RB4 == 1) {
   198  0783  1283               	bcf	3,5	;RP0=0, select bank0
   199  0784  1E06               	btfss	6,4	;volatile
   200  0785  2F83               	goto	l586
   201  0786                     l29:	
   202                           ;LE6-4-TX.c: 23: while(!TRMT);
   203                           
   204  0786  1683               	bsf	3,5	;RP0=1, select bank1
   205  0787  1303               	bcf	3,6	;RP1=0, select bank1
   206  0788  1C98               	btfss	24,1	;volatile
   207  0789  2F86               	goto	l29
   208                           
   209                           ;LE6-4-TX.c: 24: TXREG = checkInput();
   210  078A  120A  118A  2796  120A  118A  	fcall	_checkInput
   211  078F  0870               	movf	?_checkInput,w
   212  0790  1283               	bcf	3,5	;RP0=0, select bank0
   213  0791  1303               	bcf	3,6	;RP1=0, select bank0
   214  0792  0099               	movwf	25	;volatile
   215  0793                     l32:	
   216                           ;LE6-4-TX.c: 25: while(RB4 == 1);
   217                           
   218  0793  1E06               	btfss	6,4	;volatile
   219  0794  2F83               	goto	l586
   220  0795  2F93               	goto	l32
   221  0796                     __end_of_main:	
   222                           
   223                           	psect	text1
   224  0796                     __ptext1:	
   225 ;; *************** function _checkInput *****************
   226 ;; Defined at:
   227 ;;		line 32 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practical Activities\Practical 
      +Activity #6\LE6-4-TX\LE6-4-TX.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  input           2    6[COMMON] int 
   232 ;;  output          2    4[COMMON] int 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  2    0[COMMON] int 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         2       0       0       0       0
   243 ;;      Locals:         4       0       0       0       0
   244 ;;      Temps:          2       0       0       0       0
   245 ;;      Totals:         8       0       0       0       0
   246 ;;Total ram usage:        8 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           
   256                           ;psect for function _checkInput
   257  0796                     _checkInput:	
   258                           
   259                           ;LE6-4-TX.c: 33: int input, output;
   260                           ;LE6-4-TX.c: 34: input = PORTB & 0x0F;
   261                           
   262                           ;incstack = 0
   263                           ; Regs used in _checkInput: [wreg+status,2+status,0]
   264  0796  1283               	bcf	3,5	;RP0=0, select bank0
   265  0797  1303               	bcf	3,6	;RP1=0, select bank0
   266  0798  0806               	movf	6,w	;volatile
   267  0799  390F               	andlw	15
   268  079A  00F2               	movwf	??_checkInput
   269  079B  01F3               	clrf	??_checkInput+1
   270  079C  0872               	movf	??_checkInput,w
   271  079D  00F6               	movwf	checkInput@input
   272  079E  0873               	movf	??_checkInput+1,w
   273  079F  00F7               	movwf	checkInput@input+1
   274                           
   275                           ;LE6-4-TX.c: 36: if (input == 0x00) output = '1';
   276  07A0  0877               	movf	checkInput@input+1,w
   277  07A1  0476               	iorwf	checkInput@input,w
   278  07A2  1D03               	skipz
   279  07A3  2FA6               	goto	l526
   280  07A4  3031               	movlw	49
   281  07A5  2FF2               	goto	L11
   282  07A6                     l526:	
   283                           
   284                           ;LE6-4-TX.c: 37: else if (input == 0x01) output = '2';
   285  07A6  3001               	movlw	1
   286  07A7  0676               	xorwf	checkInput@input,w
   287  07A8  0477               	iorwf	checkInput@input+1,w
   288  07A9  1D03               	skipz
   289  07AA  2FAD               	goto	l530
   290  07AB  3032               	movlw	50
   291  07AC  2FF2               	goto	L11
   292  07AD                     l530:	
   293                           
   294                           ;LE6-4-TX.c: 38: else if (input == 0x02) output = '3';
   295  07AD  3002               	movlw	2
   296  07AE  0676               	xorwf	checkInput@input,w
   297  07AF  0477               	iorwf	checkInput@input+1,w
   298  07B0  1D03               	skipz
   299  07B1  2FB4               	goto	l534
   300  07B2  3033               	movlw	51
   301  07B3  2FF2               	goto	L11
   302  07B4                     l534:	
   303                           
   304                           ;LE6-4-TX.c: 39: else if (input == 0x04) output = '4';
   305  07B4  3004               	movlw	4
   306  07B5  0676               	xorwf	checkInput@input,w
   307  07B6  0477               	iorwf	checkInput@input+1,w
   308  07B7  1D03               	skipz
   309  07B8  2FBB               	goto	l538
   310  07B9  3034               	movlw	52
   311  07BA  2FF2               	goto	L11
   312  07BB                     l538:	
   313                           
   314                           ;LE6-4-TX.c: 40: else if (input == 0x05) output = '5';
   315  07BB  3005               	movlw	5
   316  07BC  0676               	xorwf	checkInput@input,w
   317  07BD  0477               	iorwf	checkInput@input+1,w
   318  07BE  1D03               	skipz
   319  07BF  2FC2               	goto	l542
   320  07C0  3035               	movlw	53
   321  07C1  2FF2               	goto	L11
   322  07C2                     l542:	
   323                           
   324                           ;LE6-4-TX.c: 41: else if (input == 0x06) output = '6';
   325  07C2  3006               	movlw	6
   326  07C3  0676               	xorwf	checkInput@input,w
   327  07C4  0477               	iorwf	checkInput@input+1,w
   328  07C5  1D03               	skipz
   329  07C6  2FC9               	goto	l546
   330  07C7  3036               	movlw	54
   331  07C8  2FF2               	goto	L11
   332  07C9                     l546:	
   333                           
   334                           ;LE6-4-TX.c: 42: else if (input == 0x08) output = '7';
   335  07C9  3008               	movlw	8
   336  07CA  0676               	xorwf	checkInput@input,w
   337  07CB  0477               	iorwf	checkInput@input+1,w
   338  07CC  1D03               	skipz
   339  07CD  2FD0               	goto	l550
   340  07CE  3037               	movlw	55
   341  07CF  2FF2               	goto	L11
   342  07D0                     l550:	
   343                           
   344                           ;LE6-4-TX.c: 43: else if (input == 0x09) output = '8';
   345  07D0  3009               	movlw	9
   346  07D1  0676               	xorwf	checkInput@input,w
   347  07D2  0477               	iorwf	checkInput@input+1,w
   348  07D3  1D03               	skipz
   349  07D4  2FD7               	goto	l554
   350  07D5  3038               	movlw	56
   351  07D6  2FF2               	goto	L11
   352  07D7                     l554:	
   353                           
   354                           ;LE6-4-TX.c: 44: else if (input == 0x0A) output = '9';
   355  07D7  300A               	movlw	10
   356  07D8  0676               	xorwf	checkInput@input,w
   357  07D9  0477               	iorwf	checkInput@input+1,w
   358  07DA  1D03               	skipz
   359  07DB  2FDE               	goto	l558
   360  07DC  3039               	movlw	57
   361  07DD  2FF2               	goto	L11
   362  07DE                     l558:	
   363                           
   364                           ;LE6-4-TX.c: 45: else if (input == 0x0C) output = '*';
   365  07DE  300C               	movlw	12
   366  07DF  0676               	xorwf	checkInput@input,w
   367  07E0  0477               	iorwf	checkInput@input+1,w
   368  07E1  1D03               	skipz
   369  07E2  2FE5               	goto	l562
   370  07E3  302A               	movlw	42
   371  07E4  2FF2               	goto	L11
   372  07E5                     l562:	
   373                           
   374                           ;LE6-4-TX.c: 46: else if (input == 0x0D) output = '0';
   375  07E5  300D               	movlw	13
   376  07E6  0676               	xorwf	checkInput@input,w
   377  07E7  0477               	iorwf	checkInput@input+1,w
   378  07E8  1D03               	skipz
   379  07E9  2FEC               	goto	l566
   380  07EA  3030               	movlw	48
   381  07EB  2FF2               	goto	L11
   382  07EC                     l566:	
   383                           
   384                           ;LE6-4-TX.c: 47: else if (input == 0x0E) output = '#';
   385  07EC  300E               	movlw	14
   386  07ED  0676               	xorwf	checkInput@input,w
   387  07EE  0477               	iorwf	checkInput@input+1,w
   388  07EF  1D03               	skipz
   389  07F0  2FF5               	goto	l570
   390  07F1  3023               	movlw	35
   391  07F2                     L11:	
   392  07F2  00F4               	movwf	checkInput@output
   393  07F3  3000               	movlw	0
   394  07F4  00F5               	movwf	checkInput@output+1
   395  07F5                     l570:	
   396                           
   397                           ;LE6-4-TX.c: 49: return output;
   398  07F5  0875               	movf	checkInput@output+1,w
   399  07F6  01F1               	clrf	?_checkInput+1
   400  07F7  07F1               	addwf	?_checkInput+1,f
   401  07F8  0874               	movf	checkInput@output,w
   402  07F9  01F0               	clrf	?_checkInput
   403  07FA  07F0               	addwf	?_checkInput,f
   404  07FB  0008               	return
   405  07FC                     __end_of_checkInput:	
   406  007E                     btemp	set	126	;btemp
   407  007E                     wtemp	set	126
   408  007E                     wtemp0	set	126
   409  0080                     wtemp1	set	128
   410  0082                     wtemp2	set	130
   411  0084                     wtemp3	set	132
   412  0086                     wtemp4	set	134
   413  0088                     wtemp5	set	136
   414  007F                     wtemp6	set	127
   415  007E                     ttemp	set	126
   416  007E                     ttemp0	set	126
   417  0081                     ttemp1	set	129
   418  0084                     ttemp2	set	132
   419  0087                     ttemp3	set	135
   420  007F                     ttemp4	set	127
   421  007E                     ltemp	set	126
   422  007E                     ltemp0	set	126
   423  0082                     ltemp1	set	130
   424  0086                     ltemp2	set	134
   425  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_checkInput

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     195
                         _checkInput
 ---------------------------------------------------------------------------------
 (1) _checkInput                                           8     6      2     195
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Apr 11 20:17:43 2025

                     l32 0793                       l29 0786                      l530 07AD  
                    l550 07D0                      l542 07C2                      l534 07B4  
                    l526 07A6                      l562 07E5                      l554 07D7  
                    l546 07C9                      l538 07BB                      l570 07F5  
                    l566 07EC                      l558 07DE                      l586 0783  
                    _RB4 0034                      _TX9 04C6                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4                     _main 0774                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E                    ?_main 0070                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TXREG 0019  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FC  
           __end_of_main 0796                   ??_main 0078  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               _checkInput 0796               __pmaintext 0774  
                __ptext0 0000                  __ptext1 0796              ?_checkInput 0070  
   end_of_initialization 07FC      __size_of_checkInput 0066      start_initialization 07FC  
              ___latbits 0002             ??_checkInput 0072       __end_of_checkInput 07FC  
       checkInput@output 0074            __size_of_main 0022          checkInput@input 0076  
