

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed May 07 16:16:27 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0017                     _CCP1CON	set	23
    74  0015                     _CCPR1L	set	21
    75  0012                     _T2CON	set	18
    76  0011                     _TMR2	set	17
    77  0061                     _TMR2IF	set	97
    78  0092                     _PR2	set	146
    79  043A                     _TRISC2	set	1082
    80                           
    81                           	psect	text0
    82  0000                     __ptext0:	
    83                           ; #config settings
    84                           
    85                           
    86                           ;psect for function _PWM_Init
    87  0000                     
    88                           	psect	cinit
    89  07FB                     start_initialization:	
    90  07FB                     __initialization:	
    91                           
    92                           ; Clear objects allocated to COMMON
    93  07FB  01F7               	clrf	__pbssCOMMON& (0+127)
    94  07FC                     end_of_initialization:	
    95                           ;End of C runtime variable initialization code
    96                           
    97  07FC                     __end_of__initialization:	
    98  07FC  0183               	clrf	3
    99  07FD  120A  118A  2FAE   	ljmp	_main	;jump to C main() function
   100                           
   101                           	psect	bssCOMMON
   102  0077                     __pbssCOMMON:	
   103  0077                     _false_flag:	
   104  0077                     	ds	1
   105                           
   106                           	psect	cstackCOMMON
   107  0070                     __pcstackCOMMON:	
   108  0070                     ?_PWM_Init:	
   109  0070                     ??_PWM_Init:	
   110                           ; 0 bytes @ 0x0
   111                           
   112  0070                     ?_PWM_Set_Duty:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     ?_moveServo90:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ?_main:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     PWM_Set_Duty@duty:	
   122                           ; 0 bytes @ 0x0
   123                           
   124                           
   125                           ; 2 bytes @ 0x0
   126  0070                     	ds	2
   127  0072                     ??_PWM_Set_Duty:	
   128                           
   129                           ; 0 bytes @ 0x2
   130  0072                     	ds	2
   131  0074                     ??_moveServo90:	
   132                           
   133                           ; 0 bytes @ 0x4
   134  0074                     	ds	3
   135  0077                     ??_main:	
   136                           
   137                           	psect	maintext
   138  07AE                     __pmaintext:	
   139                           ; 0 bytes @ 0x7
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 39 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final Project\PWM test code\PWM
      +.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;		None               void
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, pclath, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 17F/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   159 ;;      Params:         0       0       0       0       0
   160 ;;      Locals:         0       0       0       0       0
   161 ;;      Temps:          0       0       0       0       0
   162 ;;      Totals:         0       0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels required when called:    2
   165 ;; This function calls:
   166 ;;		_PWM_Init
   167 ;;		_moveServo90
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           
   174                           ;psect for function _main
   175  07AE                     _main:	
   176                           
   177                           ;PWM.c: 40: PWM_Init();
   178                           
   179                           ;incstack = 0
   180                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   181  07AE  120A  118A  279F  120A  118A  	fcall	_PWM_Init
   182  07B3                     l513:	
   183                           ;PWM.c: 42: while (1) {
   184                           
   185                           
   186                           ;PWM.c: 43: if (false_flag == 1) {
   187  07B3  0877               	movf	_false_flag,w
   188  07B4  3A01               	xorlw	1
   189  07B5  1D03               	skipz
   190  07B6  2FB3               	goto	l513
   191                           
   192                           ;PWM.c: 44: moveServo90();
   193  07B7  120A  118A  27BE  120A  118A  	fcall	_moveServo90
   194                           
   195                           ;PWM.c: 45: false_flag = 0;
   196  07BC  01F7               	clrf	_false_flag
   197  07BD  2FB3               	goto	l513
   198  07BE                     __end_of_main:	
   199                           
   200                           	psect	text1
   201  07BE                     __ptext1:	
   202 ;; *************** function _moveServo90 *****************
   203 ;; Defined at:
   204 ;;		line 32 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final Project\PWM test code\PWM
      +.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;		None               void
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, pclath, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   218 ;;      Params:         0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0
   220 ;;      Temps:          3       0       0       0       0
   221 ;;      Totals:         3       0       0       0       0
   222 ;;Total ram usage:        3 bytes
   223 ;; Hardware stack levels used:    1
   224 ;; Hardware stack levels required when called:    1
   225 ;; This function calls:
   226 ;;		_PWM_Set_Duty
   227 ;; This function is called by:
   228 ;;		_main
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           
   233                           ;psect for function _moveServo90
   234  07BE                     _moveServo90:	
   235                           
   236                           ;PWM.c: 33: PWM_Set_Duty(307);
   237                           
   238                           ;incstack = 0
   239                           ; Regs used in _moveServo90: [wreg+status,2+status,0+pclath+cstack]
   240  07BE  3033               	movlw	51
   241  07BF  00F0               	movwf	PWM_Set_Duty@duty
   242  07C0  3001               	movlw	1
   243  07C1  00F1               	movwf	PWM_Set_Duty@duty+1
   244  07C2  120A  118A  27D8  120A  118A  	fcall	_PWM_Set_Duty
   245                           
   246                           ;PWM.c: 34: _delay((unsigned long)((500)*(4000000/4000.0)));
   247  07C7  3003               	movlw	3
   248  07C8  00F6               	movwf	??_moveServo90+2
   249  07C9  308A               	movlw	138
   250  07CA  00F5               	movwf	??_moveServo90+1
   251  07CB  3056               	movlw	86
   252  07CC  00F4               	movwf	??_moveServo90
   253  07CD                     u57:	
   254  07CD  0BF4               	decfsz	??_moveServo90,f
   255  07CE  2FCD               	goto	u57
   256  07CF  0BF5               	decfsz	??_moveServo90+1,f
   257  07D0  2FCD               	goto	u57
   258  07D1  0BF6               	decfsz	??_moveServo90+2,f
   259  07D2  2FCD               	goto	u57
   260  07D3  2FD4               	nop2
   261                           
   262                           ;PWM.c: 36: CCP1CON = 0;
   263  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   264  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   265  07D6  0197               	clrf	23	;volatile
   266  07D7  0008               	return
   267  07D8                     __end_of_moveServo90:	
   268                           
   269                           	psect	text2
   270  07D8                     __ptext2:	
   271 ;; *************** function _PWM_Set_Duty *****************
   272 ;; Defined at:
   273 ;;		line 25 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final Project\PWM test code\PWM
      +.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;  duty            2    0[COMMON] unsigned int 
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;		None               void
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         2       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0
   290 ;;      Totals:         4       0       0       0       0
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_moveServo90
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _PWM_Set_Duty
   302  07D8                     _PWM_Set_Duty:	
   303                           
   304                           ;PWM.c: 26: if (duty < 1024) {
   305                           
   306                           ;incstack = 0
   307                           ; Regs used in _PWM_Set_Duty: [wreg+status,2+status,0]
   308  07D8  3004               	movlw	4
   309  07D9  0271               	subwf	PWM_Set_Duty@duty+1,w
   310  07DA  3000               	movlw	0
   311  07DB  1903               	skipnz
   312  07DC  0270               	subwf	PWM_Set_Duty@duty,w
   313  07DD  1803               	skipnc
   314  07DE  0008               	return
   315                           
   316                           ;PWM.c: 27: CCPR1L = duty >> 2;
   317  07DF  0871               	movf	PWM_Set_Duty@duty+1,w
   318  07E0  00F3               	movwf	??_PWM_Set_Duty+1
   319  07E1  0870               	movf	PWM_Set_Duty@duty,w
   320  07E2  00F2               	movwf	??_PWM_Set_Duty
   321  07E3  1003               	clrc
   322  07E4  0CF3               	rrf	??_PWM_Set_Duty+1,f
   323  07E5  0CF2               	rrf	??_PWM_Set_Duty,f
   324  07E6  1003               	clrc
   325  07E7  0CF3               	rrf	??_PWM_Set_Duty+1,f
   326  07E8  0CF2               	rrf	??_PWM_Set_Duty,f
   327  07E9  0872               	movf	??_PWM_Set_Duty,w
   328  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   329  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   330  07EC  0095               	movwf	21	;volatile
   331                           
   332                           ;PWM.c: 28: CCP1CON = (CCP1CON & 0xCF) | ((duty & 0x03) << 4);
   333  07ED  0870               	movf	PWM_Set_Duty@duty,w
   334  07EE  3903               	andlw	3
   335  07EF  00F2               	movwf	??_PWM_Set_Duty
   336  07F0  3004               	movlw	4
   337  07F1                     u25:	
   338  07F1  1003               	clrc
   339  07F2  0DF2               	rlf	??_PWM_Set_Duty,f
   340  07F3  3EFF               	addlw	-1
   341  07F4  1D03               	skipz
   342  07F5  2FF1               	goto	u25
   343  07F6  0817               	movf	23,w	;volatile
   344  07F7  39CF               	andlw	207
   345  07F8  0472               	iorwf	??_PWM_Set_Duty,w
   346  07F9  0097               	movwf	23	;volatile
   347  07FA  0008               	return
   348  07FB                     __end_of_PWM_Set_Duty:	
   349                           
   350                           	psect	text3
   351  079F                     __ptext3:	
   352 ;; *************** function _PWM_Init *****************
   353 ;; Defined at:
   354 ;;		line 15 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final Project\PWM test code\PWM
      +.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;		None               void
   361 ;; Registers used:
   362 ;;		wreg, status,2
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0
   371 ;;      Totals:         0       0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _PWM_Init
   383  079F                     _PWM_Init:	
   384                           
   385                           ;PWM.c: 16: TRISC2 = 0;
   386                           
   387                           ;incstack = 0
   388                           ; Regs used in _PWM_Init: [wreg+status,2]
   389  079F  1683               	bsf	3,5	;RP0=1, select bank1
   390  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   391  07A1  1107               	bcf	7,2	;volatile
   392                           
   393                           ;PWM.c: 17: PR2 = 249;
   394  07A2  30F9               	movlw	249
   395  07A3  0092               	movwf	18	;volatile
   396                           
   397                           ;PWM.c: 19: CCP1CON = 0b00001100;
   398  07A4  300C               	movlw	12
   399  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   400  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   401  07A7  0097               	movwf	23	;volatile
   402                           
   403                           ;PWM.c: 20: T2CON = 0b00000101;
   404  07A8  3005               	movlw	5
   405  07A9  0092               	movwf	18	;volatile
   406                           
   407                           ;PWM.c: 21: TMR2 = 0;
   408  07AA  0191               	clrf	17	;volatile
   409  07AB                     l21:	
   410                           ;PWM.c: 22: while (!TMR2IF);
   411                           
   412  07AB  188C               	btfsc	12,1	;volatile
   413  07AC  0008               	return
   414  07AD  2FAB               	goto	l21
   415  07AE                     __end_of_PWM_Init:	
   416  007E                     btemp	set	126	;btemp
   417  007E                     wtemp	set	126
   418  007E                     wtemp0	set	126
   419  0080                     wtemp1	set	128
   420  0082                     wtemp2	set	130
   421  0084                     wtemp3	set	132
   422  0086                     wtemp4	set	134
   423  0088                     wtemp5	set	136
   424  007F                     wtemp6	set	127
   425  007E                     ttemp	set	126
   426  007E                     ttemp0	set	126
   427  0081                     ttemp1	set	129
   428  0084                     ttemp2	set	132
   429  0087                     ttemp3	set	135
   430  007F                     ttemp4	set	127
   431  007E                     ltemp	set	126
   432  007E                     ltemp0	set	126
   433  0082                     ltemp1	set	130
   434  0086                     ltemp2	set	134
   435  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_moveServo90
    _moveServo90->_PWM_Set_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      88
                           _PWM_Init
                        _moveServo90
 ---------------------------------------------------------------------------------
 (1) _moveServo90                                          3     3      0      88
                                              4 COMMON     3     3      0
                       _PWM_Set_Duty
 ---------------------------------------------------------------------------------
 (2) _PWM_Set_Duty                                         4     2      2      88
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Init
   _moveServo90
     _PWM_Set_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed May 07 16:16:27 2025

            __CFG_CP$OFF 0000    __size_of_PWM_Set_Duty 0023                       l21 07AB  
                     u25 07F1                       u57 07CD                      l513 07B3  
                    _PR2 0092             __CFG_CPD$OFF 0000             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     _TMR2 0011             __CFG_WRT$OFF 0000  
                   _main 07AE                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0000                     ttemp 007E  
           _PWM_Set_Duty 07D8                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _T2CON 0012         PWM_Set_Duty@duty 0070  
          __CFG_PWRTE$ON 0000         __end_of_PWM_Init 07AE                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FB             __end_of_main 07BE  
                 ??_main 0077                   _CCPR1L 0015             ?_moveServo90 0070  
                 _TMR2IF 0061                   _TRISC2 043A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_PWM_Init 0070               __pmaintext 07AE  
             _false_flag 0077                  _CCP1CON 0017               ??_PWM_Init 0070  
   __size_of_moveServo90 001A                  __ptext0 0000                  __ptext1 07BE  
                __ptext2 07D8                  __ptext3 079F     end_of_initialization 07FC  
      __size_of_PWM_Init 000F      start_initialization 07FB            ?_PWM_Set_Duty 0070  
            __pbssCOMMON 0077                ___latbits 0002           ??_PWM_Set_Duty 0072  
          ??_moveServo90 0074                 _PWM_Init 079F      __end_of_moveServo90 07D8  
   __end_of_PWM_Set_Duty 07FB            __size_of_main 0010              _moveServo90 07BE  
