

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Mar 10 13:55:06 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0007                     _PORTC	set	7
    80  0008                     _PORTD	set	8
    81  005F                     _GIE	set	95
    82  005C                     _INTE	set	92
    83  0059                     _INTF	set	89
    84  0034                     _RB4	set	52
    85  0035                     _RB5	set	53
    86  0036                     _RB6	set	54
    87  0044                     _RD4	set	68
    88  005D                     _TMR0IE	set	93
    89  005A                     _TMR0IF	set	90
    90  0081                     _OPTION_REG	set	129
    91  0086                     _TRISB	set	134
    92  0087                     _TRISC	set	135
    93  0088                     _TRISD	set	136
    94                           
    95                           	psect	text0
    96  0000                     __ptext0:	
    97                           ; #config settings
    98                           
    99                           
   100                           	psect	cinit
   101  0015                     start_initialization:	
   102                           ;psect for function _ISR
   103                           
   104  0015                     __initialization:	
   105                           
   106                           ; Clear objects allocated to COMMON
   107  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  0016  01AE               	clrf	__pbssBANK0& (0+127)
   111  0017  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   112  0018                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0018                     __end_of__initialization:	
   116  0018  0183               	clrf	3
   117  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMMON
   120  0078                     __pbssCOMMON:	
   121  0078                     _count_flag:	
   122  0078                     	ds	1
   123                           
   124                           	psect	bssBANK0
   125  002E                     __pbssBANK0:	
   126  002E                     _btn_flag:	
   127  002E                     	ds	1
   128  002F                     _key:	
   129  002F                     	ds	1
   130                           
   131                           	psect	cstackCOMMON
   132  0070                     __pcstackCOMMON:	
   133  0070                     ?_ISR:	
   134  0070                     ??_ISR:	
   135                           ; 0 bytes @ 0x0
   136                           
   137  0070                     ?_dataCtrl:	
   138                           ; 0 bytes @ 0x0
   139                           
   140  0070                     ?_instCtrl:	
   141                           ; 0 bytes @ 0x0
   142                           
   143  0070                     ?_initLCD:	
   144                           ; 0 bytes @ 0x0
   145                           
   146  0070                     ?_main:	
   147                           ; 0 bytes @ 0x0
   148                           
   149                           
   150                           ; 0 bytes @ 0x0
   151  0070                     	ds	5
   152  0075                     ?_delay:	
   153  0075                     ?_delay_lcd:	
   154                           ; 0 bytes @ 0x5
   155                           
   156  0075                     delay@num:	
   157                           ; 0 bytes @ 0x5
   158                           
   159  0075                     delay_lcd@cnt:	
   160                           ; 2 bytes @ 0x5
   161                           
   162                           
   163                           ; 2 bytes @ 0x5
   164  0075                     	ds	2
   165  0077                     ??_delay:	
   166  0077                     ??_delay_lcd:	
   167                           ; 0 bytes @ 0x7
   168                           
   169  0077                     ??_dataCtrl:	
   170                           ; 0 bytes @ 0x7
   171                           
   172  0077                     ??_instCtrl:	
   173                           ; 0 bytes @ 0x7
   174                           
   175  0077                     dataCtrl@DATA:	
   176                           ; 0 bytes @ 0x7
   177                           
   178  0077                     instCtrl@INST:	
   179                           ; 1 bytes @ 0x7
   180                           
   181                           
   182                           ; 1 bytes @ 0x7
   183  0077                     	ds	1
   184  0078                     ??_initLCD:	
   185                           
   186                           	psect	cstackBANK0
   187  0020                     __pcstackBANK0:	
   188                           ; 0 bytes @ 0x8
   189                           
   190  0020                     delay@flags:	
   191  0020                     delay_lcd@i:	
   192                           ; 2 bytes @ 0x0
   193                           
   194                           
   195                           ; 2 bytes @ 0x0
   196  0020                     	ds	2
   197  0022                     delay_lcd@j:	
   198                           
   199                           ; 2 bytes @ 0x2
   200  0022                     	ds	2
   201  0024                     ??_main:	
   202                           
   203                           ; 0 bytes @ 0x4
   204  0024                     	ds	1
   205  0025                     main@speed:	
   206                           
   207                           ; 2 bytes @ 0x5
   208  0025                     	ds	2
   209  0027                     main@key_flag:	
   210                           
   211                           ; 1 bytes @ 0x7
   212  0027                     	ds	1
   213  0028                     main@direction:	
   214                           
   215                           ; 2 bytes @ 0x8
   216  0028                     	ds	2
   217  002A                     main@MSB:	
   218                           
   219                           ; 2 bytes @ 0xA
   220  002A                     	ds	2
   221  002C                     main@LSB:	
   222                           
   223                           ; 2 bytes @ 0xC
   224  002C                     	ds	2
   225                           
   226                           	psect	maintext
   227  001C                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 67 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  LSB             2   12[BANK0 ] int 
   238 ;;  MSB             2   10[BANK0 ] int 
   239 ;;  direction       2    8[BANK0 ] int 
   240 ;;  speed           2    5[BANK0 ] int 
   241 ;;  key_flag        1    7[BANK0 ] unsigned char 
   242 ;;  mode            1    0        unsigned char 
   243 ;; Return value:  Size  Location     Type
   244 ;;		None               void
   245 ;; Registers used:
   246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   247 ;; Tracked objects:
   248 ;;		On entry : 17F/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       9       0       0       0
   254 ;;      Temps:          0       1       0       0       0
   255 ;;      Totals:         0      10       0       0       0
   256 ;;Total ram usage:       10 bytes
   257 ;; Hardware stack levels required when called:    4
   258 ;; This function calls:
   259 ;;		_dataCtrl
   260 ;;		_delay
   261 ;;		_initLCD
   262 ;;		_instCtrl
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           
   269                           ;psect for function _main
   270  001C                     _main:	
   271                           
   272                           ;twnty.c: 69: int speed = 0;
   273                           
   274                           ;incstack = 0
   275                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   276  001C  1283               	bcf	3,5	;RP0=0, select bank0
   277  001D  1303               	bcf	3,6	;RP1=0, select bank0
   278  001E  01A5               	clrf	main@speed
   279  001F  01A6               	clrf	main@speed+1
   280                           
   281                           ;twnty.c: 70: unsigned char mode;
   282                           ;twnty.c: 72: TRISB = 0x0F;
   283  0020  300F               	movlw	15
   284  0021  1683               	bsf	3,5	;RP0=1, select bank1
   285  0022  1303               	bcf	3,6	;RP1=0, select bank1
   286  0023  0086               	movwf	6	;volatile
   287                           
   288                           ;twnty.c: 73: TRISC = 0x00;
   289  0024  0187               	clrf	7	;volatile
   290                           
   291                           ;twnty.c: 74: TRISD = 0xFF;
   292  0025  30FF               	movlw	255
   293  0026  0088               	movwf	8	;volatile
   294                           
   295                           ;twnty.c: 75: OPTION_REG = 0xC4;
   296  0027  30C4               	movlw	196
   297  0028  0081               	movwf	1	;volatile
   298                           
   299                           ;twnty.c: 76: INTE = 1;
   300  0029  160B               	bsf	11,4	;volatile
   301                           
   302                           ;twnty.c: 77: INTF = 0;
   303  002A  108B               	bcf	11,1	;volatile
   304                           
   305                           ;twnty.c: 78: TMR0IE = 1;
   306  002B  168B               	bsf	11,5	;volatile
   307                           
   308                           ;twnty.c: 79: TMR0IF = 0;
   309  002C  110B               	bcf	11,2	;volatile
   310                           
   311                           ;twnty.c: 80: GIE = 1;
   312  002D  178B               	bsf	11,7	;volatile
   313                           
   314                           ;twnty.c: 82: int MSB = 2;
   315  002E  3002               	movlw	2
   316  002F  1283               	bcf	3,5	;RP0=0, select bank0
   317  0030  1303               	bcf	3,6	;RP1=0, select bank0
   318  0031  00AA               	movwf	main@MSB
   319  0032  3000               	movlw	0
   320  0033  00AB               	movwf	main@MSB+1
   321                           
   322                           ;twnty.c: 83: int LSB = 4;
   323  0034  3004               	movlw	4
   324  0035  00AC               	movwf	main@LSB
   325  0036  3000               	movlw	0
   326  0037  00AD               	movwf	main@LSB+1
   327                           
   328                           ;twnty.c: 85: initLCD();
   329  0038  120A  118A  215A  120A  118A  	fcall	_initLCD
   330                           
   331                           ;twnty.c: 86: instCtrl(0xC8);
   332  003D  30C8               	movlw	200
   333  003E  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   334                           
   335                           ;twnty.c: 87: dataCtrl(MSB + '0');
   336  0043  1283               	bcf	3,5	;RP0=0, select bank0
   337  0044  1303               	bcf	3,6	;RP1=0, select bank0
   338  0045  082A               	movf	main@MSB,w
   339  0046  3E30               	addlw	48
   340  0047  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   341                           
   342                           ;twnty.c: 88: instCtrl(0xC9);
   343  004C  30C9               	movlw	201
   344  004D  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   345                           
   346                           ;twnty.c: 89: dataCtrl(LSB + '0');
   347  0052  1283               	bcf	3,5	;RP0=0, select bank0
   348  0053  1303               	bcf	3,6	;RP1=0, select bank0
   349  0054  082C               	movf	main@LSB,w
   350  0055  3E30               	addlw	48
   351  0056  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   352                           
   353                           ;twnty.c: 91: int direction = 0;
   354  005B  1283               	bcf	3,5	;RP0=0, select bank0
   355  005C  1303               	bcf	3,6	;RP1=0, select bank0
   356  005D  01A8               	clrf	main@direction
   357  005E  01A9               	clrf	main@direction+1
   358                           
   359                           ;twnty.c: 92: unsigned char key_flag = 0;
   360  005F  01A7               	clrf	main@key_flag
   361  0060  287F               	goto	l883
   362  0061                     l885:	
   363                           
   364                           ;twnty.c: 96: instCtrl(0xC8);
   365  0061  30C8               	movlw	200
   366  0062  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   367                           
   368                           ;twnty.c: 97: dataCtrl(MSB + '0');
   369  0067  1283               	bcf	3,5	;RP0=0, select bank0
   370  0068  1303               	bcf	3,6	;RP1=0, select bank0
   371  0069  082A               	movf	main@MSB,w
   372  006A  3E30               	addlw	48
   373  006B  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   374                           
   375                           ;twnty.c: 98: instCtrl(0xC9);
   376  0070  30C9               	movlw	201
   377  0071  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   378                           
   379                           ;twnty.c: 99: dataCtrl(LSB + '0');
   380  0076  1283               	bcf	3,5	;RP0=0, select bank0
   381  0077  1303               	bcf	3,6	;RP1=0, select bank0
   382  0078  082C               	movf	main@LSB,w
   383  0079  3E30               	addlw	48
   384  007A  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   385  007F                     l883:	
   386                           ;twnty.c: 94: while (1) {
   387                           
   388                           ;twnty.c: 100: } else if (btn_flag == 1) {
   389                           
   390                           
   391                           ;twnty.c: 95: if (btn_flag == 0) {
   392  007F  1283               	bcf	3,5	;RP0=0, select bank0
   393  0080  1303               	bcf	3,6	;RP1=0, select bank0
   394  0081  08AE               	movf	_btn_flag,f
   395  0082  1903               	btfsc	3,2
   396  0083  2861               	goto	l885
   397  0084  1283               	bcf	3,5	;RP0=0, select bank0
   398  0085  1303               	bcf	3,6	;RP1=0, select bank0
   399  0086  082E               	movf	_btn_flag,w
   400  0087  3A01               	xorlw	1
   401  0088  1D03               	skipz
   402  0089  287F               	goto	l883
   403                           
   404                           ;twnty.c: 102: if (RD4) {
   405  008A  1E08               	btfss	8,4	;volatile
   406  008B  28A2               	goto	l901
   407                           
   408                           ;twnty.c: 103: key = PORTD & 0x0F;
   409  008C  0808               	movf	8,w	;volatile
   410  008D  390F               	andlw	15
   411  008E  00A4               	movwf	??_main
   412  008F  0824               	movf	??_main,w
   413  0090  00AF               	movwf	_key
   414                           
   415                           ;twnty.c: 105: switch (key) {
   416  0091  289A               	goto	l899
   417  0092                     l893:	
   418                           ;twnty.c: 106: case 0x0C:
   419                           
   420                           
   421                           ;twnty.c: 107: direction = 1;
   422  0092  3001               	movlw	1
   423  0093  00A8               	movwf	main@direction
   424  0094  3000               	movlw	0
   425  0095  00A9               	movwf	main@direction+1
   426                           
   427                           ;twnty.c: 108: break;
   428  0096  28A2               	goto	l901
   429  0097                     l895:	
   430                           ;twnty.c: 109: case 0x0E:
   431                           
   432                           
   433                           ;twnty.c: 110: direction = 0;
   434  0097  01A8               	clrf	main@direction
   435  0098  01A9               	clrf	main@direction+1
   436                           
   437                           ;twnty.c: 112: }
   438                           
   439                           ;twnty.c: 111: break;
   440  0099  28A2               	goto	l901
   441  009A                     l899:	
   442  009A  082F               	movf	_key,w
   443                           
   444                           ; Switch size 1, requested type "space"
   445                           ; Number of cases is 2, Range of values is 12 to 14
   446                           ; switch strategies available:
   447                           ; Name         Instructions Cycles
   448                           ; simple_byte            7     4 (average)
   449                           ; direct_byte           20    11 (fixed)
   450                           ; jumptable            263     9 (fixed)
   451                           ;	Chosen strategy is simple_byte
   452  009B  3A0C               	xorlw	12	; case 12
   453  009C  1903               	skipnz
   454  009D  2892               	goto	l893
   455  009E  3A02               	xorlw	2	; case 14
   456  009F  1903               	skipnz
   457  00A0  2897               	goto	l895
   458  00A1  28A2               	goto	l901
   459  00A2                     l901:	
   460                           
   461                           ;twnty.c: 113: }
   462                           ;twnty.c: 114: if (direction == 0) {
   463  00A2  0829               	movf	main@direction+1,w
   464  00A3  0428               	iorwf	main@direction,w
   465  00A4  1D03               	skipz
   466  00A5  28CC               	goto	l915
   467                           
   468                           ;twnty.c: 115: if (MSB == 0 && LSB == 0) {
   469  00A6  082B               	movf	main@MSB+1,w
   470  00A7  042A               	iorwf	main@MSB,w
   471  00A8  1D03               	skipz
   472  00A9  28B7               	goto	l909
   473  00AA  082D               	movf	main@LSB+1,w
   474  00AB  042C               	iorwf	main@LSB,w
   475  00AC  1D03               	skipz
   476  00AD  28B7               	goto	l909
   477                           
   478                           ;twnty.c: 116: LSB = 4;
   479  00AE  3004               	movlw	4
   480  00AF  00AC               	movwf	main@LSB
   481  00B0  3000               	movlw	0
   482  00B1  00AD               	movwf	main@LSB+1
   483                           
   484                           ;twnty.c: 117: MSB = 2;
   485  00B2  3002               	movlw	2
   486  00B3  00AA               	movwf	main@MSB
   487  00B4  3000               	movlw	0
   488  00B5  00AB               	movwf	main@MSB+1
   489                           
   490                           ;twnty.c: 118: } else if (LSB == 0) {
   491  00B6  2901               	goto	l929
   492  00B7                     l909:	
   493  00B7  082D               	movf	main@LSB+1,w
   494  00B8  042C               	iorwf	main@LSB,w
   495  00B9  1D03               	skipz
   496  00BA  28C6               	goto	l913
   497                           
   498                           ;twnty.c: 119: MSB -= 1;
   499  00BB  30FF               	movlw	255
   500  00BC  07AA               	addwf	main@MSB,f
   501  00BD  1803               	skipnc
   502  00BE  0AAB               	incf	main@MSB+1,f
   503  00BF  30FF               	movlw	255
   504  00C0  07AB               	addwf	main@MSB+1,f
   505                           
   506                           ;twnty.c: 120: LSB = 9;
   507  00C1  3009               	movlw	9
   508  00C2  00AC               	movwf	main@LSB
   509  00C3  3000               	movlw	0
   510  00C4  00AD               	movwf	main@LSB+1
   511                           
   512                           ;twnty.c: 121: } else {
   513  00C5  2901               	goto	l929
   514  00C6                     l913:	
   515                           
   516                           ;twnty.c: 122: LSB -= 1;
   517  00C6  30FF               	movlw	255
   518  00C7  07AC               	addwf	main@LSB,f
   519  00C8  1803               	skipnc
   520  00C9  0AAD               	incf	main@LSB+1,f
   521  00CA  30FF               	movlw	255
   522  00CB  2900               	goto	L1
   523  00CC                     l915:	
   524                           ;twnty.c: 123: }
   525                           ;twnty.c: 124: } else {
   526                           
   527                           
   528                           ;twnty.c: 125: if (MSB >= 2 && LSB >= 4) {
   529  00CC  082B               	movf	main@MSB+1,w
   530  00CD  3A80               	xorlw	128
   531  00CE  00FF               	movwf	127
   532  00CF  3080               	movlw	128
   533  00D0  027F               	subwf	127,w
   534  00D1  1D03               	skipz
   535  00D2  28D5               	goto	u465
   536  00D3  3002               	movlw	2
   537  00D4  022A               	subwf	main@MSB,w
   538  00D5                     u465:	
   539  00D5  1C03               	skipc
   540  00D6  28EB               	goto	l921
   541  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   542  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   543  00D9  082D               	movf	main@LSB+1,w
   544  00DA  3A80               	xorlw	128
   545  00DB  00FF               	movwf	127
   546  00DC  3080               	movlw	128
   547  00DD  027F               	subwf	127,w
   548  00DE  1D03               	skipz
   549  00DF  28E2               	goto	u475
   550  00E0  3004               	movlw	4
   551  00E1  022C               	subwf	main@LSB,w
   552  00E2                     u475:	
   553  00E2  1C03               	skipc
   554  00E3  28EB               	goto	l921
   555                           
   556                           ;twnty.c: 126: LSB = 0;
   557  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   558  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   559  00E6  01AC               	clrf	main@LSB
   560  00E7  01AD               	clrf	main@LSB+1
   561                           
   562                           ;twnty.c: 127: MSB = 0;
   563  00E8  01AA               	clrf	main@MSB
   564  00E9  01AB               	clrf	main@MSB+1
   565                           
   566                           ;twnty.c: 128: } else if (LSB == 9) {
   567  00EA  2901               	goto	l929
   568  00EB                     l921:	
   569  00EB  3009               	movlw	9
   570  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   571  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   572  00EE  062C               	xorwf	main@LSB,w
   573  00EF  042D               	iorwf	main@LSB+1,w
   574  00F0  1D03               	skipz
   575  00F1  28FB               	goto	l927
   576                           
   577                           ;twnty.c: 129: LSB = 0;
   578  00F2  01AC               	clrf	main@LSB
   579  00F3  01AD               	clrf	main@LSB+1
   580                           
   581                           ;twnty.c: 130: MSB += 1;
   582  00F4  3001               	movlw	1
   583  00F5  07AA               	addwf	main@MSB,f
   584  00F6  1803               	skipnc
   585  00F7  0AAB               	incf	main@MSB+1,f
   586  00F8  3000               	movlw	0
   587  00F9  07AB               	addwf	main@MSB+1,f
   588                           
   589                           ;twnty.c: 131: } else {
   590  00FA  2901               	goto	l929
   591  00FB                     l927:	
   592                           
   593                           ;twnty.c: 132: LSB += 1;
   594  00FB  3001               	movlw	1
   595  00FC  07AC               	addwf	main@LSB,f
   596  00FD  1803               	skipnc
   597  00FE  0AAD               	incf	main@LSB+1,f
   598  00FF  3000               	movlw	0
   599  0100                     L1:	
   600  0100  07AD               	addwf	main@LSB+1,f
   601  0101                     l929:	
   602                           
   603                           ;twnty.c: 133: }
   604                           ;twnty.c: 134: }
   605                           ;twnty.c: 136: instCtrl(0xC9);
   606  0101  30C9               	movlw	201
   607  0102  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   608                           
   609                           ;twnty.c: 137: dataCtrl(LSB + '0');
   610  0107  1283               	bcf	3,5	;RP0=0, select bank0
   611  0108  1303               	bcf	3,6	;RP1=0, select bank0
   612  0109  082C               	movf	main@LSB,w
   613  010A  3E30               	addlw	48
   614  010B  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   615                           
   616                           ;twnty.c: 138: instCtrl(0xC8);
   617  0110  30C8               	movlw	200
   618  0111  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   619                           
   620                           ;twnty.c: 139: dataCtrl(MSB + '0');
   621  0116  1283               	bcf	3,5	;RP0=0, select bank0
   622  0117  1303               	bcf	3,6	;RP1=0, select bank0
   623  0118  082A               	movf	main@MSB,w
   624  0119  3E30               	addlw	48
   625  011A  120A  118A  21C6  120A  118A  	fcall	_dataCtrl
   626                           
   627                           ;twnty.c: 140: delay(31);
   628  011F  301F               	movlw	31
   629  0120  00F5               	movwf	delay@num
   630  0121  3000               	movlw	0
   631  0122  00F6               	movwf	delay@num+1
   632  0123  120A  118A  217A  120A  118A  	fcall	_delay
   633  0128                     l939:	
   634                           ;twnty.c: 142: while (btn_flag == 0) {}
   635                           
   636  0128  1283               	bcf	3,5	;RP0=0, select bank0
   637  0129  1303               	bcf	3,6	;RP1=0, select bank0
   638  012A  082E               	movf	_btn_flag,w
   639  012B  1903               	btfsc	3,2
   640  012C  2928               	goto	l939
   641  012D  287F               	goto	l883
   642  012E                     __end_of_main:	
   643                           
   644                           	psect	text1
   645  015A                     __ptext1:	
   646 ;; *************** function _initLCD *****************
   647 ;; Defined at:
   648 ;;		line 59 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;		None               void
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    3
   669 ;; This function calls:
   670 ;;		_delay_lcd
   671 ;;		_instCtrl
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _initLCD
   679  015A                     _initLCD:	
   680                           
   681                           ;twnty.c: 60: delay_lcd(1);
   682                           
   683                           ;incstack = 0
   684                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   685  015A  3001               	movlw	1
   686  015B  00F5               	movwf	delay_lcd@cnt
   687  015C  3000               	movlw	0
   688  015D  00F6               	movwf	delay_lcd@cnt+1
   689  015E  120A  118A  212E  120A  118A  	fcall	_delay_lcd
   690                           
   691                           ;twnty.c: 61: instCtrl(0x38);
   692  0163  3038               	movlw	56
   693  0164  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   694                           
   695                           ;twnty.c: 62: instCtrl(0x01);
   696  0169  3001               	movlw	1
   697  016A  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   698                           
   699                           ;twnty.c: 63: instCtrl(0x06);
   700  016F  3006               	movlw	6
   701  0170  120A  118A  21B3  120A  118A  	fcall	_instCtrl
   702                           
   703                           ;twnty.c: 64: instCtrl(0x0E);
   704  0175  300E               	movlw	14
   705  0176  120A  118A  21B3   	fcall	_instCtrl
   706  0179  0008               	return
   707  017A                     __end_of_initLCD:	
   708                           
   709                           	psect	text2
   710  01B3                     __ptext2:	
   711 ;; *************** function _instCtrl *****************
   712 ;; Defined at:
   713 ;;		line 50 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  INST            1    wreg     unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  INST            1    7[COMMON] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;		None               void
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         1       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0
   730 ;;      Totals:         1       0       0       0       0
   731 ;;Total ram usage:        1 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    2
   734 ;; This function calls:
   735 ;;		_delay_lcd
   736 ;; This function is called by:
   737 ;;		_initLCD
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _instCtrl
   744  01B3                     _instCtrl:	
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   748                           ;instCtrl@INST stored from wreg
   749  01B3  00F7               	movwf	instCtrl@INST
   750                           
   751                           ;twnty.c: 51: PORTC=INST;
   752  01B4  0877               	movf	instCtrl@INST,w
   753  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   754  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   755  01B7  0087               	movwf	7	;volatile
   756                           
   757                           ;twnty.c: 52: RB4=0;
   758  01B8  1206               	bcf	6,4	;volatile
   759                           
   760                           ;twnty.c: 53: RB6=0;
   761  01B9  1306               	bcf	6,6	;volatile
   762                           
   763                           ;twnty.c: 54: RB5=1;
   764  01BA  1686               	bsf	6,5	;volatile
   765                           
   766                           ;twnty.c: 55: delay_lcd(200);
   767  01BB  30C8               	movlw	200
   768  01BC  00F5               	movwf	delay_lcd@cnt
   769  01BD  3000               	movlw	0
   770  01BE  00F6               	movwf	delay_lcd@cnt+1
   771  01BF  120A  118A  212E   	fcall	_delay_lcd
   772                           
   773                           ;twnty.c: 56: RB5=0;
   774  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   775  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   776  01C4  1286               	bcf	6,5	;volatile
   777  01C5  0008               	return
   778  01C6                     __end_of_instCtrl:	
   779                           
   780                           	psect	text3
   781  017A                     __ptext3:	
   782 ;; *************** function _delay *****************
   783 ;; Defined at:
   784 ;;		line 23 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  num             2    5[COMMON] int 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  flags           2    0[BANK0 ] int 
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         2       0       0       0       0
   799 ;;      Locals:         0       2       0       0       0
   800 ;;      Temps:          1       0       0       0       0
   801 ;;      Totals:         3       2       0       0       0
   802 ;;Total ram usage:        5 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _delay
   814  017A                     _delay:	
   815                           
   816                           ;twnty.c: 25: int flags = 0;
   817                           
   818                           ;incstack = 0
   819                           ; Regs used in _delay: [wreg+status,2]
   820  017A  1283               	bcf	3,5	;RP0=0, select bank0
   821  017B  1303               	bcf	3,6	;RP1=0, select bank0
   822  017C  01A0               	clrf	delay@flags
   823  017D  01A1               	clrf	delay@flags+1
   824  017E                     l741:	
   825                           ;twnty.c: 27: while (flags < num) {
   826                           
   827  017E  1283               	bcf	3,5	;RP0=0, select bank0
   828  017F  1303               	bcf	3,6	;RP1=0, select bank0
   829  0180  0821               	movf	delay@flags+1,w
   830  0181  3A80               	xorlw	128
   831  0182  00F7               	movwf	??_delay
   832  0183  0876               	movf	delay@num+1,w
   833  0184  3A80               	xorlw	128
   834  0185  0277               	subwf	??_delay,w
   835  0186  1D03               	skipz
   836  0187  298A               	goto	u255
   837  0188  0875               	movf	delay@num,w
   838  0189  0220               	subwf	delay@flags,w
   839  018A                     u255:	
   840  018A  1803               	btfsc	3,0
   841  018B  0008               	return
   842                           
   843                           ;twnty.c: 28: if(count_flag) {
   844  018C  0878               	movf	_count_flag,w
   845  018D  1903               	btfsc	3,2
   846  018E  297E               	goto	l741
   847                           
   848                           ;twnty.c: 29: count_flag = 0;
   849  018F  01F8               	clrf	_count_flag
   850                           
   851                           ;twnty.c: 30: flags++;
   852  0190  3001               	movlw	1
   853  0191  1283               	bcf	3,5	;RP0=0, select bank0
   854  0192  1303               	bcf	3,6	;RP1=0, select bank0
   855  0193  07A0               	addwf	delay@flags,f
   856  0194  1803               	skipnc
   857  0195  0AA1               	incf	delay@flags+1,f
   858  0196  3000               	movlw	0
   859  0197  07A1               	addwf	delay@flags+1,f
   860  0198  297E               	goto	l741
   861  0199                     __end_of_delay:	
   862                           
   863                           	psect	text4
   864  01C6                     __ptext4:	
   865 ;; *************** function _dataCtrl *****************
   866 ;; Defined at:
   867 ;;		line 41 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  DATA            1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  DATA            1    7[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    2
   888 ;; This function calls:
   889 ;;		_delay_lcd
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _dataCtrl
   897  01C6                     _dataCtrl:	
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   901                           ;dataCtrl@DATA stored from wreg
   902  01C6  00F7               	movwf	dataCtrl@DATA
   903                           
   904                           ;twnty.c: 42: PORTC=DATA;
   905  01C7  0877               	movf	dataCtrl@DATA,w
   906  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   907  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   908  01CA  0087               	movwf	7	;volatile
   909                           
   910                           ;twnty.c: 43: RB4=1;
   911  01CB  1606               	bsf	6,4	;volatile
   912                           
   913                           ;twnty.c: 44: RB6=0;
   914  01CC  1306               	bcf	6,6	;volatile
   915                           
   916                           ;twnty.c: 45: RB5=1;
   917  01CD  1686               	bsf	6,5	;volatile
   918                           
   919                           ;twnty.c: 46: delay_lcd(200);
   920  01CE  30C8               	movlw	200
   921  01CF  00F5               	movwf	delay_lcd@cnt
   922  01D0  3000               	movlw	0
   923  01D1  00F6               	movwf	delay_lcd@cnt+1
   924  01D2  120A  118A  212E   	fcall	_delay_lcd
   925                           
   926                           ;twnty.c: 47: RB5=0;
   927  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   928  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   929  01D7  1286               	bcf	6,5	;volatile
   930  01D8  0008               	return
   931  01D9                     __end_of_dataCtrl:	
   932                           
   933                           	psect	text5
   934  012E                     __ptext5:	
   935 ;; *************** function _delay_lcd *****************
   936 ;; Defined at:
   937 ;;		line 35 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  cnt             2    5[COMMON] int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  j               2    2[BANK0 ] int 
   942 ;;  i               2    0[BANK0 ] int 
   943 ;; Return value:  Size  Location     Type
   944 ;;		None               void
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, btemp+1
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         2       0       0       0       0
   953 ;;      Locals:         0       4       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         2       4       0       0       0
   956 ;;Total ram usage:        6 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_dataCtrl
   963 ;;		_instCtrl
   964 ;;		_initLCD
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _delay_lcd
   970  012E                     _delay_lcd:	
   971                           
   972                           ;twnty.c: 36: int i, j;
   973                           ;twnty.c: 37: for (i = cnt; i != 0; i--);
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _delay_lcd: [wreg+status,2+status,0+btemp+1]
   977  012E  0876               	movf	delay_lcd@cnt+1,w
   978  012F  1283               	bcf	3,5	;RP0=0, select bank0
   979  0130  1303               	bcf	3,6	;RP1=0, select bank0
   980  0131  01A1               	clrf	delay_lcd@i+1
   981  0132  07A1               	addwf	delay_lcd@i+1,f
   982  0133  0875               	movf	delay_lcd@cnt,w
   983  0134  01A0               	clrf	delay_lcd@i
   984  0135  07A0               	addwf	delay_lcd@i,f
   985  0136  0821               	movf	delay_lcd@i+1,w
   986  0137  0420               	iorwf	delay_lcd@i,w
   987  0138  1903               	btfsc	3,2
   988  0139  2944               	goto	l711
   989  013A                     l707:	
   990  013A  30FF               	movlw	255
   991  013B  07A0               	addwf	delay_lcd@i,f
   992  013C  1803               	skipnc
   993  013D  0AA1               	incf	delay_lcd@i+1,f
   994  013E  30FF               	movlw	255
   995  013F  07A1               	addwf	delay_lcd@i+1,f
   996  0140  0821               	movf	delay_lcd@i+1,w
   997  0141  0420               	iorwf	delay_lcd@i,w
   998  0142  1D03               	skipz
   999  0143  293A               	goto	l707
  1000  0144                     l711:	
  1001                           
  1002                           ;twnty.c: 38: for (j = 0; j < 1000; j++);
  1003  0144  01A2               	clrf	delay_lcd@j
  1004  0145  01A3               	clrf	delay_lcd@j+1
  1005  0146                     L2:	
  1006  0146  0823               	movf	delay_lcd@j+1,w
  1007  0147  3A80               	xorlw	128
  1008  0148  00FF               	movwf	127
  1009  0149  3083               	movlw	131
  1010  014A  027F               	subwf	127,w
  1011  014B  1D03               	skipz
  1012  014C  294F               	goto	u225
  1013  014D  30E8               	movlw	232
  1014  014E  0222               	subwf	delay_lcd@j,w
  1015  014F                     u225:	
  1016  014F  1803               	btfsc	3,0
  1017  0150  0008               	return
  1018  0151  3001               	movlw	1
  1019  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0154  07A2               	addwf	delay_lcd@j,f
  1022  0155  1803               	skipnc
  1023  0156  0AA3               	incf	delay_lcd@j+1,f
  1024  0157  3000               	movlw	0
  1025  0158  07A3               	addwf	delay_lcd@j+1,f
  1026  0159  2946               	goto	L2
  1027  015A                     __end_of_delay_lcd:	
  1028                           
  1029                           	psect	text6
  1030  0199                     __ptext6:	
  1031 ;; *************** function _ISR *****************
  1032 ;; Defined at:
  1033 ;;		line 7 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\24\twnty.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0
  1049 ;;      Temps:          5       0       0       0       0
  1050 ;;      Totals:         5       0       0       0       0
  1051 ;;Total ram usage:        5 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		Interrupt level 1
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           
  1061                           ;psect for function _ISR
  1062  0199                     _ISR:	
  1063                           
  1064                           ;twnty.c: 9: GIE = 0;
  1065  0199  138B               	bcf	11,7	;volatile
  1066                           
  1067                           ;twnty.c: 11: if(INTF) {
  1068  019A  1C8B               	btfss	11,1	;volatile
  1069  019B  29A2               	goto	i1l39
  1070                           
  1071                           ;twnty.c: 12: INTF = 0;
  1072  019C  108B               	bcf	11,1	;volatile
  1073                           
  1074                           ;twnty.c: 13: btn_flag ^= 1;
  1075  019D  3001               	movlw	1
  1076  019E  00F0               	movwf	??_ISR
  1077  019F  0870               	movf	??_ISR,w
  1078  01A0  06AE               	xorwf	_btn_flag,f
  1079                           
  1080                           ;twnty.c: 14: }
  1081  01A1  29A7               	goto	i1l40
  1082  01A2                     i1l39:	
  1083                           
  1084                           ;twnty.c: 15: else if(TMR0IF) {
  1085  01A2  1D0B               	btfss	11,2	;volatile
  1086  01A3  29A7               	goto	i1l40
  1087                           
  1088                           ;twnty.c: 16: TMR0IF = 0;
  1089  01A4  110B               	bcf	11,2	;volatile
  1090                           
  1091                           ;twnty.c: 17: count_flag = 1;
  1092  01A5  01F8               	clrf	_count_flag
  1093  01A6  0AF8               	incf	_count_flag,f
  1094  01A7                     i1l40:	
  1095                           
  1096                           ;twnty.c: 18: }
  1097                           ;twnty.c: 19: GIE = 1;
  1098  01A7  178B               	bsf	11,7	;volatile
  1099  01A8  0874               	movf	??_ISR+4,w
  1100  01A9  00FF               	movwf	127
  1101  01AA  0873               	movf	??_ISR+3,w
  1102  01AB  008A               	movwf	10
  1103  01AC  0872               	movf	??_ISR+2,w
  1104  01AD  0084               	movwf	4
  1105  01AE  0E71               	swapf	(??_ISR+1)^(0+-128),w
  1106  01AF  0083               	movwf	3
  1107  01B0  0EFE               	swapf	126,f
  1108  01B1  0E7E               	swapf	126,w
  1109  01B2  0009               	retfie
  1110  01B3                     __end_of_ISR:	
  1111  007E                     btemp	set	126	;btemp
  1112  007E                     wtemp	set	126
  1113  007E                     wtemp0	set	126
  1114  0080                     wtemp1	set	128
  1115  0082                     wtemp2	set	130
  1116  0084                     wtemp3	set	132
  1117  0086                     wtemp4	set	134
  1118  0088                     wtemp5	set	136
  1119  007F                     wtemp6	set	127
  1120  007E                     ttemp	set	126
  1121  007E                     ttemp0	set	126
  1122  0081                     ttemp1	set	129
  1123  0084                     ttemp2	set	132
  1124  0087                     ttemp3	set	135
  1125  007F                     ttemp4	set	127
  1126  007E                     ltemp	set	126
  1127  007E                     ltemp0	set	126
  1128  0082                     ltemp1	set	130
  1129  0086                     ltemp2	set	134
  1130  0080                     ltemp3	set	128
  1131                           
  1132                           	psect	intentry
  1133  0004                     __pintentry:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1136                           
  1137  0004                     interrupt_function:	
  1138  007E                     saved_w	set	btemp
  1139  0004  00FE               	movwf	btemp
  1140  0005  0E03               	swapf	3,w
  1141  0006  00F1               	movwf	??_ISR+1
  1142  0007  0804               	movf	4,w
  1143  0008  00F2               	movwf	??_ISR+2
  1144  0009  080A               	movf	10,w
  1145  000A  00F3               	movwf	??_ISR+3
  1146  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  000D  087F               	movf	btemp+1,w
  1149  000E  00F4               	movwf	??_ISR+4
  1150  000F  120A  118A  2999   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     14      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dataCtrl
    _main->_delay
    _main->_instCtrl
    _initLCD->_instCtrl
    _instCtrl->_delay_lcd
    _dataCtrl->_delay_lcd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _initLCD->_delay_lcd
    _instCtrl->_delay_lcd
    _dataCtrl->_delay_lcd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1711
                                              4 BANK0     10    10      0
                           _dataCtrl
                              _delay
                            _initLCD
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     568
                          _delay_lcd
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     295
                                              7 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2      99
                                              5 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     295
                                              7 COMMON     1     1      0
                          _delay_lcd
 ---------------------------------------------------------------------------------
 (2) _delay_lcd                                            6     4      2     273
                                              5 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dataCtrl
     _delay_lcd
   _delay
   _initLCD
     _delay_lcd
     _instCtrl
       _delay_lcd
   _instCtrl
     _delay_lcd

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Mar 10 13:55:06 2025

                    l711 0144                      l707 013A                      l741 017E  
                    l901 00A2                      l921 00EB                      l913 00C6  
                    l915 00CC                      l909 00B7                      l927 00FB  
                    l929 0101                      l939 0128                      l883 007F  
                    l893 0092                      l885 0061                      l895 0097  
                    l899 009A                      _GIE 005F                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RD4 0044  
                    u225 014F                      u255 018A                      _ISR 0199  
                    u465 00D5                      u475 00E2                      _key 002F  
                    fsr0 0004                     ?_ISR 0070                     _INTE 005C  
                   _INTF 0059                     i1l40 01A7                     i1l39 01A2  
                   _main 001C                     btemp 007E                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0070                    ?_main 0070                    _PORTC 0007  
                  _PORTD 0008             main@key_flag 0027                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_initLCD 017A  
                  _delay 017A                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 012E  
                 ??_main 0024            main@direction 0028                   ?_delay 0075  
                 _TMR0IE 005D                   _TMR0IF 005A         __end_of_dataCtrl 01D9  
       __end_of_instCtrl 01C6                ??_initLCD 0078                   saved_w 007E  
__end_of__initialization 0018           __pcstackCOMMON 0070            __end_of_delay 0199  
     __size_of_delay_lcd 002C                  ??_delay 0077               __pbssBANK0 002E  
             __pmaintext 001C               __pintentry 0004                ?_dataCtrl 0070  
      __end_of_delay_lcd 015A                ?_instCtrl 0070               _count_flag 0078  
                __ptext0 0000                  __ptext1 015A                  __ptext2 01B3  
                __ptext3 017A                  __ptext4 01C6                  __ptext5 012E  
                __ptext6 0199                  _initLCD 015A             __size_of_ISR 001A  
             delay@flags 0020               ??_dataCtrl 0077                  main@LSB 002C  
                main@MSB 002A               delay_lcd@i 0020               delay_lcd@j 0022  
   end_of_initialization 0018               ??_instCtrl 0077             instCtrl@INST 0077  
    start_initialization 0015              __end_of_ISR 01B3             dataCtrl@DATA 0077  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_dataCtrl 0013                _delay_lcd 012E        __size_of_instCtrl 0013  
               ?_initLCD 0070           __size_of_delay 001F        interrupt_function 0004  
             ?_delay_lcd 0075                main@speed 0025             delay_lcd@cnt 0075  
               _dataCtrl 01C6         __size_of_initLCD 0020                 _btn_flag 002E  
          __size_of_main 0112                 _instCtrl 01B3                 delay@num 0075  
            ??_delay_lcd 0077                 intlevel1 0000               _OPTION_REG 0081  
