Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.33\dat\en_msgs.txt -cs \
  -h+premid.sym --cmf=premid.cmf -z -Q16F877A \
  -oC:\Users\MAYOCH~1\AppData\Local\Temp\sc8c.6 -Mpremid.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k startup.obj premid.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
premid.obj      cinit                                15       15        7        8       0
                intentry                              4        4        E        8       0
                text6                               1B1      1B1       18        8       0
                text5                               14C      14C       2C        8       0
                text4                               1DC      1DC       13        8       0
                text3                               198      198       19        8       0
                text2                               1C9      1C9       13        8       0
                text1                               178      178       20        8       0
                maintext                             1C       1C      130        8       0
                cstackBANK0                          20       20        C       20       1
                cstackCOMMON                         70       70        9       70       1
                bssBANK0                             2C       2C        2       20       1
                bssCOMMON                            79       79        1       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15        7         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text6                               1B1      1B1       18         0
                text5                               14C      14C       2C         0
                text4                               1DC      1DC       13         0
                text3                               198      198       19         0
                text2                               1C9      1C9       13         0
                text1                               178      178       20         0
                maintext                             1C       1C      130         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20        C         1
                bssBANK0                             2C       2C        2         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0001EB  0001EF         8       0  CODE        2
                cstackBANK0                    000020  00000E  00002E        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            02E-06F            42           1
        BANK1            0A0-0EF            50           1
        BANK2            110-16F            60           1
        BANK3            190-1EF            60           1
        CODE             003-003             1           2
                         1EF-1FFF           800
        COMMON           07A-07D             4           1
        CONFIG           2007-2007             1           2
        CONST            003-003             1           2
                         1EF-1FFF           100
        EEDATA           2100-21FF           100           2
        ENTRY            003-003             1           2
                         1EF-1FFF           100
        IDLOC            2000-2003             4           2
        RAM              02E-06F            42           1
                         0A0-0EF            50
                         110-16F            60
                         190-1EF            60
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-10F            10           1
        SFR3             180-18F            10           1
        STACK            110-16F            60           1
        STRCODE          003-003             1           2
                         1EF-1FFF          1E11
        STRING           003-003             1           2
                         1EF-1FFF           100

                                  Symbol Table

_GIE                     (abs)        05F
_INTE                    (abs)        05C
_INTF                    (abs)        059
_ISR                     text6        1B1
_OPTION_REG              (abs)        081
_PORTC                   (abs)        007
_PORTD                   (abs)        008
_RB4                     (abs)        034
_RB5                     (abs)        035
_RB6                     (abs)        036
_TMR0IE                  (abs)        05D
_TMR0IF                  (abs)        05A
_TRISB                   (abs)        086
_TRISC                   (abs)        087
_TRISD                   (abs)        088
__Habs1                  abs1         000
__Hbank0                 bank0        000
__Hbank1                 bank1        000
__Hbank2                 bank2        000
__Hbank3                 bank3        000
__HbssBANK0              bssBANK0     000
__HbssCOMMON             bssCOMMON    000
__Hcinit                 cinit        01C
__Hclrtext               clrtext      000
__Hcode                  code         000
__Hcommon                common       000
__Hconfig                config       000
__HcstackBANK0           cstackBANK0  000
__HcstackCOMMON          cstackCOMMON 000
__Heeprom_data           eeprom_data  000
__Hend_init              end_init     015
__Hfunctab               functab      000
__Hidloc                 idloc        000
__Hinit                  init         012
__Hintentry              intentry     012
__Hmaintext              maintext     000
__Hpowerup               powerup      000
__Hram                   ram          000
__Hreset_vec             reset_vec    003
__Hsfr0                  sfr0         000
__Hsfr1                  sfr1         000
__Hsfr2                  sfr2         000
__Hsfr3                  sfr3         000
__Hspace_0               (abs)        1EF
__Hspace_1               (abs)        07A
__Hspace_2               (abs)        000
__Hspace_3               (abs)        000
__Hstack                 stack        000
__Hstrings               strings      000
__Htext                  text         000
__Labs1                  abs1         000
__Lbank0                 bank0        000
__Lbank1                 bank1        000
__Lbank2                 bank2        000
__Lbank3                 bank3        000
__LbssBANK0              bssBANK0     000
__LbssCOMMON             bssCOMMON    000
__Lcinit                 cinit        015
__Lclrtext               clrtext      000
__Lcode                  code         000
__Lcommon                common       000
__Lconfig                config       000
__LcstackBANK0           cstackBANK0  000
__LcstackCOMMON          cstackCOMMON 000
__Leeprom_data           eeprom_data  000
__Lend_init              end_init     012
__Lfunctab               functab      000
__Lidloc                 idloc        000
__Linit                  init         012
__Lintentry              intentry     004
__Lmaintext              maintext     000
__Lpowerup               powerup      000
__Lram                   ram          000
__Lreset_vec             reset_vec    000
__Lsfr0                  sfr0         000
__Lsfr1                  sfr1         000
__Lsfr2                  sfr2         000
__Lsfr3                  sfr3         000
__Lspace_0               (abs)        000
__Lspace_1               (abs)        000
__Lspace_2               (abs)        000
__Lspace_3               (abs)        000
__Lstack                 stack        000
__Lstrings               strings      000
__Ltext                  text         000
__S0                     (abs)        1EF
__S1                     (abs)        07A
__S2                     (abs)        000
__S3                     (abs)        000
___int_sp                stack        000
___latbits               (abs)        002
___sp                    stack        000
__end_of_ISR             text6        1C9
__end_of__initialization cinit        018
__end_of_dataCtrl        text4        1EF
__end_of_delay           text3        1B1
__end_of_delay_lcd       text5        178
__end_of_initLCD         text1        198
__end_of_instCtrl        text2        1DC
__end_of_main            maintext     14C
__initialization         cinit        015
__pbssBANK0              bssBANK0     02C
__pbssCOMMON             bssCOMMON    079
__pcstackBANK0           cstackBANK0  020
__pcstackCOMMON          cstackCOMMON 070
__pintentry              intentry     004
__pmaintext              maintext     01C
__ptext0                 text0        000
__ptext1                 text1        178
__ptext2                 text2        1C9
__ptext3                 text3        198
__ptext4                 text4        1DC
__ptext5                 text5        14C
__ptext6                 text6        1B1
__size_of_ISR            (abs)        000
__size_of_dataCtrl       (abs)        000
__size_of_delay          (abs)        000
__size_of_delay_lcd      (abs)        000
__size_of_initLCD        (abs)        000
__size_of_instCtrl       (abs)        000
__size_of_main           (abs)        000
_btn_flag                bssBANK0     02C
_count_flag              bssCOMMON    079
_dataCtrl                text4        1DC
_delay                   text3        198
_delay_lcd               text5        14C
_initLCD                 text1        178
_instCtrl                text2        1C9
_key                     bssBANK0     02D
_main                    maintext     01C
btemp                    (abs)        07E
dataCtrl@DATA            cstackCOMMON 076
delay@flags              cstackCOMMON 077
delay@num                cstackCOMMON 074
delay_lcd@cnt            cstackCOMMON 074
delay_lcd@i              cstackBANK0  020
delay_lcd@j              cstackBANK0  022
end_of_initialization    cinit        018
instCtrl@INST            cstackCOMMON 076
interrupt_function       intentry     004
intlevel0                functab      000
intlevel1                functab      000
intlevel2                functab      000
intlevel3                functab      000
intlevel4                functab      000
intlevel5                functab      000
ltemp                    (abs)        07E
ltemp0                   (abs)        07E
ltemp1                   (abs)        082
ltemp2                   (abs)        086
ltemp3                   (abs)        080
main@LSB                 cstackBANK0  02A
main@MSB                 cstackBANK0  028
main@mode                cstackBANK0  025
main@speed               cstackBANK0  026
reset_vec                reset_vec    000
saved_w                  (abs)        07E
stackhi                  (abs)        000
stacklo                  (abs)        000
start                    init         012
start_initialization     cinit        015
ttemp                    (abs)        07E
ttemp0                   (abs)        07E
ttemp1                   (abs)        081
ttemp2                   (abs)        084
ttemp3                   (abs)        087
ttemp4                   (abs)        07F
wtemp                    (abs)        07E
wtemp0                   (abs)        07E
wtemp1                   (abs)        080
wtemp2                   (abs)        082
wtemp3                   (abs)        084
wtemp4                   (abs)        086
wtemp5                   (abs)        088
wtemp6                   (abs)        07F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 67 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  LSB             2   10[BANK0 ] int 
  MSB             2    8[BANK0 ] int 
  speed           2    6[BANK0 ] int 
  mode            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_dataCtrl
		_delay
		_initLCD
		_instCtrl
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 59 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_delay_lcd
		_instCtrl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _instCtrl *****************
 Defined at:
		line 50 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
  INST            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  INST            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_delay_lcd
 This function is called by:
		_initLCD
		_main
 This function uses a non-reentrant model


 *************** function _delay *****************
 Defined at:
		line 23 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
  num             2    4[COMMON] int 
 Auto vars:     Size  Location     Type
  flags           2    7[COMMON] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _dataCtrl *****************
 Defined at:
		line 41 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
  DATA            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  DATA            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_delay_lcd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _delay_lcd *****************
 Defined at:
		line 35 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
  cnt             2    4[COMMON] int 
 Auto vars:     Size  Location     Type
  j               2    2[BANK0 ] int 
  i               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       4       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_dataCtrl
		_instCtrl
		_initLCD
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 7 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initializatio		CODE           	0015	0000	3

shared estimated size: 3

D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c
		_delay_lcd     		CODE           	014C	0000	44
		_delay         		CODE           	0198	0000	25
		_ISR           		CODE           	01B1	0000	24
		_main          		CODE           	001C	0000	304
		_instCtrl      		CODE           	01C9	0000	19
		_dataCtrl      		CODE           	01DC	0000	19
		_initLCD       		CODE           	0178	0000	32

D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\PREMID\blink_delay.c estimated size: 467

