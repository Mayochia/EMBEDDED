

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Mar 02 22:34:46 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0005                     _PORTA	set	5
    74  005F                     _GIE	set	95
    75  005C                     _INTE	set	92
    76  0059                     _INTF	set	89
    77  005D                     _T0IE	set	93
    78  005A                     _T0IF	set	90
    79  0081                     _OPTION_REG	set	129
    80  0085                     _TRISA	set	133
    81  0086                     _TRISB	set	134
    82                           
    83                           	psect	text0
    84  0000                     __ptext0:	
    85                           ; #config settings
    86                           
    87                           
    88                           ;psect for function _ISR
    89  0000                     
    90                           	psect	cinit
    91  0015                     start_initialization:	
    92  0015                     __initialization:	
    93                           
    94                           ; Clear objects allocated to BITCOMMON
    95  0015  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    96  0016                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  0016                     __end_of__initialization:	
   100  0016  0183               	clrf	3
   101  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	bitbssCOMMON
   104  03C8                     __pbitbssCOMMON:	
   105  03C8                     _btn_stat:	
   106  03C8                     	ds	1
   107  03C9                     _count_flag:	
   108  03C9                     	ds	1
   109  03CA                     _int_flag:	
   110  03CA                     	ds	1
   111                           
   112                           	psect	cstackCOMMON
   113  0070                     __pcstackCOMMON:	
   114  0070                     ?_ISR:	
   115  0070                     ??_ISR:	
   116                           ; 0 bytes @ 0x0
   117                           
   118  0070                     ?_main:	
   119                           ; 0 bytes @ 0x0
   120                           
   121                           
   122                           ; 0 bytes @ 0x0
   123  0070                     	ds	4
   124  0074                     ?_delay:	
   125  0074                     delay@num:	
   126                           ; 0 bytes @ 0x4
   127                           
   128                           
   129                           ; 2 bytes @ 0x4
   130  0074                     	ds	2
   131  0076                     ??_delay:	
   132                           
   133                           ; 0 bytes @ 0x6
   134  0076                     	ds	1
   135  0077                     delay@flags:	
   136                           
   137                           ; 2 bytes @ 0x7
   138  0077                     	ds	2
   139  0079                     ??_main:	
   140                           
   141                           	psect	maintext
   142  001A                     __pmaintext:	
   143                           ; 0 bytes @ 0x9
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 46 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\blinking\blinking.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;		None               void
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, pclath, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 17F/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   163 ;;      Params:         0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called:    2
   169 ;; This function calls:
   170 ;;		_delay
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           
   177                           ;psect for function _main
   178  001A                     _main:	
   179                           
   180                           ;blinking.c: 47: TRISA = 0x00;
   181                           
   182                           ;incstack = 0
   183                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   184  001A  1683               	bsf	3,5	;RP0=1, select bank1
   185  001B  1303               	bcf	3,6	;RP1=0, select bank1
   186  001C  0185               	clrf	5	;volatile
   187                           
   188                           ;blinking.c: 48: TRISB = 0xFF;
   189  001D  30FF               	movlw	255
   190  001E  0086               	movwf	6	;volatile
   191                           
   192                           ;blinking.c: 50: OPTION_REG = 0x04;
   193  001F  3004               	movlw	4
   194  0020  0081               	movwf	1	;volatile
   195                           
   196                           ;blinking.c: 51: INTE = 1;
   197  0021  160B               	bsf	11,4	;volatile
   198                           
   199                           ;blinking.c: 52: INTF = 0;
   200  0022  108B               	bcf	11,1	;volatile
   201                           
   202                           ;blinking.c: 54: T0IE = 1;
   203  0023  168B               	bsf	11,5	;volatile
   204                           
   205                           ;blinking.c: 55: T0IF = 0;
   206  0024  110B               	bcf	11,2	;volatile
   207                           
   208                           ;blinking.c: 57: GIE = 1;
   209  0025  178B               	bsf	11,7	;volatile
   210                           
   211                           ;blinking.c: 60: PORTA =0x00;
   212  0026  1283               	bcf	3,5	;RP0=0, select bank0
   213  0027  1303               	bcf	3,6	;RP1=0, select bank0
   214  0028  0185               	clrf	5	;volatile
   215  0029                     l532:	
   216                           ;blinking.c: 62: while(1) {
   217                           
   218                           
   219                           ;blinking.c: 63: if(btn_stat == 1){
   220  0029  1C79               	btfss	_btn_stat/(0+8),_btn_stat& (0+7)
   221  002A  2829               	goto	l532
   222                           
   223                           ;blinking.c: 64: PORTA = 0x01;
   224  002B  3001               	movlw	1
   225  002C  1283               	bcf	3,5	;RP0=0, select bank0
   226  002D  1303               	bcf	3,6	;RP1=0, select bank0
   227  002E  0085               	movwf	5	;volatile
   228                           
   229                           ;blinking.c: 65: delay(50);
   230  002F  3032               	movlw	50
   231  0030  00F4               	movwf	delay@num
   232  0031  3000               	movlw	0
   233  0032  00F5               	movwf	delay@num+1
   234  0033  120A  118A  2045  120A  118A  	fcall	_delay
   235                           
   236                           ;blinking.c: 66: PORTA = 0x00;
   237  0038  1283               	bcf	3,5	;RP0=0, select bank0
   238  0039  1303               	bcf	3,6	;RP1=0, select bank0
   239  003A  0185               	clrf	5	;volatile
   240                           
   241                           ;blinking.c: 67: delay(10);
   242  003B  300A               	movlw	10
   243  003C  00F4               	movwf	delay@num
   244  003D  3000               	movlw	0
   245  003E  00F5               	movwf	delay@num+1
   246  003F  120A  118A  2045  120A  118A  	fcall	_delay
   247                           
   248                           ;blinking.c: 69: else {
   249                           
   250                           ;blinking.c: 68: }
   251  0044  2829               	goto	l532
   252  0045                     __end_of_main:	
   253                           
   254                           	psect	text1
   255  0045                     __ptext1:	
   256 ;; *************** function _delay *****************
   257 ;; Defined at:
   258 ;;		line 16 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\blinking\blinking.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;  num             2    4[COMMON] int 
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  flags           2    7[COMMON] int 
   263 ;; Return value:  Size  Location     Type
   264 ;;		None               void
   265 ;; Registers used:
   266 ;;		wreg, status,2
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         2       0       0       0       0
   273 ;;      Locals:         2       0       0       0       0
   274 ;;      Temps:          1       0       0       0       0
   275 ;;      Totals:         5       0       0       0       0
   276 ;;Total ram usage:        5 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; Hardware stack levels required when called:    1
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           
   287                           ;psect for function _delay
   288  0045                     _delay:	
   289                           
   290                           ;blinking.c: 18: int flags = 0;
   291                           
   292                           ;incstack = 0
   293                           ; Regs used in _delay: [wreg+status,2]
   294  0045  01F7               	clrf	delay@flags
   295  0046  01F8               	clrf	delay@flags+1
   296  0047                     l27:	
   297                           ;blinking.c: 20: while (flags < num) {
   298                           
   299  0047  0878               	movf	delay@flags+1,w
   300  0048  3A80               	xorlw	128
   301  0049  00F6               	movwf	??_delay
   302  004A  0875               	movf	delay@num+1,w
   303  004B  3A80               	xorlw	128
   304  004C  0276               	subwf	??_delay,w
   305  004D  1D03               	skipz
   306  004E  2851               	goto	u25
   307  004F  0874               	movf	delay@num,w
   308  0050  0277               	subwf	delay@flags,w
   309  0051                     u25:	
   310  0051  1803               	btfsc	3,0
   311  0052  0008               	return
   312                           
   313                           ;blinking.c: 21: if(count_flag) {
   314  0053  1CF9               	btfss	_count_flag/(0+8),_count_flag& (0+7)
   315  0054  2847               	goto	l27
   316                           
   317                           ;blinking.c: 22: count_flag = 0;
   318  0055  10F9               	bcf	_count_flag/(0+8),_count_flag& (0+7)
   319                           
   320                           ;blinking.c: 23: flags++;
   321  0056  3001               	movlw	1
   322  0057  07F7               	addwf	delay@flags,f
   323  0058  1803               	skipnc
   324  0059  0AF8               	incf	delay@flags+1,f
   325  005A  3000               	movlw	0
   326  005B  07F8               	addwf	delay@flags+1,f
   327  005C  2847               	goto	l27
   328  005D                     __end_of_delay:	
   329                           
   330                           	psect	text2
   331  005D                     __ptext2:	
   332 ;; *************** function _ISR *****************
   333 ;; Defined at:
   334 ;;		line 28 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Practice\blinking\blinking.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;		None               void
   341 ;; Registers used:
   342 ;;		wreg
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0
   350 ;;      Temps:          4       0       0       0       0
   351 ;;      Totals:         4       0       0       0       0
   352 ;;Total ram usage:        4 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		Interrupt level 1
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _ISR
   363  005D                     _ISR:	
   364                           
   365                           ;blinking.c: 30: GIE = 0;
   366  005D  138B               	bcf	11,7	;volatile
   367                           
   368                           ;blinking.c: 32: if(INTF) {
   369  005E  1C8B               	btfss	11,1	;volatile
   370  005F  2864               	goto	i1l34
   371                           
   372                           ;blinking.c: 33: INTF = 0;
   373  0060  108B               	bcf	11,1	;volatile
   374                           
   375                           ;blinking.c: 34: btn_stat ^= 1;
   376  0061  3001               	movlw	(0+1) shl (_btn_stat& (0+7))
   377  0062  06F9               	xorwf	_btn_stat/(0+8),f
   378                           
   379                           ;blinking.c: 35: }
   380  0063  2868               	goto	i1l35
   381  0064                     i1l34:	
   382                           
   383                           ;blinking.c: 36: else if(T0IF) {
   384  0064  1D0B               	btfss	11,2	;volatile
   385  0065  2868               	goto	i1l35
   386                           
   387                           ;blinking.c: 37: T0IF = 0;
   388  0066  110B               	bcf	11,2	;volatile
   389                           
   390                           ;blinking.c: 38: count_flag = 1;
   391  0067  14F9               	bsf	_count_flag/(0+8),_count_flag& (0+7)
   392  0068                     i1l35:	
   393                           
   394                           ;blinking.c: 39: }
   395                           ;blinking.c: 40: GIE = 1;
   396  0068  178B               	bsf	11,7	;volatile
   397  0069  0873               	movf	??_ISR+3,w
   398  006A  00FF               	movwf	127
   399  006B  0872               	movf	??_ISR+2,w
   400  006C  008A               	movwf	10
   401  006D  0871               	movf	??_ISR+1,w
   402  006E  0084               	movwf	4
   403  006F  0E70               	swapf	??_ISR^(0+-128),w
   404  0070  0083               	movwf	3
   405  0071  0EFE               	swapf	126,f
   406  0072  0E7E               	swapf	126,w
   407  0073  0009               	retfie
   408  0074                     __end_of_ISR:	
   409  007E                     btemp	set	126	;btemp
   410  007E                     wtemp	set	126
   411  007E                     wtemp0	set	126
   412  0080                     wtemp1	set	128
   413  0082                     wtemp2	set	130
   414  0084                     wtemp3	set	132
   415  0086                     wtemp4	set	134
   416  0088                     wtemp5	set	136
   417  007F                     wtemp6	set	127
   418  007E                     ttemp	set	126
   419  007E                     ttemp0	set	126
   420  0081                     ttemp1	set	129
   421  0084                     ttemp2	set	132
   422  0087                     ttemp3	set	135
   423  007F                     ttemp4	set	127
   424  007E                     ltemp	set	126
   425  007E                     ltemp0	set	126
   426  0082                     ltemp1	set	130
   427  0086                     ltemp2	set	134
   428  0080                     ltemp3	set	128
   429                           
   430                           	psect	intentry
   431  0004                     __pintentry:	
   432                           ;incstack = 0
   433                           ; Regs used in _ISR: [wreg]
   434                           
   435  0004                     interrupt_function:	
   436  007E                     saved_w	set	btemp
   437  0004  00FE               	movwf	btemp
   438  0005  0E03               	swapf	3,w
   439  0006  00F0               	movwf	??_ISR
   440  0007  0804               	movf	4,w
   441  0008  00F1               	movwf	??_ISR+1
   442  0009  080A               	movf	10,w
   443  000A  00F2               	movwf	??_ISR+2
   444  000B  1283               	bcf	3,5	;RP0=0, select bank0
   445  000C  1303               	bcf	3,6	;RP1=0, select bank0
   446  000D  087F               	movf	btemp+1,w
   447  000E  00F3               	movwf	??_ISR+3
   448  000F  120A  118A  285D   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     116
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2     116
                                              4 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Mar 02 22:34:46 2025

            __CFG_CP$OFF 0000                       l27 0047                       u25 0051  
                    l532 0029                      _GIE 005F             __CFG_CPD$OFF 0000  
                    _ISR 005D                      fsr0 0004             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     _T0IE 005D  
                   _T0IF 005A                     _INTE 005C                     _INTF 0059  
                   i1l34 0064                     i1l35 0068             __CFG_WRT$OFF 0000  
                   _main 001A                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 0005                    _TRISA 0085  
                  _TRISB 0086            __CFG_PWRTE$ON 0000                    _delay 0045  
         __pbitbssCOMMON 03C8                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 0045  
                 ??_main 0079                   ?_delay 0074                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0070            __end_of_delay 005D  
                ??_delay 0076               __pmaintext 001A               __pintentry 0004  
             _count_flag 03C9                  __ptext0 0000                  __ptext1 0045  
                __ptext2 005D             __size_of_ISR 0017               delay@flags 0077  
   end_of_initialization 0016      start_initialization 0015              __end_of_ISR 0074  
              ___latbits 0002           __size_of_delay 0018        interrupt_function 0004  
               _btn_stat 03C8            __size_of_main 002B                 _int_flag 03CA  
               delay@num 0074                 intlevel1 0000               _OPTION_REG 0081  
