

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 20 16:52:22 2025

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000C                     	;# 
    28  000D                     	;# 
    29  000E                     	;# 
    30  000E                     	;# 
    31  000F                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001D                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  0087                     	;# 
    54  0088                     	;# 
    55  0089                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0098                     	;# 
    64  0099                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  010F                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  000C                     _PIR1bits	set	12
    76  0006                     _PORTBbits	set	6
    77  001A                     _RCREG	set	26
    78  0018                     _RCSTAbits	set	24
    79  0019                     _TXREG	set	25
    80  009F                     _ADCON1	set	159
    81  0081                     _OPTION_REGbits	set	129
    82  0099                     _SPBRG	set	153
    83  0086                     _TRISBbits	set	134
    84  0087                     _TRISCbits	set	135
    85  0098                     _TXSTAbits	set	152
    86                           
    87                           	psect	text0
    88  0000                     __ptext0:	
    89                           ; #config settings
    90                           
    91                           
    92                           ;psect for function _UART_Transmit
    93  0000                     
    94                           	psect	cinit
    95  07FC                     start_initialization:	
    96  07FC                     __initialization:	
    97  07FC                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  07FC                     __end_of__initialization:	
   101  07FC  0183               	clrf	3
   102  07FD  120A  118A  2F7E   	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMMON
   105  0070                     __pcstackCOMMON:	
   106  0070                     ?_initialize:	
   107  0070                     ??_initialize:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_UART_Init:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     ??_UART_Receive:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0070                     ?_process_command:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0070                     ??_process_command:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ?_main:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     ?_UART_Transmit:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ??_UART_Transmit:	
   129                           ; 0 bytes @ 0x0
   130                           
   131  0070                     ?_UART_Receive:	
   132                           ; 0 bytes @ 0x0
   133                           
   134  0070                     UART_Transmit@data:	
   135                           ; 1 bytes @ 0x0
   136                           
   137  0070                     process_command@value:	
   138                           ; 1 bytes @ 0x0
   139                           
   140                           
   141                           ; 1 bytes @ 0x0
   142  0070                     	ds	1
   143  0071                     ?_UART_TransmitInteger:	
   144  0071                     UART_Receive@dummy:	
   145                           ; 0 bytes @ 0x1
   146                           
   147  0071                     UART_TransmitInteger@value:	
   148                           ; 1 bytes @ 0x1
   149                           
   150                           
   151                           ; 2 bytes @ 0x1
   152  0071                     	ds	2
   153  0073                     ??_UART_Init:	
   154  0073                     ??_UART_TransmitInteger:	
   155                           ; 0 bytes @ 0x3
   156                           
   157                           
   158                           ; 0 bytes @ 0x3
   159  0073                     	ds	3
   160  0076                     UART_Init@dummy:	
   161                           
   162                           ; 1 bytes @ 0x6
   163  0076                     	ds	1
   164  0077                     ??_main:	
   165                           
   166                           ; 0 bytes @ 0x7
   167  0077                     	ds	3
   168  007A                     main@prev_switch_state:	
   169                           
   170                           ; 1 bytes @ 0xA
   171  007A                     	ds	1
   172  007B                     main@rx_data:	
   173                           
   174                           ; 1 bytes @ 0xB
   175  007B                     	ds	1
   176  007C                     main@current_switch_state:	
   177                           
   178                           ; 1 bytes @ 0xC
   179  007C                     	ds	1
   180                           
   181                           	psect	maintext
   182  077E                     __pmaintext:	
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 36 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;  current_swit    1   12[COMMON] unsigned char 
   193 ;;  rx_data         1   11[COMMON] unsigned char 
   194 ;;  prev_switch_    1   10[COMMON] unsigned char 
   195 ;; Return value:  Size  Location     Type
   196 ;;		None               void
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : 17F/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   204 ;;      Params:         0       0       0       0       0
   205 ;;      Locals:         3       0       0       0       0
   206 ;;      Temps:          3       0       0       0       0
   207 ;;      Totals:         6       0       0       0       0
   208 ;;Total ram usage:        6 bytes
   209 ;; Hardware stack levels required when called:    3
   210 ;; This function calls:
   211 ;;		_UART_Init
   212 ;;		_UART_Receive
   213 ;;		_UART_TransmitInteger
   214 ;;		_initialize
   215 ;;		_process_command
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _main
   223  077E                     _main:	
   224                           
   225                           ;main.c: 37: char rx_data;
   226                           ;main.c: 38: unsigned char prev_switch_state = 0xFF;
   227                           
   228                           ;incstack = 0
   229                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   230  077E  30FF               	movlw	255
   231  077F  00F7               	movwf	??_main
   232  0780  0877               	movf	??_main,w
   233  0781  00FA               	movwf	main@prev_switch_state
   234                           
   235                           ;main.c: 39: unsigned char current_switch_state = 0;
   236  0782  01FC               	clrf	main@current_switch_state
   237                           
   238                           ;main.c: 41: initialize();
   239  0783  120A  118A  26F9  120A  118A  	fcall	_initialize
   240                           
   241                           ;main.c: 42: UART_Init();
   242  0788  120A  118A  2748  120A  118A  	fcall	_UART_Init
   243                           
   244                           ;main.c: 44: _delay((unsigned long)((500)*(4000000/4000.0)));
   245  078D  3003               	movlw	3
   246  078E  00F9               	movwf	??_main+2
   247  078F  308A               	movlw	138
   248  0790  00F8               	movwf	??_main+1
   249  0791  3056               	movlw	86
   250  0792  00F7               	movwf	??_main
   251  0793                     u197:	
   252  0793  0BF7               	decfsz	??_main,f
   253  0794  2F93               	goto	u197
   254  0795  0BF8               	decfsz	??_main+1,f
   255  0796  2F93               	goto	u197
   256  0797  0BF9               	decfsz	??_main+2,f
   257  0798  2F93               	goto	u197
   258  0799  2F9A               	nop2
   259  079A                     l619:	
   260                           ;main.c: 46: while (1) {
   261                           
   262                           
   263                           ;main.c: 48: current_switch_state = PORTBbits.RB1;
   264  079A  3000               	movlw	0
   265  079B  1283               	bcf	3,5	;RP0=0, select bank0
   266  079C  1303               	bcf	3,6	;RP1=0, select bank0
   267  079D  1886               	btfsc	6,1	;volatile
   268  079E  3001               	movlw	1
   269  079F  00FC               	movwf	main@current_switch_state
   270                           
   271                           ;main.c: 51: if (current_switch_state != prev_switch_state) {
   272  07A0  087C               	movf	main@current_switch_state,w
   273  07A1  067A               	xorwf	main@prev_switch_state,w
   274  07A2  1903               	skipnz
   275  07A3  2FCE               	goto	l633
   276                           
   277                           ;main.c: 52: _delay((unsigned long)((50)*(4000000/4000.0)));
   278  07A4  3041               	movlw	65
   279  07A5  00F8               	movwf	??_main+1
   280  07A6  30EE               	movlw	238
   281  07A7  00F7               	movwf	??_main
   282  07A8                     u207:	
   283  07A8  0BF7               	decfsz	??_main,f
   284  07A9  2FA8               	goto	u207
   285  07AA  0BF8               	decfsz	??_main+1,f
   286  07AB  2FA8               	goto	u207
   287  07AC  0000               	nop
   288                           
   289                           ;main.c: 53: current_switch_state = PORTBbits.RB1;
   290  07AD  3000               	movlw	0
   291  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   292  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   293  07B0  1886               	btfsc	6,1	;volatile
   294  07B1  3001               	movlw	1
   295  07B2  00FC               	movwf	main@current_switch_state
   296                           
   297                           ;main.c: 55: if (current_switch_state != prev_switch_state) {
   298  07B3  087C               	movf	main@current_switch_state,w
   299  07B4  067A               	xorwf	main@prev_switch_state,w
   300  07B5  1903               	skipnz
   301  07B6  2FCE               	goto	l633
   302                           
   303                           ;main.c: 56: prev_switch_state = current_switch_state;
   304  07B7  087C               	movf	main@current_switch_state,w
   305  07B8  00F7               	movwf	??_main
   306  07B9  0877               	movf	??_main,w
   307  07BA  00FA               	movwf	main@prev_switch_state
   308  07BB                     l40:	
   309                           ;main.c: 59: while (!TXSTAbits.TRMT);
   310                           
   311  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   312  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   313  07BD  1C98               	btfss	24,1	;volatile
   314  07BE  2FBB               	goto	l40
   315  07BF                     l43:	
   316                           ;main.c: 60: while (!PIR1bits.TXIF);
   317                           
   318  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   319  07C0  1E0C               	btfss	12,4	;volatile
   320  07C1  2FBF               	goto	l43
   321                           
   322                           ;main.c: 63: UART_TransmitInteger(current_switch_state);
   323  07C2  087C               	movf	main@current_switch_state,w
   324  07C3  00F7               	movwf	??_main
   325  07C4  01F8               	clrf	??_main+1
   326  07C5  0877               	movf	??_main,w
   327  07C6  00F1               	movwf	UART_TransmitInteger@value
   328  07C7  0878               	movf	??_main+1,w
   329  07C8  00F2               	movwf	UART_TransmitInteger@value+1
   330  07C9  120A  118A  2729  120A  118A  	fcall	_UART_TransmitInteger
   331  07CE                     l633:	
   332                           
   333                           ;main.c: 64: }
   334                           ;main.c: 65: }
   335                           ;main.c: 68: if (PIR1bits.RCIF) {
   336  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   337  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   338  07D0  1E8C               	btfss	12,5	;volatile
   339  07D1  2FF2               	goto	l647
   340                           
   341                           ;main.c: 69: rx_data = UART_Receive();
   342  07D2  120A  118A  2708  120A  118A  	fcall	_UART_Receive
   343  07D7  00F7               	movwf	??_main
   344  07D8  0877               	movf	??_main,w
   345  07D9  00FB               	movwf	main@rx_data
   346                           
   347                           ;main.c: 71: if (rx_data == 'A' || rx_data == 'B') {
   348  07DA  087B               	movf	main@rx_data,w
   349  07DB  3A41               	xorlw	65
   350  07DC  1903               	skipnz
   351  07DD  2FE2               	goto	l641
   352  07DE  087B               	movf	main@rx_data,w
   353  07DF  3A42               	xorlw	66
   354  07E0  1D03               	skipz
   355  07E1  2FE8               	goto	l645
   356  07E2                     l641:	
   357                           
   358                           ;main.c: 72: process_command(rx_data);
   359  07E2  087B               	movf	main@rx_data,w
   360  07E3  120A  118A  2718  120A  118A  	fcall	_process_command
   361  07E8                     l645:	
   362                           ;main.c: 73: }
   363                           ;main.c: 76: while (PIR1bits.RCIF) {
   364                           
   365  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   366  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   367  07EA  1E8C               	btfss	12,5	;volatile
   368  07EB  2FF2               	goto	l647
   369                           
   370                           ;main.c: 77: UART_Receive();
   371  07EC  120A  118A  2708  120A  118A  	fcall	_UART_Receive
   372  07F1  2FE8               	goto	l645
   373  07F2                     l647:	
   374                           
   375                           ;main.c: 78: }
   376                           ;main.c: 79: }
   377                           ;main.c: 81: _delay((unsigned long)((10)*(4000000/4000.0)));
   378  07F2  300D               	movlw	13
   379  07F3  00F8               	movwf	??_main+1
   380  07F4  30FB               	movlw	251
   381  07F5  00F7               	movwf	??_main
   382  07F6                     u217:	
   383  07F6  0BF7               	decfsz	??_main,f
   384  07F7  2FF6               	goto	u217
   385  07F8  0BF8               	decfsz	??_main+1,f
   386  07F9  2FF6               	goto	u217
   387  07FA  2FFB               	nop2
   388  07FB  2F9A               	goto	l619
   389  07FC                     __end_of_main:	
   390                           
   391                           	psect	text1
   392  0718                     __ptext1:	
   393 ;; *************** function _process_command *****************
   394 ;; Defined at:
   395 ;;		line 164 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  value           1    wreg     unsigned char 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  value           1    0[COMMON] unsigned char 
   400 ;; Return value:  Size  Location     Type
   401 ;;		None               void
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         1       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         1       0       0       0       0
   413 ;;Total ram usage:        1 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _process_command
   424  0718                     _process_command:	
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _process_command: [wreg]
   428                           ;process_command@value stored from wreg
   429  0718  00F0               	movwf	process_command@value
   430                           
   431                           ;main.c: 165: if (value == 'A') {
   432  0719  0870               	movf	process_command@value,w
   433  071A  3A41               	xorlw	65
   434  071B  1D03               	skipz
   435  071C  2F21               	goto	l605
   436                           
   437                           ;main.c: 166: PORTBbits.RB0 = 1;
   438  071D  1283               	bcf	3,5	;RP0=0, select bank0
   439  071E  1303               	bcf	3,6	;RP1=0, select bank0
   440  071F  1406               	bsf	6,0	;volatile
   441                           
   442                           ;main.c: 167: } else if (value == 'B') {
   443  0720  0008               	return
   444  0721                     l605:	
   445  0721  0870               	movf	process_command@value,w
   446  0722  3A42               	xorlw	66
   447  0723  1D03               	skipz
   448  0724  0008               	return
   449                           
   450                           ;main.c: 168: PORTBbits.RB0 = 0;
   451  0725  1283               	bcf	3,5	;RP0=0, select bank0
   452  0726  1303               	bcf	3,6	;RP1=0, select bank0
   453  0727  1006               	bcf	6,0	;volatile
   454  0728  0008               	return
   455  0729                     __end_of_process_command:	
   456                           
   457                           	psect	text2
   458  06F9                     __ptext2:	
   459 ;; *************** function _initialize *****************
   460 ;; Defined at:
   461 ;;		line 85 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _initialize
   490  06F9                     _initialize:	
   491                           
   492                           ;main.c: 87: TRISBbits.TRISB0 = 0;
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in _initialize: [wreg]
   496  06F9  1683               	bsf	3,5	;RP0=1, select bank1
   497  06FA  1303               	bcf	3,6	;RP1=0, select bank1
   498  06FB  1006               	bcf	6,0	;volatile
   499                           
   500                           ;main.c: 88: TRISBbits.TRISB1 = 1;
   501  06FC  1486               	bsf	6,1	;volatile
   502                           
   503                           ;main.c: 89: TRISCbits.TRISC6 = 0;
   504  06FD  1307               	bcf	7,6	;volatile
   505                           
   506                           ;main.c: 90: TRISCbits.TRISC7 = 1;
   507  06FE  1787               	bsf	7,7	;volatile
   508                           
   509                           ;main.c: 93: OPTION_REGbits.nRBPU = 0;
   510  06FF  1381               	bcf	1,7	;volatile
   511                           
   512                           ;main.c: 95: PORTBbits.RB0 = 0;
   513  0700  1283               	bcf	3,5	;RP0=0, select bank0
   514  0701  1303               	bcf	3,6	;RP1=0, select bank0
   515  0702  1006               	bcf	6,0	;volatile
   516                           
   517                           ;main.c: 98: ADCON1 = 0x06;
   518  0703  3006               	movlw	6
   519  0704  1683               	bsf	3,5	;RP0=1, select bank1
   520  0705  1303               	bcf	3,6	;RP1=0, select bank1
   521  0706  009F               	movwf	31	;volatile
   522  0707  0008               	return
   523  0708                     __end_of_initialize:	
   524                           
   525                           	psect	text3
   526  0708                     __ptext3:	
   527 ;; *************** function _UART_Receive *****************
   528 ;; Defined at:
   529 ;;		line 139 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  dummy           1    1[COMMON] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      unsigned char 
   536 ;; Registers used:
   537 ;;		wreg
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0
   545 ;;      Temps:          1       0       0       0       0
   546 ;;      Totals:         2       0       0       0       0
   547 ;;Total ram usage:        2 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _UART_Receive
   558  0708                     _UART_Receive:	
   559                           
   560                           ;main.c: 141: if (RCSTAbits.OERR) {
   561                           
   562                           ;incstack = 0
   563                           ; Regs used in _UART_Receive: [wreg]
   564  0708  1283               	bcf	3,5	;RP0=0, select bank0
   565  0709  1303               	bcf	3,6	;RP1=0, select bank0
   566  070A  1C98               	btfss	24,1	;volatile
   567  070B  2F0E               	goto	l75
   568                           
   569                           ;main.c: 142: RCSTAbits.CREN = 0;
   570  070C  1218               	bcf	24,4	;volatile
   571                           
   572                           ;main.c: 143: RCSTAbits.CREN = 1;
   573  070D  1618               	bsf	24,4	;volatile
   574  070E                     l75:	
   575                           
   576                           ;main.c: 144: }
   577                           ;main.c: 147: if (RCSTAbits.FERR) {
   578  070E  1D18               	btfss	24,2	;volatile
   579  070F  2F16               	goto	l597
   580                           
   581                           ;main.c: 148: char dummy = RCREG;
   582  0710  081A               	movf	26,w	;volatile
   583  0711  00F0               	movwf	??_UART_Receive
   584  0712  0870               	movf	??_UART_Receive,w
   585  0713  00F1               	movwf	UART_Receive@dummy
   586                           
   587                           ;main.c: 149: return 0;
   588  0714  3000               	movlw	0
   589  0715  0008               	return
   590  0716                     l597:	
   591                           
   592                           ;main.c: 150: }
   593                           ;main.c: 152: return RCREG;
   594  0716  081A               	movf	26,w	;volatile
   595  0717  0008               	return
   596  0718                     __end_of_UART_Receive:	
   597                           
   598                           	psect	text4
   599  0748                     __ptext4:	
   600 ;; *************** function _UART_Init *****************
   601 ;; Defined at:
   602 ;;		line 101 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  dummy           1    6[COMMON] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;		None               void
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          3       0       0       0       0
   619 ;;      Totals:         4       0       0       0       0
   620 ;;Total ram usage:        4 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    2
   623 ;; This function calls:
   624 ;;		_UART_TransmitInteger
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _UART_Init
   632  0748                     _UART_Init:	
   633                           
   634                           ;main.c: 103: TXSTAbits.BRGH = 1;
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   638  0748  1683               	bsf	3,5	;RP0=1, select bank1
   639  0749  1303               	bcf	3,6	;RP1=0, select bank1
   640  074A  1518               	bsf	24,2	;volatile
   641                           
   642                           ;main.c: 104: SPBRG = 25;
   643  074B  3019               	movlw	25
   644  074C  0099               	movwf	25	;volatile
   645                           
   646                           ;main.c: 105: TXSTAbits.SYNC = 0;
   647  074D  1218               	bcf	24,4	;volatile
   648                           
   649                           ;main.c: 106: RCSTAbits.SPEN = 1;
   650  074E  1283               	bcf	3,5	;RP0=0, select bank0
   651  074F  1303               	bcf	3,6	;RP1=0, select bank0
   652  0750  1798               	bsf	24,7	;volatile
   653                           
   654                           ;main.c: 107: TXSTAbits.TXEN = 1;
   655  0751  1683               	bsf	3,5	;RP0=1, select bank1
   656  0752  1303               	bcf	3,6	;RP1=0, select bank1
   657  0753  1698               	bsf	24,5	;volatile
   658                           
   659                           ;main.c: 108: RCSTAbits.CREN = 1;
   660  0754  1283               	bcf	3,5	;RP0=0, select bank0
   661  0755  1303               	bcf	3,6	;RP1=0, select bank0
   662  0756  1618               	bsf	24,4	;volatile
   663                           
   664                           ;main.c: 111: if (RCSTAbits.OERR) {
   665  0757  1C98               	btfss	24,1	;volatile
   666  0758  2F5B               	goto	l61
   667                           
   668                           ;main.c: 112: RCSTAbits.CREN = 0;
   669  0759  1218               	bcf	24,4	;volatile
   670                           
   671                           ;main.c: 113: RCSTAbits.CREN = 1;
   672  075A  1618               	bsf	24,4	;volatile
   673  075B                     l61:	
   674                           
   675                           ;main.c: 114: }
   676                           ;main.c: 115: if (RCSTAbits.FERR) {
   677  075B  1D18               	btfss	24,2	;volatile
   678  075C  2F61               	goto	l583
   679                           
   680                           ;main.c: 116: char dummy = RCREG;
   681  075D  081A               	movf	26,w	;volatile
   682  075E  00F3               	movwf	??_UART_Init
   683  075F  0873               	movf	??_UART_Init,w
   684  0760  00F6               	movwf	UART_Init@dummy
   685  0761                     l583:	
   686                           
   687                           ;main.c: 117: }
   688                           ;main.c: 120: PIR1bits.TXIF = 0;
   689  0761  120C               	bcf	12,4	;volatile
   690                           
   691                           ;main.c: 121: PIR1bits.RCIF = 0;
   692  0762  128C               	bcf	12,5	;volatile
   693                           
   694                           ;main.c: 129: _delay((unsigned long)((1000)*(4000000/4000.0)));
   695  0763  3006               	movlw	6
   696  0764  00F5               	movwf	??_UART_Init+2
   697  0765  3013               	movlw	19
   698  0766  00F4               	movwf	??_UART_Init+1
   699  0767  30B1               	movlw	177
   700  0768  00F3               	movwf	??_UART_Init
   701  0769                     u227:	
   702  0769  0BF3               	decfsz	??_UART_Init,f
   703  076A  2F69               	goto	u227
   704  076B  0BF4               	decfsz	??_UART_Init+1,f
   705  076C  2F69               	goto	u227
   706  076D  0BF5               	decfsz	??_UART_Init+2,f
   707  076E  2F69               	goto	u227
   708  076F  2F70               	nop2
   709                           
   710                           ;main.c: 130: UART_TransmitInteger(PORTBbits.RB1);
   711  0770  1283               	bcf	3,5	;RP0=0, select bank0
   712  0771  1303               	bcf	3,6	;RP1=0, select bank0
   713  0772  0C06               	rrf	6,w	;volatile
   714  0773  3901               	andlw	1
   715  0774  00F3               	movwf	??_UART_Init
   716  0775  01F4               	clrf	??_UART_Init+1
   717  0776  0873               	movf	??_UART_Init,w
   718  0777  00F1               	movwf	UART_TransmitInteger@value
   719  0778  0874               	movf	??_UART_Init+1,w
   720  0779  00F2               	movwf	UART_TransmitInteger@value+1
   721  077A  120A  118A  2729   	fcall	_UART_TransmitInteger
   722  077D  0008               	return
   723  077E                     __end_of_UART_Init:	
   724                           
   725                           	psect	text5
   726  0729                     __ptext5:	
   727 ;; *************** function _UART_TransmitInteger *****************
   728 ;; Defined at:
   729 ;;		line 155 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  value           2    1[COMMON] int 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;		None               void
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         2       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0
   746 ;;      Totals:         2       0       0       0       0
   747 ;;Total ram usage:        2 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    1
   750 ;; This function calls:
   751 ;;		_UART_Transmit
   752 ;; This function is called by:
   753 ;;		_main
   754 ;;		_UART_Init
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           
   759                           ;psect for function _UART_TransmitInteger
   760  0729                     _UART_TransmitInteger:	
   761                           
   762                           ;main.c: 157: if (value > 0) value = 1;
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _UART_TransmitInteger: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   766  0729  0872               	movf	UART_TransmitInteger@value+1,w
   767  072A  3A80               	xorlw	128
   768  072B  00FF               	movwf	127
   769  072C  3080               	movlw	128
   770  072D  027F               	subwf	127,w
   771  072E  1D03               	skipz
   772  072F  2F32               	goto	u35
   773  0730  3001               	movlw	1
   774  0731  0271               	subwf	UART_TransmitInteger@value,w
   775  0732                     u35:	
   776  0732  1C03               	skipc
   777  0733  2F38               	goto	l553
   778  0734  3001               	movlw	1
   779  0735  00F1               	movwf	UART_TransmitInteger@value
   780  0736  3000               	movlw	0
   781  0737  00F2               	movwf	UART_TransmitInteger@value+1
   782  0738                     l553:	
   783                           
   784                           ;main.c: 158: if (value < 0) value = 0;
   785  0738  1FF2               	btfss	UART_TransmitInteger@value+1,7
   786  0739  2F3C               	goto	l557
   787  073A  01F1               	clrf	UART_TransmitInteger@value
   788  073B  01F2               	clrf	UART_TransmitInteger@value+1
   789  073C                     l557:	
   790                           
   791                           ;main.c: 160: UART_Transmit('0' + value);
   792  073C  0871               	movf	UART_TransmitInteger@value,w
   793  073D  3E30               	addlw	48
   794  073E  120A  118A  26EE  120A  118A  	fcall	_UART_Transmit
   795                           
   796                           ;main.c: 161: UART_Transmit('\n');
   797  0743  300A               	movlw	10
   798  0744  120A  118A  26EE   	fcall	_UART_Transmit
   799  0747  0008               	return
   800  0748                     __end_of_UART_TransmitInteger:	
   801                           
   802                           	psect	text6
   803  06EE                     __ptext6:	
   804 ;; *************** function _UART_Transmit *****************
   805 ;; Defined at:
   806 ;;		line 133 in file "D:\From old laptop\Subjects\Uni\3rd Year M\2nd sem\Embedded Systems\Final\led_test\main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  data            1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  data            1    0[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_UART_TransmitInteger
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _UART_Transmit
   835  06EE                     _UART_Transmit:	
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _UART_Transmit: [wreg]
   839                           ;UART_Transmit@data stored from wreg
   840  06EE  00F0               	movwf	UART_Transmit@data
   841  06EF                     l66:	
   842                           ;main.c: 134: while (!TXSTAbits.TRMT);
   843                           
   844  06EF  1683               	bsf	3,5	;RP0=1, select bank1
   845  06F0  1303               	bcf	3,6	;RP1=0, select bank1
   846  06F1  1C98               	btfss	24,1	;volatile
   847  06F2  2EEF               	goto	l66
   848  06F3                     l69:	
   849                           ;main.c: 135: while (!PIR1bits.TXIF);
   850                           
   851  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   852  06F4  1E0C               	btfss	12,4	;volatile
   853  06F5  2EF3               	goto	l69
   854                           
   855                           ;main.c: 136: TXREG = data;
   856  06F6  0870               	movf	UART_Transmit@data,w
   857  06F7  0099               	movwf	25	;volatile
   858  06F8  0008               	return
   859  06F9                     __end_of_UART_Transmit:	
   860  007E                     btemp	set	126	;btemp
   861  007E                     wtemp	set	126
   862  007E                     wtemp0	set	126
   863  0080                     wtemp1	set	128
   864  0082                     wtemp2	set	130
   865  0084                     wtemp3	set	132
   866  0086                     wtemp4	set	134
   867  0088                     wtemp5	set	136
   868  007F                     wtemp6	set	127
   869  007E                     ttemp	set	126
   870  007E                     ttemp0	set	126
   871  0081                     ttemp1	set	129
   872  0084                     ttemp2	set	132
   873  0087                     ttemp3	set	135
   874  007F                     ttemp4	set	127
   875  007E                     ltemp	set	126
   876  007E                     ltemp0	set	126
   877  0082                     ltemp1	set	130
   878  0086                     ltemp2	set	134
   879  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->_UART_TransmitInteger
    _UART_TransmitInteger->_UART_Transmit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     457
                                              7 COMMON     6     6      0
                          _UART_Init
                       _UART_Receive
               _UART_TransmitInteger
                         _initialize
                    _process_command
 ---------------------------------------------------------------------------------
 (1) _process_command                                      1     1      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Receive                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     4      0     146
                                              3 COMMON     4     4      0
               _UART_TransmitInteger
 ---------------------------------------------------------------------------------
 (1) _UART_TransmitInteger                                 2     0      2     146
                                              1 COMMON     2     0      2
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     _UART_TransmitInteger
       _UART_Transmit
   _UART_Receive
   _UART_TransmitInteger
     _UART_Transmit
   _initialize
   _process_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 20 16:52:22 2025

                  __CFG_CP$OFF 0000                             l40 07BB                             l43 07BF  
                           l61 075B                             l66 06EF                             l75 070E  
                           l69 06F3                             u35 0732              UART_Receive@dummy 0071  
                          l605 0721                            l553 0738                            l641 07E2  
                          l633 07CE                            l619 079A                            l557 073C  
                          l645 07E8                            l583 0761                            l647 07F2  
                          l597 0716                            u207 07A8                            u217 07F6  
                          u227 0769                   __CFG_CPD$OFF 0000                            u197 0793  
                 __CFG_FOSC$XT 0000                   __CFG_LVP$OFF 0000                   __CFG_WRT$OFF 0000  
                         _main 077E                           btemp 007E                  __CFG_BOREN$ON 0000  
                         ltemp 007E                    main@rx_data 007B                           start 0000  
                         ttemp 007E                           wtemp 007E                          ?_main 0070  
                __CFG_WDTE$OFF 0000                          _RCREG 001A                          _SPBRG 0099  
                        _TXREG 0019                  __CFG_PWRTE$ON 0000             __size_of_UART_Init 0036  
        main@prev_switch_state 007A                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          status 0003                          wtemp0 007E  
                        wtemp1 0080                          wtemp2 0082                          wtemp3 0084  
                        wtemp4 0086                          wtemp5 0088                          wtemp6 007F  
              __initialization 07FC                   __end_of_main 07FC                         ??_main 0077  
                       _ADCON1 009F              __end_of_UART_Init 077E       main@current_switch_state 007C  
      __end_of__initialization 07FC          __end_of_UART_Transmit 06F9                 __pcstackCOMMON 0070  
 __end_of_UART_TransmitInteger 0748                 _OPTION_REGbits 0081       __size_of_process_command 0011  
    UART_TransmitInteger@value 0071                     __pmaintext 077E                 UART_Init@dummy 0076  
                ?_UART_Receive 0070                     _initialize 06F9                        __ptext0 0000  
                      __ptext1 0718                        __ptext2 06F9                        __ptext3 0708  
                      __ptext4 0748                        __ptext5 0729                        __ptext6 06EE  
         end_of_initialization 07FC           _UART_TransmitInteger 0729              ??_process_command 0070  
               ??_UART_Receive 0070                      _RCSTAbits 0018                      _UART_Init 0748  
                    _PORTBbits 0006                      _TRISBbits 0086                      _TRISCbits 0087  
        ?_UART_TransmitInteger 0071                      _TXSTAbits 0098                     ?_UART_Init 0070  
                  ?_initialize 0070            start_initialization 07FC           __end_of_UART_Receive 0718  
                    ___latbits 0002         __size_of_UART_Transmit 000B         ??_UART_TransmitInteger 0073  
          __size_of_initialize 000F              UART_Transmit@data 0070                    ??_UART_Init 0073  
              _process_command 0718                  _UART_Transmit 06EE                       _PIR1bits 000C  
         process_command@value 0070                 ?_UART_Transmit 0070          __size_of_UART_Receive 0010  
      __end_of_process_command 0729                   ??_initialize 0070                  __size_of_main 007E  
                 _UART_Receive 0708             __end_of_initialize 0708                ??_UART_Transmit 0070  
             ?_process_command 0070  __size_of_UART_TransmitInteger 001F  
